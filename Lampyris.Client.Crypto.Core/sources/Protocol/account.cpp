// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: account.proto
// Protobuf C++ Version: 5.29.4

#include "account.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace lampyris {
namespace crypto {
namespace protocol {
namespace account {

inline constexpr ResHeartBeat::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : servertime_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ResHeartBeat::ResHeartBeat(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResHeartBeatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResHeartBeatDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResHeartBeatDefaultTypeInternal() {}
  union {
    ResHeartBeat _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResHeartBeatDefaultTypeInternal _ResHeartBeat_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR ReqQueryAssetTransferHistory::ReqQueryAssetTransferHistory(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ReqQueryAssetTransferHistoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqQueryAssetTransferHistoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqQueryAssetTransferHistoryDefaultTypeInternal() {}
  union {
    ReqQueryAssetTransferHistory _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqQueryAssetTransferHistoryDefaultTypeInternal _ReqQueryAssetTransferHistory_default_instance_;

inline constexpr ReqLogin::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : devicemac_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReqLogin::ReqLogin(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReqLoginDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqLoginDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqLoginDefaultTypeInternal() {}
  union {
    ReqLogin _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqLoginDefaultTypeInternal _ReqLogin_default_instance_;

inline constexpr ReqHeartBeat::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : clienttime_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReqHeartBeat::ReqHeartBeat(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReqHeartBeatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqHeartBeatDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqHeartBeatDefaultTypeInternal() {}
  union {
    ReqHeartBeat _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqHeartBeatDefaultTypeInternal _ReqHeartBeat_default_instance_;

inline constexpr ReqAccountSummaryUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : iscancel_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReqAccountSummaryUpdate::ReqAccountSummaryUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReqAccountSummaryUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqAccountSummaryUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqAccountSummaryUpdateDefaultTypeInternal() {}
  union {
    ReqAccountSummaryUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqAccountSummaryUpdateDefaultTypeInternal _ReqAccountSummaryUpdate_default_instance_;

inline constexpr ReqAccountAssetTransfer::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : type_{static_cast< ::lampyris::crypto::protocol::account::AssetTransferType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReqAccountAssetTransfer::ReqAccountAssetTransfer(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReqAccountAssetTransferDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqAccountAssetTransferDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqAccountAssetTransferDefaultTypeInternal() {}
  union {
    ReqAccountAssetTransfer _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqAccountAssetTransferDefaultTypeInternal _ReqAccountAssetTransfer_default_instance_;

inline constexpr AssetTransferHistoryInfoDetailBean::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sourceaccountid_{0},
        targetaccountid_{0},
        amount_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AssetTransferHistoryInfoDetailBean::AssetTransferHistoryInfoDetailBean(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AssetTransferHistoryInfoDetailBeanDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AssetTransferHistoryInfoDetailBeanDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AssetTransferHistoryInfoDetailBeanDefaultTypeInternal() {}
  union {
    AssetTransferHistoryInfoDetailBean _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AssetTransferHistoryInfoDetailBeanDefaultTypeInternal _AssetTransferHistoryInfoDetailBean_default_instance_;

inline constexpr AccountAssetInfoBean::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : balance_{0},
        positionvalue_{0},
        unrealizedpnl_{0},
        dailypnl_{0},
        dailypnlpercentage_{0},
        availablebalance_{0},
        maxwithdrawamount_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AccountAssetInfoBean::AccountAssetInfoBean(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AccountAssetInfoBeanDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AccountAssetInfoBeanDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AccountAssetInfoBeanDefaultTypeInternal() {}
  union {
    AccountAssetInfoBean _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AccountAssetInfoBeanDefaultTypeInternal _AccountAssetInfoBean_default_instance_;

inline constexpr SubAccountInfoBean::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ownername_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        owneremail_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ownerphonenumber_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        assetinfo_{nullptr},
        accountid_{0},
        isroot_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SubAccountInfoBean::SubAccountInfoBean(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubAccountInfoBeanDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubAccountInfoBeanDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubAccountInfoBeanDefaultTypeInternal() {}
  union {
    SubAccountInfoBean _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubAccountInfoBeanDefaultTypeInternal _SubAccountInfoBean_default_instance_;

inline constexpr ResAccountSummaryUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        assetinfo_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ResAccountSummaryUpdate::ResAccountSummaryUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResAccountSummaryUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResAccountSummaryUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResAccountSummaryUpdateDefaultTypeInternal() {}
  union {
    ResAccountSummaryUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResAccountSummaryUpdateDefaultTypeInternal _ResAccountSummaryUpdate_default_instance_;

inline constexpr AssetTransferHistoryInfoBean::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : detailbeanlist_{},
        transferstarttimestamp_{::int64_t{0}},
        transferfinishedtimestamp_{::int64_t{0}},
        type_{static_cast< ::lampyris::crypto::protocol::account::AssetTransferType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AssetTransferHistoryInfoBean::AssetTransferHistoryInfoBean(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AssetTransferHistoryInfoBeanDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AssetTransferHistoryInfoBeanDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AssetTransferHistoryInfoBeanDefaultTypeInternal() {}
  union {
    AssetTransferHistoryInfoBean _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AssetTransferHistoryInfoBeanDefaultTypeInternal _AssetTransferHistoryInfoBean_default_instance_;

inline constexpr ResQuerySubAcccountList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        beanlist_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ResQuerySubAcccountList::ResQuerySubAcccountList(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResQuerySubAcccountListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResQuerySubAcccountListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResQuerySubAcccountListDefaultTypeInternal() {}
  union {
    ResQuerySubAcccountList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResQuerySubAcccountListDefaultTypeInternal _ResQuerySubAcccountList_default_instance_;
}  // namespace account
}  // namespace protocol
}  // namespace crypto
}  // namespace lampyris
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_account_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_account_2eproto = nullptr;
const ::uint32_t
    TableStruct_account_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::ReqLogin, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::ReqLogin, _impl_.devicemac_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::ReqHeartBeat, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::ReqHeartBeat, _impl_.clienttime_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::ResHeartBeat, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::ResHeartBeat, _impl_.servertime_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::AccountAssetInfoBean, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::AccountAssetInfoBean, _impl_.balance_),
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::AccountAssetInfoBean, _impl_.positionvalue_),
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::AccountAssetInfoBean, _impl_.unrealizedpnl_),
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::AccountAssetInfoBean, _impl_.dailypnl_),
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::AccountAssetInfoBean, _impl_.dailypnlpercentage_),
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::AccountAssetInfoBean, _impl_.availablebalance_),
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::AccountAssetInfoBean, _impl_.maxwithdrawamount_),
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::SubAccountInfoBean, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::SubAccountInfoBean, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::SubAccountInfoBean, _impl_.accountid_),
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::SubAccountInfoBean, _impl_.assetinfo_),
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::SubAccountInfoBean, _impl_.ownername_),
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::SubAccountInfoBean, _impl_.owneremail_),
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::SubAccountInfoBean, _impl_.ownerphonenumber_),
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::SubAccountInfoBean, _impl_.isroot_),
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::ResQuerySubAcccountList, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::ResQuerySubAcccountList, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::ResQuerySubAcccountList, _impl_.beanlist_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::ReqAccountSummaryUpdate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::ReqAccountSummaryUpdate, _impl_.iscancel_),
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::ResAccountSummaryUpdate, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::ResAccountSummaryUpdate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::ResAccountSummaryUpdate, _impl_.assetinfo_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::ReqAccountAssetTransfer, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::ReqAccountAssetTransfer, _impl_.type_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean, _impl_.sourceaccountid_),
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean, _impl_.targetaccountid_),
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean, _impl_.amount_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::AssetTransferHistoryInfoBean, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::AssetTransferHistoryInfoBean, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::AssetTransferHistoryInfoBean, _impl_.detailbeanlist_),
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::AssetTransferHistoryInfoBean, _impl_.transferstarttimestamp_),
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::AssetTransferHistoryInfoBean, _impl_.transferfinishedtimestamp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::account::ReqQueryAssetTransferHistory, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::lampyris::crypto::protocol::account::ReqLogin)},
        {9, -1, -1, sizeof(::lampyris::crypto::protocol::account::ReqHeartBeat)},
        {18, -1, -1, sizeof(::lampyris::crypto::protocol::account::ResHeartBeat)},
        {27, -1, -1, sizeof(::lampyris::crypto::protocol::account::AccountAssetInfoBean)},
        {42, 56, -1, sizeof(::lampyris::crypto::protocol::account::SubAccountInfoBean)},
        {62, 71, -1, sizeof(::lampyris::crypto::protocol::account::ResQuerySubAcccountList)},
        {72, -1, -1, sizeof(::lampyris::crypto::protocol::account::ReqAccountSummaryUpdate)},
        {81, 90, -1, sizeof(::lampyris::crypto::protocol::account::ResAccountSummaryUpdate)},
        {91, -1, -1, sizeof(::lampyris::crypto::protocol::account::ReqAccountAssetTransfer)},
        {100, -1, -1, sizeof(::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean)},
        {111, -1, -1, sizeof(::lampyris::crypto::protocol::account::AssetTransferHistoryInfoBean)},
        {123, -1, -1, sizeof(::lampyris::crypto::protocol::account::ReqQueryAssetTransferHistory)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::lampyris::crypto::protocol::account::_ReqLogin_default_instance_._instance,
    &::lampyris::crypto::protocol::account::_ReqHeartBeat_default_instance_._instance,
    &::lampyris::crypto::protocol::account::_ResHeartBeat_default_instance_._instance,
    &::lampyris::crypto::protocol::account::_AccountAssetInfoBean_default_instance_._instance,
    &::lampyris::crypto::protocol::account::_SubAccountInfoBean_default_instance_._instance,
    &::lampyris::crypto::protocol::account::_ResQuerySubAcccountList_default_instance_._instance,
    &::lampyris::crypto::protocol::account::_ReqAccountSummaryUpdate_default_instance_._instance,
    &::lampyris::crypto::protocol::account::_ResAccountSummaryUpdate_default_instance_._instance,
    &::lampyris::crypto::protocol::account::_ReqAccountAssetTransfer_default_instance_._instance,
    &::lampyris::crypto::protocol::account::_AssetTransferHistoryInfoDetailBean_default_instance_._instance,
    &::lampyris::crypto::protocol::account::_AssetTransferHistoryInfoBean_default_instance_._instance,
    &::lampyris::crypto::protocol::account::_ReqQueryAssetTransferHistory_default_instance_._instance,
};
const char descriptor_table_protodef_account_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\raccount.proto\022 lampyris.crypto.protoco"
    "l.account\"\035\n\010ReqLogin\022\021\n\tdeviceMAC\030\001 \001(\t"
    "\"\"\n\014ReqHeartBeat\022\022\n\nclientTime\030\001 \001(\003\"\"\n\014"
    "ResHeartBeat\022\022\n\nserverTime\030\001 \001(\003\"\270\001\n\024Acc"
    "ountAssetInfoBean\022\017\n\007balance\030\001 \001(\001\022\025\n\rpo"
    "sitionValue\030\002 \001(\001\022\025\n\runrealizedPnL\030\003 \001(\001"
    "\022\020\n\010dailyPnL\030\004 \001(\001\022\032\n\022dailyPnLPercentage"
    "\030\005 \001(\001\022\030\n\020availableBalance\030\006 \001(\001\022\031\n\021maxW"
    "ithdrawAmount\030\007 \001(\001\"\303\001\n\022SubAccountInfoBe"
    "an\022\021\n\taccountId\030\001 \001(\005\022I\n\tassetInfo\030\002 \001(\013"
    "26.lampyris.crypto.protocol.account.Acco"
    "untAssetInfoBean\022\021\n\townerName\030\003 \001(\t\022\022\n\no"
    "wnerEmail\030\004 \001(\t\022\030\n\020ownerPhoneNumber\030\005 \001("
    "\t\022\016\n\006isRoot\030\006 \001(\010\"a\n\027ResQuerySubAcccount"
    "List\022F\n\010beanList\030\001 \001(\01324.lampyris.crypto"
    ".protocol.account.SubAccountInfoBean\"+\n\027"
    "ReqAccountSummaryUpdate\022\020\n\010isCancel\030\001 \001("
    "\010\"d\n\027ResAccountSummaryUpdate\022I\n\tassetInf"
    "o\030\001 \001(\01326.lampyris.crypto.protocol.accou"
    "nt.AccountAssetInfoBean\"\\\n\027ReqAccountAss"
    "etTransfer\022A\n\004type\030\001 \001(\01623.lampyris.cryp"
    "to.protocol.account.AssetTransferType\"f\n"
    "\"AssetTransferHistoryInfoDetailBean\022\027\n\017s"
    "ourceAccountId\030\001 \001(\005\022\027\n\017targetAccountId\030"
    "\002 \001(\005\022\016\n\006amount\030\003 \001(\001\"\202\002\n\034AssetTransferH"
    "istoryInfoBean\022A\n\004type\030\001 \001(\01623.lampyris."
    "crypto.protocol.account.AssetTransferTyp"
    "e\022\\\n\016detailBeanList\030\002 \003(\0132D.lampyris.cry"
    "pto.protocol.account.AssetTransferHistor"
    "yInfoDetailBean\022\036\n\026transferStartTimestam"
    "p\030\003 \001(\003\022!\n\031transferFinishedTimestamp\030\004 \001"
    "(\003\"\036\n\034ReqQueryAssetTransferHistory*\\\n\021As"
    "setTransferType\022\033\n\027RE_AVGERAGE_SUB_ACCOU"
    "NT\020\000\022\023\n\017TO_ROOT_ACCOUNT\020\001\022\025\n\021TO_WALLET_A"
    "CCOUNT\020\002b\006proto3"
};
static ::absl::once_flag descriptor_table_account_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_account_2eproto = {
    false,
    false,
    1376,
    descriptor_table_protodef_account_2eproto,
    "account.proto",
    &descriptor_table_account_2eproto_once,
    nullptr,
    0,
    12,
    schemas,
    file_default_instances,
    TableStruct_account_2eproto::offsets,
    file_level_enum_descriptors_account_2eproto,
    file_level_service_descriptors_account_2eproto,
};
namespace lampyris {
namespace crypto {
namespace protocol {
namespace account {
const ::google::protobuf::EnumDescriptor* AssetTransferType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_account_2eproto);
  return file_level_enum_descriptors_account_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t AssetTransferType_internal_data_[] = {
    196608u, 0u, };
bool AssetTransferType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class ReqLogin::_Internal {
 public:
};

ReqLogin::ReqLogin(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lampyris.crypto.protocol.account.ReqLogin)
}
inline PROTOBUF_NDEBUG_INLINE ReqLogin::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::lampyris::crypto::protocol::account::ReqLogin& from_msg)
      : devicemac_(arena, from.devicemac_),
        _cached_size_{0} {}

ReqLogin::ReqLogin(
    ::google::protobuf::Arena* arena,
    const ReqLogin& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ReqLogin* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:lampyris.crypto.protocol.account.ReqLogin)
}
inline PROTOBUF_NDEBUG_INLINE ReqLogin::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : devicemac_(arena),
        _cached_size_{0} {}

inline void ReqLogin::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ReqLogin::~ReqLogin() {
  // @@protoc_insertion_point(destructor:lampyris.crypto.protocol.account.ReqLogin)
  SharedDtor(*this);
}
inline void ReqLogin::SharedDtor(MessageLite& self) {
  ReqLogin& this_ = static_cast<ReqLogin&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.devicemac_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ReqLogin::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ReqLogin(arena);
}
constexpr auto ReqLogin::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ReqLogin),
                                            alignof(ReqLogin));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ReqLogin::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ReqLogin_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ReqLogin::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ReqLogin>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ReqLogin::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ReqLogin>(), &ReqLogin::ByteSizeLong,
            &ReqLogin::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ReqLogin, _impl_._cached_size_),
        false,
    },
    &ReqLogin::kDescriptorMethods,
    &descriptor_table_account_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ReqLogin::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 59, 2> ReqLogin::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::account::ReqLogin>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string deviceMAC = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReqLogin, _impl_.devicemac_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string deviceMAC = 1;
    {PROTOBUF_FIELD_OFFSET(ReqLogin, _impl_.devicemac_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\11\0\0\0\0\0\0"
    "lampyris.crypto.protocol.account.ReqLogin"
    "deviceMAC"
  }},
};

PROTOBUF_NOINLINE void ReqLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:lampyris.crypto.protocol.account.ReqLogin)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.devicemac_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ReqLogin::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ReqLogin& this_ = static_cast<const ReqLogin&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ReqLogin::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ReqLogin& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:lampyris.crypto.protocol.account.ReqLogin)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string deviceMAC = 1;
          if (!this_._internal_devicemac().empty()) {
            const std::string& _s = this_._internal_devicemac();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "lampyris.crypto.protocol.account.ReqLogin.deviceMAC");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:lampyris.crypto.protocol.account.ReqLogin)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ReqLogin::ByteSizeLong(const MessageLite& base) {
          const ReqLogin& this_ = static_cast<const ReqLogin&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ReqLogin::ByteSizeLong() const {
          const ReqLogin& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:lampyris.crypto.protocol.account.ReqLogin)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string deviceMAC = 1;
            if (!this_._internal_devicemac().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_devicemac());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ReqLogin::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReqLogin*>(&to_msg);
  auto& from = static_cast<const ReqLogin&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:lampyris.crypto.protocol.account.ReqLogin)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_devicemac().empty()) {
    _this->_internal_set_devicemac(from._internal_devicemac());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReqLogin::CopyFrom(const ReqLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lampyris.crypto.protocol.account.ReqLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReqLogin::InternalSwap(ReqLogin* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.devicemac_, &other->_impl_.devicemac_, arena);
}

::google::protobuf::Metadata ReqLogin::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReqHeartBeat::_Internal {
 public:
};

ReqHeartBeat::ReqHeartBeat(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lampyris.crypto.protocol.account.ReqHeartBeat)
}
ReqHeartBeat::ReqHeartBeat(
    ::google::protobuf::Arena* arena, const ReqHeartBeat& from)
    : ReqHeartBeat(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ReqHeartBeat::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ReqHeartBeat::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.clienttime_ = {};
}
ReqHeartBeat::~ReqHeartBeat() {
  // @@protoc_insertion_point(destructor:lampyris.crypto.protocol.account.ReqHeartBeat)
  SharedDtor(*this);
}
inline void ReqHeartBeat::SharedDtor(MessageLite& self) {
  ReqHeartBeat& this_ = static_cast<ReqHeartBeat&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ReqHeartBeat::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ReqHeartBeat(arena);
}
constexpr auto ReqHeartBeat::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ReqHeartBeat),
                                            alignof(ReqHeartBeat));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ReqHeartBeat::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ReqHeartBeat_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ReqHeartBeat::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ReqHeartBeat>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ReqHeartBeat::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ReqHeartBeat>(), &ReqHeartBeat::ByteSizeLong,
            &ReqHeartBeat::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ReqHeartBeat, _impl_._cached_size_),
        false,
    },
    &ReqHeartBeat::kDescriptorMethods,
    &descriptor_table_account_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ReqHeartBeat::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ReqHeartBeat::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::account::ReqHeartBeat>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 clientTime = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ReqHeartBeat, _impl_.clienttime_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ReqHeartBeat, _impl_.clienttime_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 clientTime = 1;
    {PROTOBUF_FIELD_OFFSET(ReqHeartBeat, _impl_.clienttime_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ReqHeartBeat::Clear() {
// @@protoc_insertion_point(message_clear_start:lampyris.crypto.protocol.account.ReqHeartBeat)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.clienttime_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ReqHeartBeat::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ReqHeartBeat& this_ = static_cast<const ReqHeartBeat&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ReqHeartBeat::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ReqHeartBeat& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:lampyris.crypto.protocol.account.ReqHeartBeat)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 clientTime = 1;
          if (this_._internal_clienttime() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_clienttime(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:lampyris.crypto.protocol.account.ReqHeartBeat)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ReqHeartBeat::ByteSizeLong(const MessageLite& base) {
          const ReqHeartBeat& this_ = static_cast<const ReqHeartBeat&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ReqHeartBeat::ByteSizeLong() const {
          const ReqHeartBeat& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:lampyris.crypto.protocol.account.ReqHeartBeat)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int64 clientTime = 1;
            if (this_._internal_clienttime() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_clienttime());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ReqHeartBeat::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReqHeartBeat*>(&to_msg);
  auto& from = static_cast<const ReqHeartBeat&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:lampyris.crypto.protocol.account.ReqHeartBeat)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_clienttime() != 0) {
    _this->_impl_.clienttime_ = from._impl_.clienttime_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReqHeartBeat::CopyFrom(const ReqHeartBeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lampyris.crypto.protocol.account.ReqHeartBeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReqHeartBeat::InternalSwap(ReqHeartBeat* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.clienttime_, other->_impl_.clienttime_);
}

::google::protobuf::Metadata ReqHeartBeat::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResHeartBeat::_Internal {
 public:
};

ResHeartBeat::ResHeartBeat(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lampyris.crypto.protocol.account.ResHeartBeat)
}
ResHeartBeat::ResHeartBeat(
    ::google::protobuf::Arena* arena, const ResHeartBeat& from)
    : ResHeartBeat(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ResHeartBeat::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ResHeartBeat::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.servertime_ = {};
}
ResHeartBeat::~ResHeartBeat() {
  // @@protoc_insertion_point(destructor:lampyris.crypto.protocol.account.ResHeartBeat)
  SharedDtor(*this);
}
inline void ResHeartBeat::SharedDtor(MessageLite& self) {
  ResHeartBeat& this_ = static_cast<ResHeartBeat&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ResHeartBeat::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ResHeartBeat(arena);
}
constexpr auto ResHeartBeat::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ResHeartBeat),
                                            alignof(ResHeartBeat));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ResHeartBeat::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ResHeartBeat_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ResHeartBeat::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ResHeartBeat>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ResHeartBeat::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ResHeartBeat>(), &ResHeartBeat::ByteSizeLong,
            &ResHeartBeat::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ResHeartBeat, _impl_._cached_size_),
        false,
    },
    &ResHeartBeat::kDescriptorMethods,
    &descriptor_table_account_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ResHeartBeat::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ResHeartBeat::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::account::ResHeartBeat>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 serverTime = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ResHeartBeat, _impl_.servertime_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ResHeartBeat, _impl_.servertime_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 serverTime = 1;
    {PROTOBUF_FIELD_OFFSET(ResHeartBeat, _impl_.servertime_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ResHeartBeat::Clear() {
// @@protoc_insertion_point(message_clear_start:lampyris.crypto.protocol.account.ResHeartBeat)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.servertime_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ResHeartBeat::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ResHeartBeat& this_ = static_cast<const ResHeartBeat&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ResHeartBeat::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ResHeartBeat& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:lampyris.crypto.protocol.account.ResHeartBeat)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 serverTime = 1;
          if (this_._internal_servertime() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_servertime(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:lampyris.crypto.protocol.account.ResHeartBeat)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ResHeartBeat::ByteSizeLong(const MessageLite& base) {
          const ResHeartBeat& this_ = static_cast<const ResHeartBeat&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ResHeartBeat::ByteSizeLong() const {
          const ResHeartBeat& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:lampyris.crypto.protocol.account.ResHeartBeat)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // int64 serverTime = 1;
            if (this_._internal_servertime() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_servertime());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ResHeartBeat::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResHeartBeat*>(&to_msg);
  auto& from = static_cast<const ResHeartBeat&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:lampyris.crypto.protocol.account.ResHeartBeat)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_servertime() != 0) {
    _this->_impl_.servertime_ = from._impl_.servertime_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResHeartBeat::CopyFrom(const ResHeartBeat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lampyris.crypto.protocol.account.ResHeartBeat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResHeartBeat::InternalSwap(ResHeartBeat* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.servertime_, other->_impl_.servertime_);
}

::google::protobuf::Metadata ResHeartBeat::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AccountAssetInfoBean::_Internal {
 public:
};

AccountAssetInfoBean::AccountAssetInfoBean(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lampyris.crypto.protocol.account.AccountAssetInfoBean)
}
AccountAssetInfoBean::AccountAssetInfoBean(
    ::google::protobuf::Arena* arena, const AccountAssetInfoBean& from)
    : AccountAssetInfoBean(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AccountAssetInfoBean::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AccountAssetInfoBean::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, balance_),
           0,
           offsetof(Impl_, maxwithdrawamount_) -
               offsetof(Impl_, balance_) +
               sizeof(Impl_::maxwithdrawamount_));
}
AccountAssetInfoBean::~AccountAssetInfoBean() {
  // @@protoc_insertion_point(destructor:lampyris.crypto.protocol.account.AccountAssetInfoBean)
  SharedDtor(*this);
}
inline void AccountAssetInfoBean::SharedDtor(MessageLite& self) {
  AccountAssetInfoBean& this_ = static_cast<AccountAssetInfoBean&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AccountAssetInfoBean::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AccountAssetInfoBean(arena);
}
constexpr auto AccountAssetInfoBean::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AccountAssetInfoBean),
                                            alignof(AccountAssetInfoBean));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AccountAssetInfoBean::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AccountAssetInfoBean_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AccountAssetInfoBean::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AccountAssetInfoBean>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AccountAssetInfoBean::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AccountAssetInfoBean>(), &AccountAssetInfoBean::ByteSizeLong,
            &AccountAssetInfoBean::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AccountAssetInfoBean, _impl_._cached_size_),
        false,
    },
    &AccountAssetInfoBean::kDescriptorMethods,
    &descriptor_table_account_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AccountAssetInfoBean::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2> AccountAssetInfoBean::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::account::AccountAssetInfoBean>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double balance = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(AccountAssetInfoBean, _impl_.balance_)}},
    // double positionValue = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(AccountAssetInfoBean, _impl_.positionvalue_)}},
    // double unrealizedPnL = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(AccountAssetInfoBean, _impl_.unrealizedpnl_)}},
    // double dailyPnL = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(AccountAssetInfoBean, _impl_.dailypnl_)}},
    // double dailyPnLPercentage = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(AccountAssetInfoBean, _impl_.dailypnlpercentage_)}},
    // double availableBalance = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 63, 0, PROTOBUF_FIELD_OFFSET(AccountAssetInfoBean, _impl_.availablebalance_)}},
    // double maxWithdrawAmount = 7;
    {::_pbi::TcParser::FastF64S1,
     {57, 63, 0, PROTOBUF_FIELD_OFFSET(AccountAssetInfoBean, _impl_.maxwithdrawamount_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double balance = 1;
    {PROTOBUF_FIELD_OFFSET(AccountAssetInfoBean, _impl_.balance_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double positionValue = 2;
    {PROTOBUF_FIELD_OFFSET(AccountAssetInfoBean, _impl_.positionvalue_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double unrealizedPnL = 3;
    {PROTOBUF_FIELD_OFFSET(AccountAssetInfoBean, _impl_.unrealizedpnl_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double dailyPnL = 4;
    {PROTOBUF_FIELD_OFFSET(AccountAssetInfoBean, _impl_.dailypnl_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double dailyPnLPercentage = 5;
    {PROTOBUF_FIELD_OFFSET(AccountAssetInfoBean, _impl_.dailypnlpercentage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double availableBalance = 6;
    {PROTOBUF_FIELD_OFFSET(AccountAssetInfoBean, _impl_.availablebalance_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double maxWithdrawAmount = 7;
    {PROTOBUF_FIELD_OFFSET(AccountAssetInfoBean, _impl_.maxwithdrawamount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AccountAssetInfoBean::Clear() {
// @@protoc_insertion_point(message_clear_start:lampyris.crypto.protocol.account.AccountAssetInfoBean)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.balance_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.maxwithdrawamount_) -
      reinterpret_cast<char*>(&_impl_.balance_)) + sizeof(_impl_.maxwithdrawamount_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AccountAssetInfoBean::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AccountAssetInfoBean& this_ = static_cast<const AccountAssetInfoBean&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AccountAssetInfoBean::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AccountAssetInfoBean& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:lampyris.crypto.protocol.account.AccountAssetInfoBean)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double balance = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_balance()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_balance(), target);
          }

          // double positionValue = 2;
          if (::absl::bit_cast<::uint64_t>(this_._internal_positionvalue()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_positionvalue(), target);
          }

          // double unrealizedPnL = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_unrealizedpnl()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_unrealizedpnl(), target);
          }

          // double dailyPnL = 4;
          if (::absl::bit_cast<::uint64_t>(this_._internal_dailypnl()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_dailypnl(), target);
          }

          // double dailyPnLPercentage = 5;
          if (::absl::bit_cast<::uint64_t>(this_._internal_dailypnlpercentage()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                5, this_._internal_dailypnlpercentage(), target);
          }

          // double availableBalance = 6;
          if (::absl::bit_cast<::uint64_t>(this_._internal_availablebalance()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                6, this_._internal_availablebalance(), target);
          }

          // double maxWithdrawAmount = 7;
          if (::absl::bit_cast<::uint64_t>(this_._internal_maxwithdrawamount()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                7, this_._internal_maxwithdrawamount(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:lampyris.crypto.protocol.account.AccountAssetInfoBean)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AccountAssetInfoBean::ByteSizeLong(const MessageLite& base) {
          const AccountAssetInfoBean& this_ = static_cast<const AccountAssetInfoBean&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AccountAssetInfoBean::ByteSizeLong() const {
          const AccountAssetInfoBean& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:lampyris.crypto.protocol.account.AccountAssetInfoBean)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double balance = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_balance()) != 0) {
              total_size += 9;
            }
            // double positionValue = 2;
            if (::absl::bit_cast<::uint64_t>(this_._internal_positionvalue()) != 0) {
              total_size += 9;
            }
            // double unrealizedPnL = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_unrealizedpnl()) != 0) {
              total_size += 9;
            }
            // double dailyPnL = 4;
            if (::absl::bit_cast<::uint64_t>(this_._internal_dailypnl()) != 0) {
              total_size += 9;
            }
            // double dailyPnLPercentage = 5;
            if (::absl::bit_cast<::uint64_t>(this_._internal_dailypnlpercentage()) != 0) {
              total_size += 9;
            }
            // double availableBalance = 6;
            if (::absl::bit_cast<::uint64_t>(this_._internal_availablebalance()) != 0) {
              total_size += 9;
            }
            // double maxWithdrawAmount = 7;
            if (::absl::bit_cast<::uint64_t>(this_._internal_maxwithdrawamount()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AccountAssetInfoBean::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AccountAssetInfoBean*>(&to_msg);
  auto& from = static_cast<const AccountAssetInfoBean&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:lampyris.crypto.protocol.account.AccountAssetInfoBean)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_balance()) != 0) {
    _this->_impl_.balance_ = from._impl_.balance_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_positionvalue()) != 0) {
    _this->_impl_.positionvalue_ = from._impl_.positionvalue_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_unrealizedpnl()) != 0) {
    _this->_impl_.unrealizedpnl_ = from._impl_.unrealizedpnl_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_dailypnl()) != 0) {
    _this->_impl_.dailypnl_ = from._impl_.dailypnl_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_dailypnlpercentage()) != 0) {
    _this->_impl_.dailypnlpercentage_ = from._impl_.dailypnlpercentage_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_availablebalance()) != 0) {
    _this->_impl_.availablebalance_ = from._impl_.availablebalance_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_maxwithdrawamount()) != 0) {
    _this->_impl_.maxwithdrawamount_ = from._impl_.maxwithdrawamount_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AccountAssetInfoBean::CopyFrom(const AccountAssetInfoBean& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lampyris.crypto.protocol.account.AccountAssetInfoBean)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AccountAssetInfoBean::InternalSwap(AccountAssetInfoBean* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AccountAssetInfoBean, _impl_.maxwithdrawamount_)
      + sizeof(AccountAssetInfoBean::_impl_.maxwithdrawamount_)
      - PROTOBUF_FIELD_OFFSET(AccountAssetInfoBean, _impl_.balance_)>(
          reinterpret_cast<char*>(&_impl_.balance_),
          reinterpret_cast<char*>(&other->_impl_.balance_));
}

::google::protobuf::Metadata AccountAssetInfoBean::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubAccountInfoBean::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SubAccountInfoBean>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubAccountInfoBean, _impl_._has_bits_);
};

SubAccountInfoBean::SubAccountInfoBean(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lampyris.crypto.protocol.account.SubAccountInfoBean)
}
inline PROTOBUF_NDEBUG_INLINE SubAccountInfoBean::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::lampyris::crypto::protocol::account::SubAccountInfoBean& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        ownername_(arena, from.ownername_),
        owneremail_(arena, from.owneremail_),
        ownerphonenumber_(arena, from.ownerphonenumber_) {}

SubAccountInfoBean::SubAccountInfoBean(
    ::google::protobuf::Arena* arena,
    const SubAccountInfoBean& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubAccountInfoBean* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.assetinfo_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::account::AccountAssetInfoBean>(
                              arena, *from._impl_.assetinfo_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, accountid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, accountid_),
           offsetof(Impl_, isroot_) -
               offsetof(Impl_, accountid_) +
               sizeof(Impl_::isroot_));

  // @@protoc_insertion_point(copy_constructor:lampyris.crypto.protocol.account.SubAccountInfoBean)
}
inline PROTOBUF_NDEBUG_INLINE SubAccountInfoBean::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        ownername_(arena),
        owneremail_(arena),
        ownerphonenumber_(arena) {}

inline void SubAccountInfoBean::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, assetinfo_),
           0,
           offsetof(Impl_, isroot_) -
               offsetof(Impl_, assetinfo_) +
               sizeof(Impl_::isroot_));
}
SubAccountInfoBean::~SubAccountInfoBean() {
  // @@protoc_insertion_point(destructor:lampyris.crypto.protocol.account.SubAccountInfoBean)
  SharedDtor(*this);
}
inline void SubAccountInfoBean::SharedDtor(MessageLite& self) {
  SubAccountInfoBean& this_ = static_cast<SubAccountInfoBean&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.ownername_.Destroy();
  this_._impl_.owneremail_.Destroy();
  this_._impl_.ownerphonenumber_.Destroy();
  delete this_._impl_.assetinfo_;
  this_._impl_.~Impl_();
}

inline void* SubAccountInfoBean::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubAccountInfoBean(arena);
}
constexpr auto SubAccountInfoBean::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubAccountInfoBean),
                                            alignof(SubAccountInfoBean));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubAccountInfoBean::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubAccountInfoBean_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubAccountInfoBean::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubAccountInfoBean>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubAccountInfoBean::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubAccountInfoBean>(), &SubAccountInfoBean::ByteSizeLong,
            &SubAccountInfoBean::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubAccountInfoBean, _impl_._cached_size_),
        false,
    },
    &SubAccountInfoBean::kDescriptorMethods,
    &descriptor_table_account_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubAccountInfoBean::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 95, 2> SubAccountInfoBean::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubAccountInfoBean, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::account::SubAccountInfoBean>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 accountId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubAccountInfoBean, _impl_.accountid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SubAccountInfoBean, _impl_.accountid_)}},
    // .lampyris.crypto.protocol.account.AccountAssetInfoBean assetInfo = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SubAccountInfoBean, _impl_.assetinfo_)}},
    // string ownerName = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SubAccountInfoBean, _impl_.ownername_)}},
    // string ownerEmail = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(SubAccountInfoBean, _impl_.owneremail_)}},
    // string ownerPhoneNumber = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SubAccountInfoBean, _impl_.ownerphonenumber_)}},
    // bool isRoot = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubAccountInfoBean, _impl_.isroot_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(SubAccountInfoBean, _impl_.isroot_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 accountId = 1;
    {PROTOBUF_FIELD_OFFSET(SubAccountInfoBean, _impl_.accountid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .lampyris.crypto.protocol.account.AccountAssetInfoBean assetInfo = 2;
    {PROTOBUF_FIELD_OFFSET(SubAccountInfoBean, _impl_.assetinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string ownerName = 3;
    {PROTOBUF_FIELD_OFFSET(SubAccountInfoBean, _impl_.ownername_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ownerEmail = 4;
    {PROTOBUF_FIELD_OFFSET(SubAccountInfoBean, _impl_.owneremail_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ownerPhoneNumber = 5;
    {PROTOBUF_FIELD_OFFSET(SubAccountInfoBean, _impl_.ownerphonenumber_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool isRoot = 6;
    {PROTOBUF_FIELD_OFFSET(SubAccountInfoBean, _impl_.isroot_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::account::AccountAssetInfoBean>()},
  }}, {{
    "\63\0\0\11\12\20\0\0"
    "lampyris.crypto.protocol.account.SubAccountInfoBean"
    "ownerName"
    "ownerEmail"
    "ownerPhoneNumber"
  }},
};

PROTOBUF_NOINLINE void SubAccountInfoBean::Clear() {
// @@protoc_insertion_point(message_clear_start:lampyris.crypto.protocol.account.SubAccountInfoBean)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ownername_.ClearToEmpty();
  _impl_.owneremail_.ClearToEmpty();
  _impl_.ownerphonenumber_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.assetinfo_ != nullptr);
    _impl_.assetinfo_->Clear();
  }
  ::memset(&_impl_.accountid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.isroot_) -
      reinterpret_cast<char*>(&_impl_.accountid_)) + sizeof(_impl_.isroot_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubAccountInfoBean::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubAccountInfoBean& this_ = static_cast<const SubAccountInfoBean&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubAccountInfoBean::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubAccountInfoBean& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:lampyris.crypto.protocol.account.SubAccountInfoBean)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 accountId = 1;
          if (this_._internal_accountid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_accountid(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .lampyris.crypto.protocol.account.AccountAssetInfoBean assetInfo = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.assetinfo_, this_._impl_.assetinfo_->GetCachedSize(), target,
                stream);
          }

          // string ownerName = 3;
          if (!this_._internal_ownername().empty()) {
            const std::string& _s = this_._internal_ownername();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "lampyris.crypto.protocol.account.SubAccountInfoBean.ownerName");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string ownerEmail = 4;
          if (!this_._internal_owneremail().empty()) {
            const std::string& _s = this_._internal_owneremail();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "lampyris.crypto.protocol.account.SubAccountInfoBean.ownerEmail");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // string ownerPhoneNumber = 5;
          if (!this_._internal_ownerphonenumber().empty()) {
            const std::string& _s = this_._internal_ownerphonenumber();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "lampyris.crypto.protocol.account.SubAccountInfoBean.ownerPhoneNumber");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // bool isRoot = 6;
          if (this_._internal_isroot() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_isroot(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:lampyris.crypto.protocol.account.SubAccountInfoBean)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubAccountInfoBean::ByteSizeLong(const MessageLite& base) {
          const SubAccountInfoBean& this_ = static_cast<const SubAccountInfoBean&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubAccountInfoBean::ByteSizeLong() const {
          const SubAccountInfoBean& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:lampyris.crypto.protocol.account.SubAccountInfoBean)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string ownerName = 3;
            if (!this_._internal_ownername().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_ownername());
            }
            // string ownerEmail = 4;
            if (!this_._internal_owneremail().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_owneremail());
            }
            // string ownerPhoneNumber = 5;
            if (!this_._internal_ownerphonenumber().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_ownerphonenumber());
            }
          }
           {
            // .lampyris.crypto.protocol.account.AccountAssetInfoBean assetInfo = 2;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.assetinfo_);
            }
          }
           {
            // int32 accountId = 1;
            if (this_._internal_accountid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_accountid());
            }
            // bool isRoot = 6;
            if (this_._internal_isroot() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubAccountInfoBean::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubAccountInfoBean*>(&to_msg);
  auto& from = static_cast<const SubAccountInfoBean&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:lampyris.crypto.protocol.account.SubAccountInfoBean)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ownername().empty()) {
    _this->_internal_set_ownername(from._internal_ownername());
  }
  if (!from._internal_owneremail().empty()) {
    _this->_internal_set_owneremail(from._internal_owneremail());
  }
  if (!from._internal_ownerphonenumber().empty()) {
    _this->_internal_set_ownerphonenumber(from._internal_ownerphonenumber());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.assetinfo_ != nullptr);
    if (_this->_impl_.assetinfo_ == nullptr) {
      _this->_impl_.assetinfo_ =
          ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::account::AccountAssetInfoBean>(arena, *from._impl_.assetinfo_);
    } else {
      _this->_impl_.assetinfo_->MergeFrom(*from._impl_.assetinfo_);
    }
  }
  if (from._internal_accountid() != 0) {
    _this->_impl_.accountid_ = from._impl_.accountid_;
  }
  if (from._internal_isroot() != 0) {
    _this->_impl_.isroot_ = from._impl_.isroot_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubAccountInfoBean::CopyFrom(const SubAccountInfoBean& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lampyris.crypto.protocol.account.SubAccountInfoBean)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubAccountInfoBean::InternalSwap(SubAccountInfoBean* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ownername_, &other->_impl_.ownername_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.owneremail_, &other->_impl_.owneremail_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ownerphonenumber_, &other->_impl_.ownerphonenumber_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubAccountInfoBean, _impl_.isroot_)
      + sizeof(SubAccountInfoBean::_impl_.isroot_)
      - PROTOBUF_FIELD_OFFSET(SubAccountInfoBean, _impl_.assetinfo_)>(
          reinterpret_cast<char*>(&_impl_.assetinfo_),
          reinterpret_cast<char*>(&other->_impl_.assetinfo_));
}

::google::protobuf::Metadata SubAccountInfoBean::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResQuerySubAcccountList::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ResQuerySubAcccountList>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ResQuerySubAcccountList, _impl_._has_bits_);
};

ResQuerySubAcccountList::ResQuerySubAcccountList(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lampyris.crypto.protocol.account.ResQuerySubAcccountList)
}
inline PROTOBUF_NDEBUG_INLINE ResQuerySubAcccountList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::lampyris::crypto::protocol::account::ResQuerySubAcccountList& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ResQuerySubAcccountList::ResQuerySubAcccountList(
    ::google::protobuf::Arena* arena,
    const ResQuerySubAcccountList& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ResQuerySubAcccountList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.beanlist_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::account::SubAccountInfoBean>(
                              arena, *from._impl_.beanlist_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:lampyris.crypto.protocol.account.ResQuerySubAcccountList)
}
inline PROTOBUF_NDEBUG_INLINE ResQuerySubAcccountList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ResQuerySubAcccountList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.beanlist_ = {};
}
ResQuerySubAcccountList::~ResQuerySubAcccountList() {
  // @@protoc_insertion_point(destructor:lampyris.crypto.protocol.account.ResQuerySubAcccountList)
  SharedDtor(*this);
}
inline void ResQuerySubAcccountList::SharedDtor(MessageLite& self) {
  ResQuerySubAcccountList& this_ = static_cast<ResQuerySubAcccountList&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.beanlist_;
  this_._impl_.~Impl_();
}

inline void* ResQuerySubAcccountList::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ResQuerySubAcccountList(arena);
}
constexpr auto ResQuerySubAcccountList::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ResQuerySubAcccountList),
                                            alignof(ResQuerySubAcccountList));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ResQuerySubAcccountList::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ResQuerySubAcccountList_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ResQuerySubAcccountList::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ResQuerySubAcccountList>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ResQuerySubAcccountList::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ResQuerySubAcccountList>(), &ResQuerySubAcccountList::ByteSizeLong,
            &ResQuerySubAcccountList::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ResQuerySubAcccountList, _impl_._cached_size_),
        false,
    },
    &ResQuerySubAcccountList::kDescriptorMethods,
    &descriptor_table_account_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ResQuerySubAcccountList::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ResQuerySubAcccountList::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ResQuerySubAcccountList, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::account::ResQuerySubAcccountList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .lampyris.crypto.protocol.account.SubAccountInfoBean beanList = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ResQuerySubAcccountList, _impl_.beanlist_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .lampyris.crypto.protocol.account.SubAccountInfoBean beanList = 1;
    {PROTOBUF_FIELD_OFFSET(ResQuerySubAcccountList, _impl_.beanlist_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::account::SubAccountInfoBean>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ResQuerySubAcccountList::Clear() {
// @@protoc_insertion_point(message_clear_start:lampyris.crypto.protocol.account.ResQuerySubAcccountList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.beanlist_ != nullptr);
    _impl_.beanlist_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ResQuerySubAcccountList::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ResQuerySubAcccountList& this_ = static_cast<const ResQuerySubAcccountList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ResQuerySubAcccountList::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ResQuerySubAcccountList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:lampyris.crypto.protocol.account.ResQuerySubAcccountList)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .lampyris.crypto.protocol.account.SubAccountInfoBean beanList = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.beanlist_, this_._impl_.beanlist_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:lampyris.crypto.protocol.account.ResQuerySubAcccountList)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ResQuerySubAcccountList::ByteSizeLong(const MessageLite& base) {
          const ResQuerySubAcccountList& this_ = static_cast<const ResQuerySubAcccountList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ResQuerySubAcccountList::ByteSizeLong() const {
          const ResQuerySubAcccountList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:lampyris.crypto.protocol.account.ResQuerySubAcccountList)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .lampyris.crypto.protocol.account.SubAccountInfoBean beanList = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.beanlist_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ResQuerySubAcccountList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResQuerySubAcccountList*>(&to_msg);
  auto& from = static_cast<const ResQuerySubAcccountList&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:lampyris.crypto.protocol.account.ResQuerySubAcccountList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.beanlist_ != nullptr);
    if (_this->_impl_.beanlist_ == nullptr) {
      _this->_impl_.beanlist_ =
          ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::account::SubAccountInfoBean>(arena, *from._impl_.beanlist_);
    } else {
      _this->_impl_.beanlist_->MergeFrom(*from._impl_.beanlist_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResQuerySubAcccountList::CopyFrom(const ResQuerySubAcccountList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lampyris.crypto.protocol.account.ResQuerySubAcccountList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResQuerySubAcccountList::InternalSwap(ResQuerySubAcccountList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.beanlist_, other->_impl_.beanlist_);
}

::google::protobuf::Metadata ResQuerySubAcccountList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReqAccountSummaryUpdate::_Internal {
 public:
};

ReqAccountSummaryUpdate::ReqAccountSummaryUpdate(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lampyris.crypto.protocol.account.ReqAccountSummaryUpdate)
}
ReqAccountSummaryUpdate::ReqAccountSummaryUpdate(
    ::google::protobuf::Arena* arena, const ReqAccountSummaryUpdate& from)
    : ReqAccountSummaryUpdate(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ReqAccountSummaryUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ReqAccountSummaryUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.iscancel_ = {};
}
ReqAccountSummaryUpdate::~ReqAccountSummaryUpdate() {
  // @@protoc_insertion_point(destructor:lampyris.crypto.protocol.account.ReqAccountSummaryUpdate)
  SharedDtor(*this);
}
inline void ReqAccountSummaryUpdate::SharedDtor(MessageLite& self) {
  ReqAccountSummaryUpdate& this_ = static_cast<ReqAccountSummaryUpdate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ReqAccountSummaryUpdate::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ReqAccountSummaryUpdate(arena);
}
constexpr auto ReqAccountSummaryUpdate::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ReqAccountSummaryUpdate),
                                            alignof(ReqAccountSummaryUpdate));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ReqAccountSummaryUpdate::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ReqAccountSummaryUpdate_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ReqAccountSummaryUpdate::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ReqAccountSummaryUpdate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ReqAccountSummaryUpdate::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ReqAccountSummaryUpdate>(), &ReqAccountSummaryUpdate::ByteSizeLong,
            &ReqAccountSummaryUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ReqAccountSummaryUpdate, _impl_._cached_size_),
        false,
    },
    &ReqAccountSummaryUpdate::kDescriptorMethods,
    &descriptor_table_account_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ReqAccountSummaryUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ReqAccountSummaryUpdate::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::account::ReqAccountSummaryUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool isCancel = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ReqAccountSummaryUpdate, _impl_.iscancel_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ReqAccountSummaryUpdate, _impl_.iscancel_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool isCancel = 1;
    {PROTOBUF_FIELD_OFFSET(ReqAccountSummaryUpdate, _impl_.iscancel_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ReqAccountSummaryUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:lampyris.crypto.protocol.account.ReqAccountSummaryUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.iscancel_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ReqAccountSummaryUpdate::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ReqAccountSummaryUpdate& this_ = static_cast<const ReqAccountSummaryUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ReqAccountSummaryUpdate::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ReqAccountSummaryUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:lampyris.crypto.protocol.account.ReqAccountSummaryUpdate)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool isCancel = 1;
          if (this_._internal_iscancel() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_iscancel(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:lampyris.crypto.protocol.account.ReqAccountSummaryUpdate)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ReqAccountSummaryUpdate::ByteSizeLong(const MessageLite& base) {
          const ReqAccountSummaryUpdate& this_ = static_cast<const ReqAccountSummaryUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ReqAccountSummaryUpdate::ByteSizeLong() const {
          const ReqAccountSummaryUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:lampyris.crypto.protocol.account.ReqAccountSummaryUpdate)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bool isCancel = 1;
            if (this_._internal_iscancel() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ReqAccountSummaryUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReqAccountSummaryUpdate*>(&to_msg);
  auto& from = static_cast<const ReqAccountSummaryUpdate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:lampyris.crypto.protocol.account.ReqAccountSummaryUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_iscancel() != 0) {
    _this->_impl_.iscancel_ = from._impl_.iscancel_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReqAccountSummaryUpdate::CopyFrom(const ReqAccountSummaryUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lampyris.crypto.protocol.account.ReqAccountSummaryUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReqAccountSummaryUpdate::InternalSwap(ReqAccountSummaryUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.iscancel_, other->_impl_.iscancel_);
}

::google::protobuf::Metadata ReqAccountSummaryUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResAccountSummaryUpdate::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ResAccountSummaryUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ResAccountSummaryUpdate, _impl_._has_bits_);
};

ResAccountSummaryUpdate::ResAccountSummaryUpdate(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lampyris.crypto.protocol.account.ResAccountSummaryUpdate)
}
inline PROTOBUF_NDEBUG_INLINE ResAccountSummaryUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::lampyris::crypto::protocol::account::ResAccountSummaryUpdate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ResAccountSummaryUpdate::ResAccountSummaryUpdate(
    ::google::protobuf::Arena* arena,
    const ResAccountSummaryUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ResAccountSummaryUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.assetinfo_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::account::AccountAssetInfoBean>(
                              arena, *from._impl_.assetinfo_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:lampyris.crypto.protocol.account.ResAccountSummaryUpdate)
}
inline PROTOBUF_NDEBUG_INLINE ResAccountSummaryUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ResAccountSummaryUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.assetinfo_ = {};
}
ResAccountSummaryUpdate::~ResAccountSummaryUpdate() {
  // @@protoc_insertion_point(destructor:lampyris.crypto.protocol.account.ResAccountSummaryUpdate)
  SharedDtor(*this);
}
inline void ResAccountSummaryUpdate::SharedDtor(MessageLite& self) {
  ResAccountSummaryUpdate& this_ = static_cast<ResAccountSummaryUpdate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.assetinfo_;
  this_._impl_.~Impl_();
}

inline void* ResAccountSummaryUpdate::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ResAccountSummaryUpdate(arena);
}
constexpr auto ResAccountSummaryUpdate::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ResAccountSummaryUpdate),
                                            alignof(ResAccountSummaryUpdate));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ResAccountSummaryUpdate::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ResAccountSummaryUpdate_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ResAccountSummaryUpdate::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ResAccountSummaryUpdate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ResAccountSummaryUpdate::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ResAccountSummaryUpdate>(), &ResAccountSummaryUpdate::ByteSizeLong,
            &ResAccountSummaryUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ResAccountSummaryUpdate, _impl_._cached_size_),
        false,
    },
    &ResAccountSummaryUpdate::kDescriptorMethods,
    &descriptor_table_account_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ResAccountSummaryUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ResAccountSummaryUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ResAccountSummaryUpdate, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::account::ResAccountSummaryUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .lampyris.crypto.protocol.account.AccountAssetInfoBean assetInfo = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ResAccountSummaryUpdate, _impl_.assetinfo_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .lampyris.crypto.protocol.account.AccountAssetInfoBean assetInfo = 1;
    {PROTOBUF_FIELD_OFFSET(ResAccountSummaryUpdate, _impl_.assetinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::account::AccountAssetInfoBean>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ResAccountSummaryUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:lampyris.crypto.protocol.account.ResAccountSummaryUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.assetinfo_ != nullptr);
    _impl_.assetinfo_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ResAccountSummaryUpdate::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ResAccountSummaryUpdate& this_ = static_cast<const ResAccountSummaryUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ResAccountSummaryUpdate::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ResAccountSummaryUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:lampyris.crypto.protocol.account.ResAccountSummaryUpdate)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .lampyris.crypto.protocol.account.AccountAssetInfoBean assetInfo = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.assetinfo_, this_._impl_.assetinfo_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:lampyris.crypto.protocol.account.ResAccountSummaryUpdate)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ResAccountSummaryUpdate::ByteSizeLong(const MessageLite& base) {
          const ResAccountSummaryUpdate& this_ = static_cast<const ResAccountSummaryUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ResAccountSummaryUpdate::ByteSizeLong() const {
          const ResAccountSummaryUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:lampyris.crypto.protocol.account.ResAccountSummaryUpdate)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .lampyris.crypto.protocol.account.AccountAssetInfoBean assetInfo = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.assetinfo_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ResAccountSummaryUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResAccountSummaryUpdate*>(&to_msg);
  auto& from = static_cast<const ResAccountSummaryUpdate&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:lampyris.crypto.protocol.account.ResAccountSummaryUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.assetinfo_ != nullptr);
    if (_this->_impl_.assetinfo_ == nullptr) {
      _this->_impl_.assetinfo_ =
          ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::account::AccountAssetInfoBean>(arena, *from._impl_.assetinfo_);
    } else {
      _this->_impl_.assetinfo_->MergeFrom(*from._impl_.assetinfo_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResAccountSummaryUpdate::CopyFrom(const ResAccountSummaryUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lampyris.crypto.protocol.account.ResAccountSummaryUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResAccountSummaryUpdate::InternalSwap(ResAccountSummaryUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.assetinfo_, other->_impl_.assetinfo_);
}

::google::protobuf::Metadata ResAccountSummaryUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReqAccountAssetTransfer::_Internal {
 public:
};

ReqAccountAssetTransfer::ReqAccountAssetTransfer(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lampyris.crypto.protocol.account.ReqAccountAssetTransfer)
}
ReqAccountAssetTransfer::ReqAccountAssetTransfer(
    ::google::protobuf::Arena* arena, const ReqAccountAssetTransfer& from)
    : ReqAccountAssetTransfer(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE ReqAccountAssetTransfer::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ReqAccountAssetTransfer::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
ReqAccountAssetTransfer::~ReqAccountAssetTransfer() {
  // @@protoc_insertion_point(destructor:lampyris.crypto.protocol.account.ReqAccountAssetTransfer)
  SharedDtor(*this);
}
inline void ReqAccountAssetTransfer::SharedDtor(MessageLite& self) {
  ReqAccountAssetTransfer& this_ = static_cast<ReqAccountAssetTransfer&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ReqAccountAssetTransfer::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ReqAccountAssetTransfer(arena);
}
constexpr auto ReqAccountAssetTransfer::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ReqAccountAssetTransfer),
                                            alignof(ReqAccountAssetTransfer));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ReqAccountAssetTransfer::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ReqAccountAssetTransfer_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ReqAccountAssetTransfer::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ReqAccountAssetTransfer>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ReqAccountAssetTransfer::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ReqAccountAssetTransfer>(), &ReqAccountAssetTransfer::ByteSizeLong,
            &ReqAccountAssetTransfer::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ReqAccountAssetTransfer, _impl_._cached_size_),
        false,
    },
    &ReqAccountAssetTransfer::kDescriptorMethods,
    &descriptor_table_account_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ReqAccountAssetTransfer::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ReqAccountAssetTransfer::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::account::ReqAccountAssetTransfer>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .lampyris.crypto.protocol.account.AssetTransferType type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ReqAccountAssetTransfer, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ReqAccountAssetTransfer, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .lampyris.crypto.protocol.account.AssetTransferType type = 1;
    {PROTOBUF_FIELD_OFFSET(ReqAccountAssetTransfer, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ReqAccountAssetTransfer::Clear() {
// @@protoc_insertion_point(message_clear_start:lampyris.crypto.protocol.account.ReqAccountAssetTransfer)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ReqAccountAssetTransfer::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ReqAccountAssetTransfer& this_ = static_cast<const ReqAccountAssetTransfer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ReqAccountAssetTransfer::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ReqAccountAssetTransfer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:lampyris.crypto.protocol.account.ReqAccountAssetTransfer)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .lampyris.crypto.protocol.account.AssetTransferType type = 1;
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:lampyris.crypto.protocol.account.ReqAccountAssetTransfer)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ReqAccountAssetTransfer::ByteSizeLong(const MessageLite& base) {
          const ReqAccountAssetTransfer& this_ = static_cast<const ReqAccountAssetTransfer&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ReqAccountAssetTransfer::ByteSizeLong() const {
          const ReqAccountAssetTransfer& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:lampyris.crypto.protocol.account.ReqAccountAssetTransfer)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .lampyris.crypto.protocol.account.AssetTransferType type = 1;
            if (this_._internal_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ReqAccountAssetTransfer::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReqAccountAssetTransfer*>(&to_msg);
  auto& from = static_cast<const ReqAccountAssetTransfer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:lampyris.crypto.protocol.account.ReqAccountAssetTransfer)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReqAccountAssetTransfer::CopyFrom(const ReqAccountAssetTransfer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lampyris.crypto.protocol.account.ReqAccountAssetTransfer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReqAccountAssetTransfer::InternalSwap(ReqAccountAssetTransfer* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata ReqAccountAssetTransfer::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AssetTransferHistoryInfoDetailBean::_Internal {
 public:
};

AssetTransferHistoryInfoDetailBean::AssetTransferHistoryInfoDetailBean(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lampyris.crypto.protocol.account.AssetTransferHistoryInfoDetailBean)
}
AssetTransferHistoryInfoDetailBean::AssetTransferHistoryInfoDetailBean(
    ::google::protobuf::Arena* arena, const AssetTransferHistoryInfoDetailBean& from)
    : AssetTransferHistoryInfoDetailBean(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AssetTransferHistoryInfoDetailBean::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AssetTransferHistoryInfoDetailBean::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sourceaccountid_),
           0,
           offsetof(Impl_, amount_) -
               offsetof(Impl_, sourceaccountid_) +
               sizeof(Impl_::amount_));
}
AssetTransferHistoryInfoDetailBean::~AssetTransferHistoryInfoDetailBean() {
  // @@protoc_insertion_point(destructor:lampyris.crypto.protocol.account.AssetTransferHistoryInfoDetailBean)
  SharedDtor(*this);
}
inline void AssetTransferHistoryInfoDetailBean::SharedDtor(MessageLite& self) {
  AssetTransferHistoryInfoDetailBean& this_ = static_cast<AssetTransferHistoryInfoDetailBean&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AssetTransferHistoryInfoDetailBean::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AssetTransferHistoryInfoDetailBean(arena);
}
constexpr auto AssetTransferHistoryInfoDetailBean::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AssetTransferHistoryInfoDetailBean),
                                            alignof(AssetTransferHistoryInfoDetailBean));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AssetTransferHistoryInfoDetailBean::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AssetTransferHistoryInfoDetailBean_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AssetTransferHistoryInfoDetailBean::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AssetTransferHistoryInfoDetailBean>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AssetTransferHistoryInfoDetailBean::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AssetTransferHistoryInfoDetailBean>(), &AssetTransferHistoryInfoDetailBean::ByteSizeLong,
            &AssetTransferHistoryInfoDetailBean::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AssetTransferHistoryInfoDetailBean, _impl_._cached_size_),
        false,
    },
    &AssetTransferHistoryInfoDetailBean::kDescriptorMethods,
    &descriptor_table_account_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AssetTransferHistoryInfoDetailBean::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> AssetTransferHistoryInfoDetailBean::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 sourceAccountId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AssetTransferHistoryInfoDetailBean, _impl_.sourceaccountid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AssetTransferHistoryInfoDetailBean, _impl_.sourceaccountid_)}},
    // int32 targetAccountId = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AssetTransferHistoryInfoDetailBean, _impl_.targetaccountid_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AssetTransferHistoryInfoDetailBean, _impl_.targetaccountid_)}},
    // double amount = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(AssetTransferHistoryInfoDetailBean, _impl_.amount_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 sourceAccountId = 1;
    {PROTOBUF_FIELD_OFFSET(AssetTransferHistoryInfoDetailBean, _impl_.sourceaccountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 targetAccountId = 2;
    {PROTOBUF_FIELD_OFFSET(AssetTransferHistoryInfoDetailBean, _impl_.targetaccountid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // double amount = 3;
    {PROTOBUF_FIELD_OFFSET(AssetTransferHistoryInfoDetailBean, _impl_.amount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void AssetTransferHistoryInfoDetailBean::Clear() {
// @@protoc_insertion_point(message_clear_start:lampyris.crypto.protocol.account.AssetTransferHistoryInfoDetailBean)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.sourceaccountid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.amount_) -
      reinterpret_cast<char*>(&_impl_.sourceaccountid_)) + sizeof(_impl_.amount_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AssetTransferHistoryInfoDetailBean::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AssetTransferHistoryInfoDetailBean& this_ = static_cast<const AssetTransferHistoryInfoDetailBean&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AssetTransferHistoryInfoDetailBean::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AssetTransferHistoryInfoDetailBean& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:lampyris.crypto.protocol.account.AssetTransferHistoryInfoDetailBean)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 sourceAccountId = 1;
          if (this_._internal_sourceaccountid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_sourceaccountid(), target);
          }

          // int32 targetAccountId = 2;
          if (this_._internal_targetaccountid() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_targetaccountid(), target);
          }

          // double amount = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_amount()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_amount(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:lampyris.crypto.protocol.account.AssetTransferHistoryInfoDetailBean)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AssetTransferHistoryInfoDetailBean::ByteSizeLong(const MessageLite& base) {
          const AssetTransferHistoryInfoDetailBean& this_ = static_cast<const AssetTransferHistoryInfoDetailBean&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AssetTransferHistoryInfoDetailBean::ByteSizeLong() const {
          const AssetTransferHistoryInfoDetailBean& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:lampyris.crypto.protocol.account.AssetTransferHistoryInfoDetailBean)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 sourceAccountId = 1;
            if (this_._internal_sourceaccountid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_sourceaccountid());
            }
            // int32 targetAccountId = 2;
            if (this_._internal_targetaccountid() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_targetaccountid());
            }
            // double amount = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_amount()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AssetTransferHistoryInfoDetailBean::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AssetTransferHistoryInfoDetailBean*>(&to_msg);
  auto& from = static_cast<const AssetTransferHistoryInfoDetailBean&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:lampyris.crypto.protocol.account.AssetTransferHistoryInfoDetailBean)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_sourceaccountid() != 0) {
    _this->_impl_.sourceaccountid_ = from._impl_.sourceaccountid_;
  }
  if (from._internal_targetaccountid() != 0) {
    _this->_impl_.targetaccountid_ = from._impl_.targetaccountid_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_amount()) != 0) {
    _this->_impl_.amount_ = from._impl_.amount_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AssetTransferHistoryInfoDetailBean::CopyFrom(const AssetTransferHistoryInfoDetailBean& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lampyris.crypto.protocol.account.AssetTransferHistoryInfoDetailBean)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AssetTransferHistoryInfoDetailBean::InternalSwap(AssetTransferHistoryInfoDetailBean* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AssetTransferHistoryInfoDetailBean, _impl_.amount_)
      + sizeof(AssetTransferHistoryInfoDetailBean::_impl_.amount_)
      - PROTOBUF_FIELD_OFFSET(AssetTransferHistoryInfoDetailBean, _impl_.sourceaccountid_)>(
          reinterpret_cast<char*>(&_impl_.sourceaccountid_),
          reinterpret_cast<char*>(&other->_impl_.sourceaccountid_));
}

::google::protobuf::Metadata AssetTransferHistoryInfoDetailBean::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AssetTransferHistoryInfoBean::_Internal {
 public:
};

AssetTransferHistoryInfoBean::AssetTransferHistoryInfoBean(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lampyris.crypto.protocol.account.AssetTransferHistoryInfoBean)
}
inline PROTOBUF_NDEBUG_INLINE AssetTransferHistoryInfoBean::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::lampyris::crypto::protocol::account::AssetTransferHistoryInfoBean& from_msg)
      : detailbeanlist_{visibility, arena, from.detailbeanlist_},
        _cached_size_{0} {}

AssetTransferHistoryInfoBean::AssetTransferHistoryInfoBean(
    ::google::protobuf::Arena* arena,
    const AssetTransferHistoryInfoBean& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AssetTransferHistoryInfoBean* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, transferstarttimestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, transferstarttimestamp_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, transferstarttimestamp_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:lampyris.crypto.protocol.account.AssetTransferHistoryInfoBean)
}
inline PROTOBUF_NDEBUG_INLINE AssetTransferHistoryInfoBean::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : detailbeanlist_{visibility, arena},
        _cached_size_{0} {}

inline void AssetTransferHistoryInfoBean::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, transferstarttimestamp_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, transferstarttimestamp_) +
               sizeof(Impl_::type_));
}
AssetTransferHistoryInfoBean::~AssetTransferHistoryInfoBean() {
  // @@protoc_insertion_point(destructor:lampyris.crypto.protocol.account.AssetTransferHistoryInfoBean)
  SharedDtor(*this);
}
inline void AssetTransferHistoryInfoBean::SharedDtor(MessageLite& self) {
  AssetTransferHistoryInfoBean& this_ = static_cast<AssetTransferHistoryInfoBean&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* AssetTransferHistoryInfoBean::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AssetTransferHistoryInfoBean(arena);
}
constexpr auto AssetTransferHistoryInfoBean::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(AssetTransferHistoryInfoBean, _impl_.detailbeanlist_) +
          decltype(AssetTransferHistoryInfoBean::_impl_.detailbeanlist_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(AssetTransferHistoryInfoBean), alignof(AssetTransferHistoryInfoBean), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&AssetTransferHistoryInfoBean::PlacementNew_,
                                 sizeof(AssetTransferHistoryInfoBean),
                                 alignof(AssetTransferHistoryInfoBean));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull AssetTransferHistoryInfoBean::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_AssetTransferHistoryInfoBean_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &AssetTransferHistoryInfoBean::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<AssetTransferHistoryInfoBean>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &AssetTransferHistoryInfoBean::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<AssetTransferHistoryInfoBean>(), &AssetTransferHistoryInfoBean::ByteSizeLong,
            &AssetTransferHistoryInfoBean::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(AssetTransferHistoryInfoBean, _impl_._cached_size_),
        false,
    },
    &AssetTransferHistoryInfoBean::kDescriptorMethods,
    &descriptor_table_account_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* AssetTransferHistoryInfoBean::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> AssetTransferHistoryInfoBean::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::account::AssetTransferHistoryInfoBean>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 transferFinishedTimestamp = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AssetTransferHistoryInfoBean, _impl_.transferfinishedtimestamp_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(AssetTransferHistoryInfoBean, _impl_.transferfinishedtimestamp_)}},
    // .lampyris.crypto.protocol.account.AssetTransferType type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AssetTransferHistoryInfoBean, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AssetTransferHistoryInfoBean, _impl_.type_)}},
    // repeated .lampyris.crypto.protocol.account.AssetTransferHistoryInfoDetailBean detailBeanList = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AssetTransferHistoryInfoBean, _impl_.detailbeanlist_)}},
    // int64 transferStartTimestamp = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(AssetTransferHistoryInfoBean, _impl_.transferstarttimestamp_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AssetTransferHistoryInfoBean, _impl_.transferstarttimestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .lampyris.crypto.protocol.account.AssetTransferType type = 1;
    {PROTOBUF_FIELD_OFFSET(AssetTransferHistoryInfoBean, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated .lampyris.crypto.protocol.account.AssetTransferHistoryInfoDetailBean detailBeanList = 2;
    {PROTOBUF_FIELD_OFFSET(AssetTransferHistoryInfoBean, _impl_.detailbeanlist_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 transferStartTimestamp = 3;
    {PROTOBUF_FIELD_OFFSET(AssetTransferHistoryInfoBean, _impl_.transferstarttimestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 transferFinishedTimestamp = 4;
    {PROTOBUF_FIELD_OFFSET(AssetTransferHistoryInfoBean, _impl_.transferfinishedtimestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AssetTransferHistoryInfoBean::Clear() {
// @@protoc_insertion_point(message_clear_start:lampyris.crypto.protocol.account.AssetTransferHistoryInfoBean)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.detailbeanlist_.Clear();
  ::memset(&_impl_.transferstarttimestamp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.transferstarttimestamp_)) + sizeof(_impl_.type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AssetTransferHistoryInfoBean::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AssetTransferHistoryInfoBean& this_ = static_cast<const AssetTransferHistoryInfoBean&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AssetTransferHistoryInfoBean::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AssetTransferHistoryInfoBean& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:lampyris.crypto.protocol.account.AssetTransferHistoryInfoBean)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .lampyris.crypto.protocol.account.AssetTransferType type = 1;
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_type(), target);
          }

          // repeated .lampyris.crypto.protocol.account.AssetTransferHistoryInfoDetailBean detailBeanList = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_detailbeanlist_size());
               i < n; i++) {
            const auto& repfield = this_._internal_detailbeanlist().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // int64 transferStartTimestamp = 3;
          if (this_._internal_transferstarttimestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_transferstarttimestamp(), target);
          }

          // int64 transferFinishedTimestamp = 4;
          if (this_._internal_transferfinishedtimestamp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<4>(
                    stream, this_._internal_transferfinishedtimestamp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:lampyris.crypto.protocol.account.AssetTransferHistoryInfoBean)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AssetTransferHistoryInfoBean::ByteSizeLong(const MessageLite& base) {
          const AssetTransferHistoryInfoBean& this_ = static_cast<const AssetTransferHistoryInfoBean&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AssetTransferHistoryInfoBean::ByteSizeLong() const {
          const AssetTransferHistoryInfoBean& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:lampyris.crypto.protocol.account.AssetTransferHistoryInfoBean)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .lampyris.crypto.protocol.account.AssetTransferHistoryInfoDetailBean detailBeanList = 2;
            {
              total_size += 1UL * this_._internal_detailbeanlist_size();
              for (const auto& msg : this_._internal_detailbeanlist()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // int64 transferStartTimestamp = 3;
            if (this_._internal_transferstarttimestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_transferstarttimestamp());
            }
            // int64 transferFinishedTimestamp = 4;
            if (this_._internal_transferfinishedtimestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_transferfinishedtimestamp());
            }
            // .lampyris.crypto.protocol.account.AssetTransferType type = 1;
            if (this_._internal_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AssetTransferHistoryInfoBean::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AssetTransferHistoryInfoBean*>(&to_msg);
  auto& from = static_cast<const AssetTransferHistoryInfoBean&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:lampyris.crypto.protocol.account.AssetTransferHistoryInfoBean)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_detailbeanlist()->MergeFrom(
      from._internal_detailbeanlist());
  if (from._internal_transferstarttimestamp() != 0) {
    _this->_impl_.transferstarttimestamp_ = from._impl_.transferstarttimestamp_;
  }
  if (from._internal_transferfinishedtimestamp() != 0) {
    _this->_impl_.transferfinishedtimestamp_ = from._impl_.transferfinishedtimestamp_;
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AssetTransferHistoryInfoBean::CopyFrom(const AssetTransferHistoryInfoBean& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lampyris.crypto.protocol.account.AssetTransferHistoryInfoBean)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AssetTransferHistoryInfoBean::InternalSwap(AssetTransferHistoryInfoBean* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.detailbeanlist_.InternalSwap(&other->_impl_.detailbeanlist_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AssetTransferHistoryInfoBean, _impl_.type_)
      + sizeof(AssetTransferHistoryInfoBean::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(AssetTransferHistoryInfoBean, _impl_.transferstarttimestamp_)>(
          reinterpret_cast<char*>(&_impl_.transferstarttimestamp_),
          reinterpret_cast<char*>(&other->_impl_.transferstarttimestamp_));
}

::google::protobuf::Metadata AssetTransferHistoryInfoBean::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReqQueryAssetTransferHistory::_Internal {
 public:
};

ReqQueryAssetTransferHistory::ReqQueryAssetTransferHistory(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:lampyris.crypto.protocol.account.ReqQueryAssetTransferHistory)
}
ReqQueryAssetTransferHistory::ReqQueryAssetTransferHistory(
    ::google::protobuf::Arena* arena,
    const ReqQueryAssetTransferHistory& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ReqQueryAssetTransferHistory* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:lampyris.crypto.protocol.account.ReqQueryAssetTransferHistory)
}

inline void* ReqQueryAssetTransferHistory::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ReqQueryAssetTransferHistory(arena);
}
constexpr auto ReqQueryAssetTransferHistory::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ReqQueryAssetTransferHistory),
                                            alignof(ReqQueryAssetTransferHistory));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ReqQueryAssetTransferHistory::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ReqQueryAssetTransferHistory_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ReqQueryAssetTransferHistory::MergeImpl,
        ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<ReqQueryAssetTransferHistory>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ReqQueryAssetTransferHistory::SharedDtor,
        ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<ReqQueryAssetTransferHistory>(), &ReqQueryAssetTransferHistory::ByteSizeLong,
            &ReqQueryAssetTransferHistory::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ReqQueryAssetTransferHistory, _impl_._cached_size_),
        false,
    },
    &ReqQueryAssetTransferHistory::kDescriptorMethods,
    &descriptor_table_account_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ReqQueryAssetTransferHistory::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> ReqQueryAssetTransferHistory::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::account::ReqQueryAssetTransferHistory>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata ReqQueryAssetTransferHistory::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace account
}  // namespace protocol
}  // namespace crypto
}  // namespace lampyris
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_account_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

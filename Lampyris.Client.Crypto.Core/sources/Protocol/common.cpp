// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: common.proto
// Protobuf C++ Version: 5.29.4

#include "common.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace lampyris {
namespace crypto {
namespace protocol {
namespace common {

inline constexpr Request::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : request_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Request::Request(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestDefaultTypeInternal() {}
  union {
    Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestDefaultTypeInternal _Request_default_instance_;

inline constexpr Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : response_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Response::Response(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseDefaultTypeInternal() {}
  union {
    Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseDefaultTypeInternal _Response_default_instance_;
}  // namespace common
}  // namespace protocol
}  // namespace crypto
}  // namespace lampyris
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_common_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_common_2eproto = nullptr;
const ::uint32_t
    TableStruct_common_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::common::Request, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::common::Request, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::common::Request, _impl_.request_type_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::common::Response, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::common::Response, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::common::Response, _impl_.response_type_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::lampyris::crypto::protocol::common::Request)},
        {34, -1, -1, sizeof(::lampyris::crypto::protocol::common::Response)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::lampyris::crypto::protocol::common::_Request_default_instance_._instance,
    &::lampyris::crypto::protocol::common::_Response_default_instance_._instance,
};
const char descriptor_table_protodef_common_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014common.proto\022\037lampyris.crypto.protocol"
    ".common\032\raccount.proto\032\tapp.proto\032\013quote"
    ".proto\032\016strategy.proto\032\rtrading.proto\"\353\020"
    "\n\007Request\022\\\n\027reqAccountSummaryUpdate\030\001 \001"
    "(\01329.lampyris.crypto.protocol.account.Re"
    "qAccountSummaryUpdateH\000\022\\\n\027reqAccountAss"
    "etTransfer\030\002 \001(\01329.lampyris.crypto.proto"
    "col.account.ReqAccountAssetTransferH\000\022f\n"
    "\034reqQueryAssetTransferHistory\030\003 \001(\0132>.la"
    "mpyris.crypto.protocol.account.ReqQueryA"
    "ssetTransferHistoryH\000\022:\n\010reqLogin\030\004 \001(\0132"
    "&.lampyris.crypto.protocol.app.ReqLoginH"
    "\000\022<\n\treqLogout\030\005 \001(\0132\'.lampyris.crypto.p"
    "rotocol.app.ReqLogoutH\000\022B\n\014reqHeartBeat\030"
    "\006 \001(\0132*.lampyris.crypto.protocol.app.Req"
    "HeartBeatH\000\022T\n\025reqUploadAppBehaviour\030\007 \001"
    "(\01323.lampyris.crypto.protocol.app.ReqUpl"
    "oadAppBehaviourH\000\022X\n\026reqSubscribeTickerD"
    "ata\030\010 \001(\01326.lampyris.crypto.protocol.quo"
    "te.ReqSubscribeTickerDataH\000\022V\n\025reqSubscr"
    "ibeTradeData\030\t \001(\01325.lampyris.crypto.pro"
    "tocol.quote.ReqSubscribeTradeDataH\000\022f\n\035r"
    "eqSubscribeCandlestickUpdate\030\n \001(\0132=.lam"
    "pyris.crypto.protocol.quote.ReqSubscribe"
    "CandlestickUpdateH\000\022R\n\023reqCandlestickQue"
    "ry\030\013 \001(\01323.lampyris.crypto.protocol.quot"
    "e.ReqCandlestickQueryH\000\022D\n\014reqTradeRule\030"
    "\014 \001(\0132,.lampyris.crypto.protocol.quote.R"
    "eqTradeRuleH\000\022V\n\025reqSelfSelectedSymbol\030\r"
    " \001(\01325.lampyris.crypto.protocol.quote.Re"
    "qSelfSelectedSymbolH\000\022a\n\031reqModifyStreat"
    "egySetting\030\016 \001(\0132<.lampyris.crypto.proto"
    "col.strategy.ReqModifyStreategySettingH\000"
    "\022g\n\034reqQueryStrategyExectionInfo\030\017 \001(\0132\?"
    ".lampyris.crypto.protocol.strategy.ReqQu"
    "eryStrategyExectionInfoH\000\022H\n\rreqPlaceOrd"
    "er\030\020 \001(\0132/.lampyris.crypto.protocol.trad"
    "ing.ReqPlaceOrderH\000\022J\n\016reqModifyOrder\030\021 "
    "\001(\01320.lampyris.crypto.protocol.trading.R"
    "eqModifyOrderH\000\022J\n\016reqCancelOrder\030\022 \001(\0132"
    "0.lampyris.crypto.protocol.trading.ReqCa"
    "ncelOrderH\000\022Z\n\026reqOneKeyClosePosition\030\023 "
    "\001(\01328.lampyris.crypto.protocol.trading.R"
    "eqOneKeyClosePositionH\000\022V\n\024reqQueryActiv"
    "eOrders\030\024 \001(\01326.lampyris.crypto.protocol"
    ".trading.ReqQueryActiveOrdersH\000\022^\n\030reqQu"
    "eryHistoricalOrders\030\025 \001(\0132:.lampyris.cry"
    "pto.protocol.trading.ReqQueryHistoricalO"
    "rdersH\000\022P\n\021reqQueryPositions\030\026 \001(\01323.lam"
    "pyris.crypto.protocol.trading.ReqQueryPo"
    "sitionsH\000\022J\n\016reqSetLeverage\030\027 \001(\01320.lamp"
    "yris.crypto.protocol.trading.ReqSetLever"
    "ageH\000\022N\n\020reqQueryLeverage\030\030 \001(\01322.lampyr"
    "is.crypto.protocol.trading.ReqQueryLever"
    "ageH\000\022\\\n\027reqQueryLeverageBracket\030\031 \001(\01329"
    ".lampyris.crypto.protocol.trading.ReqQue"
    "ryLeverageBracketH\000B\016\n\014request_type\"\305\034\n\010"
    "Response\022V\n\024accountAssetInfoBean\030\001 \001(\01326"
    ".lampyris.crypto.protocol.account.Accoun"
    "tAssetInfoBeanH\000\022R\n\022subAccountInfoBean\030\002"
    " \001(\01324.lampyris.crypto.protocol.account."
    "SubAccountInfoBeanH\000\022\\\n\027resQuerySubAccco"
    "untList\030\003 \001(\01329.lampyris.crypto.protocol"
    ".account.ResQuerySubAcccountListH\000\022\\\n\027re"
    "sAccountSummaryUpdate\030\004 \001(\01329.lampyris.c"
    "rypto.protocol.account.ResAccountSummary"
    "UpdateH\000\022r\n\"assetTransferHistoryInfoDeta"
    "ilBean\030\005 \001(\0132D.lampyris.crypto.protocol."
    "account.AssetTransferHistoryInfoDetailBe"
    "anH\000\022f\n\034assetTransferHistoryInfoBean\030\006 \001"
    "(\0132>.lampyris.crypto.protocol.account.As"
    "setTransferHistoryInfoBeanH\000\022:\n\010resLogin"
    "\030\007 \001(\0132&.lampyris.crypto.protocol.app.Re"
    "sLoginH\000\022B\n\014resHeartBeat\030\010 \001(\0132*.lampyri"
    "s.crypto.protocol.app.ResHeartBeatH\000\022<\n\t"
    "resNotice\030\t \001(\0132\'.lampyris.crypto.protoc"
    "ol.app.ResNoticeH\000\022T\n\024symbolTickerDataBe"
    "an\030\n \001(\01324.lampyris.crypto.protocol.quot"
    "e.SymbolTickerDataBeanH\000\022X\n\026resSubscribe"
    "TickerData\030\013 \001(\01326.lampyris.crypto.proto"
    "col.quote.ResSubscribeTickerDataH\000\022R\n\023sy"
    "mbolTradeDataBean\030\014 \001(\01323.lampyris.crypt"
    "o.protocol.quote.SymbolTradeDataBeanH\000\022F"
    "\n\rtradeDataBean\030\r \001(\0132-.lampyris.crypto."
    "protocol.quote.TradeDataBeanH\000\022R\n\023resCan"
    "dlestickQuery\030\016 \001(\01323.lampyris.crypto.pr"
    "otocol.quote.ResCandlestickQueryH\000\022V\n\025ca"
    "ndlestickUpdateBean\030\017 \001(\01325.lampyris.cry"
    "pto.protocol.quote.CandlestickUpdateBean"
    "H\000\022J\n\017candlestickBean\030\020 \001(\0132/.lampyris.c"
    "rypto.protocol.quote.CandlestickBeanH\000\022D"
    "\n\014resTradeRule\030\021 \001(\0132,.lampyris.crypto.p"
    "rotocol.quote.ResTradeRuleH\000\022R\n\023symbolTr"
    "adeRuleBean\030\022 \001(\01323.lampyris.crypto.prot"
    "ocol.quote.SymbolTradeRuleBeanH\000\022b\n\033mark"
    "etMonitorNoticeListBean\030\023 \001(\0132;.lampyris"
    ".crypto.protocol.quote.MarketMonitorNoti"
    "ceListBeanH\000\022Z\n\027marketMonitorNoticeBean\030"
    "\024 \001(\01327.lampyris.crypto.protocol.quote.M"
    "arketMonitorNoticeBeanH\000\022`\n\032selfSelected"
    "SymbolInfoBean\030\025 \001(\0132:.lampyris.crypto.p"
    "rotocol.quote.SelfSelectedSymbolInfoBean"
    "H\000\022b\n\033selfSelectedSymbolGroupBean\030\026 \001(\0132"
    ";.lampyris.crypto.protocol.quote.SelfSel"
    "ectedSymbolGroupBeanH\000\022V\n\025resSelfSelecte"
    "dSymbol\030\027 \001(\01325.lampyris.crypto.protocol"
    ".quote.ResSelfSelectedSymbolH\000\022f\n\035market"
    "PreviewIntervalDataBean\030\030 \001(\0132=.lampyris"
    ".crypto.protocol.quote.MarketPreviewInte"
    "rvalDataBeanH\000\022T\n\024resMarketPreviewData\030\031"
    " \001(\01324.lampyris.crypto.protocol.quote.Re"
    "sMarketPreviewDataH\000\022U\n\023streategyConfigB"
    "ean\030\032 \001(\01326.lampyris.crypto.protocol.str"
    "ategy.StreategyConfigBeanH\000\022S\n\022streategy"
    "FieldBean\030\033 \001(\01325.lampyris.crypto.protoc"
    "ol.strategy.StreategyFieldBeanH\000\022a\n\031resM"
    "odifyStreategySetting\030\034 \001(\0132<.lampyris.c"
    "rypto.protocol.strategy.ResModifyStreate"
    "gySettingH\000\022W\n\024resStreategySettings\030\035 \001("
    "\01327.lampyris.crypto.protocol.strategy.Re"
    "sStreategySettingsH\000\022_\n\030strategyExection"
    "InfoBean\030\036 \001(\0132;.lampyris.crypto.protoco"
    "l.strategy.StrategyExectionInfoBeanH\000\022g\n"
    "\034resQueryStrategyExectionInfo\030\037 \001(\0132\?.la"
    "mpyris.crypto.protocol.strategy.ResQuery"
    "StrategyExectionInfoH\000\022V\n\024conditionTrigg"
    "erBean\030  \001(\01326.lampyris.crypto.protocol."
    "trading.ConditionTriggerBeanH\000\022@\n\torderB"
    "ean\030! \001(\0132+.lampyris.crypto.protocol.tra"
    "ding.OrderBeanH\000\022L\n\017orderStatusBean\030\" \001("
    "\01321.lampyris.crypto.protocol.trading.Ord"
    "erStatusBeanH\000\022J\n\016resQueryOrders\030# \001(\01320"
    ".lampyris.crypto.protocol.trading.ResQue"
    "ryOrdersH\000\022F\n\014positionBean\030$ \001(\0132..lampy"
    "ris.crypto.protocol.trading.PositionBean"
    "H\000\022P\n\021resQueryPositions\030% \001(\01323.lampyris"
    ".crypto.protocol.trading.ResQueryPositio"
    "nsH\000\022F\n\014leverageBean\030& \001(\0132..lampyris.cr"
    "ypto.protocol.trading.LeverageBeanH\000\022N\n\020"
    "resQueryLeverage\030\' \001(\01322.lampyris.crypto"
    ".protocol.trading.ResQueryLeverageH\000\022\\\n\027"
    "resQueryLeverageBracket\030( \001(\01329.lampyris"
    ".crypto.protocol.trading.ResQueryLeverag"
    "eBracketH\000\022`\n\031symbolLeverageBracketBean\030"
    ") \001(\0132;.lampyris.crypto.protocol.trading"
    ".SymbolLeverageBracketBeanH\000\022T\n\023leverage"
    "BracketBean\030* \001(\01325.lampyris.crypto.prot"
    "ocol.trading.LeverageBracketBeanH\000B\017\n\rre"
    "sponse_typeb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_common_2eproto_deps[5] =
    {
        &::descriptor_table_account_2eproto,
        &::descriptor_table_app_2eproto,
        &::descriptor_table_quote_2eproto,
        &::descriptor_table_strategy_2eproto,
        &::descriptor_table_trading_2eproto,
};
static ::absl::once_flag descriptor_table_common_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_common_2eproto = {
    false,
    false,
    5939,
    descriptor_table_protodef_common_2eproto,
    "common.proto",
    &descriptor_table_common_2eproto_once,
    descriptor_table_common_2eproto_deps,
    5,
    2,
    schemas,
    file_default_instances,
    TableStruct_common_2eproto::offsets,
    file_level_enum_descriptors_common_2eproto,
    file_level_service_descriptors_common_2eproto,
};
namespace lampyris {
namespace crypto {
namespace protocol {
namespace common {
// ===================================================================

class Request::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::common::Request, _impl_._oneof_case_);
};

void Request::set_allocated_reqaccountsummaryupdate(::lampyris::crypto::protocol::account::ReqAccountSummaryUpdate* reqaccountsummaryupdate) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (reqaccountsummaryupdate) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(reqaccountsummaryupdate)->GetArena();
    if (message_arena != submessage_arena) {
      reqaccountsummaryupdate = ::google::protobuf::internal::GetOwnedMessage(message_arena, reqaccountsummaryupdate, submessage_arena);
    }
    set_has_reqaccountsummaryupdate();
    _impl_.request_type_.reqaccountsummaryupdate_ = reqaccountsummaryupdate;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Request.reqAccountSummaryUpdate)
}
void Request::clear_reqaccountsummaryupdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kReqAccountSummaryUpdate) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.reqaccountsummaryupdate_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqaccountsummaryupdate_);
    }
    clear_has_request_type();
  }
}
void Request::set_allocated_reqaccountassettransfer(::lampyris::crypto::protocol::account::ReqAccountAssetTransfer* reqaccountassettransfer) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (reqaccountassettransfer) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(reqaccountassettransfer)->GetArena();
    if (message_arena != submessage_arena) {
      reqaccountassettransfer = ::google::protobuf::internal::GetOwnedMessage(message_arena, reqaccountassettransfer, submessage_arena);
    }
    set_has_reqaccountassettransfer();
    _impl_.request_type_.reqaccountassettransfer_ = reqaccountassettransfer;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Request.reqAccountAssetTransfer)
}
void Request::clear_reqaccountassettransfer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kReqAccountAssetTransfer) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.reqaccountassettransfer_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqaccountassettransfer_);
    }
    clear_has_request_type();
  }
}
void Request::set_allocated_reqqueryassettransferhistory(::lampyris::crypto::protocol::account::ReqQueryAssetTransferHistory* reqqueryassettransferhistory) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (reqqueryassettransferhistory) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(reqqueryassettransferhistory)->GetArena();
    if (message_arena != submessage_arena) {
      reqqueryassettransferhistory = ::google::protobuf::internal::GetOwnedMessage(message_arena, reqqueryassettransferhistory, submessage_arena);
    }
    set_has_reqqueryassettransferhistory();
    _impl_.request_type_.reqqueryassettransferhistory_ = reqqueryassettransferhistory;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Request.reqQueryAssetTransferHistory)
}
void Request::clear_reqqueryassettransferhistory() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kReqQueryAssetTransferHistory) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.reqqueryassettransferhistory_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqqueryassettransferhistory_);
    }
    clear_has_request_type();
  }
}
void Request::set_allocated_reqlogin(::lampyris::crypto::protocol::app::ReqLogin* reqlogin) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (reqlogin) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(reqlogin)->GetArena();
    if (message_arena != submessage_arena) {
      reqlogin = ::google::protobuf::internal::GetOwnedMessage(message_arena, reqlogin, submessage_arena);
    }
    set_has_reqlogin();
    _impl_.request_type_.reqlogin_ = reqlogin;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Request.reqLogin)
}
void Request::clear_reqlogin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kReqLogin) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.reqlogin_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqlogin_);
    }
    clear_has_request_type();
  }
}
void Request::set_allocated_reqlogout(::lampyris::crypto::protocol::app::ReqLogout* reqlogout) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (reqlogout) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(reqlogout)->GetArena();
    if (message_arena != submessage_arena) {
      reqlogout = ::google::protobuf::internal::GetOwnedMessage(message_arena, reqlogout, submessage_arena);
    }
    set_has_reqlogout();
    _impl_.request_type_.reqlogout_ = reqlogout;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Request.reqLogout)
}
void Request::clear_reqlogout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kReqLogout) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.reqlogout_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqlogout_);
    }
    clear_has_request_type();
  }
}
void Request::set_allocated_reqheartbeat(::lampyris::crypto::protocol::app::ReqHeartBeat* reqheartbeat) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (reqheartbeat) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(reqheartbeat)->GetArena();
    if (message_arena != submessage_arena) {
      reqheartbeat = ::google::protobuf::internal::GetOwnedMessage(message_arena, reqheartbeat, submessage_arena);
    }
    set_has_reqheartbeat();
    _impl_.request_type_.reqheartbeat_ = reqheartbeat;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Request.reqHeartBeat)
}
void Request::clear_reqheartbeat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kReqHeartBeat) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.reqheartbeat_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqheartbeat_);
    }
    clear_has_request_type();
  }
}
void Request::set_allocated_requploadappbehaviour(::lampyris::crypto::protocol::app::ReqUploadAppBehaviour* requploadappbehaviour) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (requploadappbehaviour) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(requploadappbehaviour)->GetArena();
    if (message_arena != submessage_arena) {
      requploadappbehaviour = ::google::protobuf::internal::GetOwnedMessage(message_arena, requploadappbehaviour, submessage_arena);
    }
    set_has_requploadappbehaviour();
    _impl_.request_type_.requploadappbehaviour_ = requploadappbehaviour;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Request.reqUploadAppBehaviour)
}
void Request::clear_requploadappbehaviour() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kReqUploadAppBehaviour) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.requploadappbehaviour_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.requploadappbehaviour_);
    }
    clear_has_request_type();
  }
}
void Request::set_allocated_reqsubscribetickerdata(::lampyris::crypto::protocol::quote::ReqSubscribeTickerData* reqsubscribetickerdata) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (reqsubscribetickerdata) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(reqsubscribetickerdata)->GetArena();
    if (message_arena != submessage_arena) {
      reqsubscribetickerdata = ::google::protobuf::internal::GetOwnedMessage(message_arena, reqsubscribetickerdata, submessage_arena);
    }
    set_has_reqsubscribetickerdata();
    _impl_.request_type_.reqsubscribetickerdata_ = reqsubscribetickerdata;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Request.reqSubscribeTickerData)
}
void Request::clear_reqsubscribetickerdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kReqSubscribeTickerData) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.reqsubscribetickerdata_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqsubscribetickerdata_);
    }
    clear_has_request_type();
  }
}
void Request::set_allocated_reqsubscribetradedata(::lampyris::crypto::protocol::quote::ReqSubscribeTradeData* reqsubscribetradedata) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (reqsubscribetradedata) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(reqsubscribetradedata)->GetArena();
    if (message_arena != submessage_arena) {
      reqsubscribetradedata = ::google::protobuf::internal::GetOwnedMessage(message_arena, reqsubscribetradedata, submessage_arena);
    }
    set_has_reqsubscribetradedata();
    _impl_.request_type_.reqsubscribetradedata_ = reqsubscribetradedata;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Request.reqSubscribeTradeData)
}
void Request::clear_reqsubscribetradedata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kReqSubscribeTradeData) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.reqsubscribetradedata_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqsubscribetradedata_);
    }
    clear_has_request_type();
  }
}
void Request::set_allocated_reqsubscribecandlestickupdate(::lampyris::crypto::protocol::quote::ReqSubscribeCandlestickUpdate* reqsubscribecandlestickupdate) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (reqsubscribecandlestickupdate) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(reqsubscribecandlestickupdate)->GetArena();
    if (message_arena != submessage_arena) {
      reqsubscribecandlestickupdate = ::google::protobuf::internal::GetOwnedMessage(message_arena, reqsubscribecandlestickupdate, submessage_arena);
    }
    set_has_reqsubscribecandlestickupdate();
    _impl_.request_type_.reqsubscribecandlestickupdate_ = reqsubscribecandlestickupdate;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Request.reqSubscribeCandlestickUpdate)
}
void Request::clear_reqsubscribecandlestickupdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kReqSubscribeCandlestickUpdate) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.reqsubscribecandlestickupdate_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqsubscribecandlestickupdate_);
    }
    clear_has_request_type();
  }
}
void Request::set_allocated_reqcandlestickquery(::lampyris::crypto::protocol::quote::ReqCandlestickQuery* reqcandlestickquery) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (reqcandlestickquery) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(reqcandlestickquery)->GetArena();
    if (message_arena != submessage_arena) {
      reqcandlestickquery = ::google::protobuf::internal::GetOwnedMessage(message_arena, reqcandlestickquery, submessage_arena);
    }
    set_has_reqcandlestickquery();
    _impl_.request_type_.reqcandlestickquery_ = reqcandlestickquery;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Request.reqCandlestickQuery)
}
void Request::clear_reqcandlestickquery() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kReqCandlestickQuery) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.reqcandlestickquery_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqcandlestickquery_);
    }
    clear_has_request_type();
  }
}
void Request::set_allocated_reqtraderule(::lampyris::crypto::protocol::quote::ReqTradeRule* reqtraderule) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (reqtraderule) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(reqtraderule)->GetArena();
    if (message_arena != submessage_arena) {
      reqtraderule = ::google::protobuf::internal::GetOwnedMessage(message_arena, reqtraderule, submessage_arena);
    }
    set_has_reqtraderule();
    _impl_.request_type_.reqtraderule_ = reqtraderule;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Request.reqTradeRule)
}
void Request::clear_reqtraderule() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kReqTradeRule) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.reqtraderule_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqtraderule_);
    }
    clear_has_request_type();
  }
}
void Request::set_allocated_reqselfselectedsymbol(::lampyris::crypto::protocol::quote::ReqSelfSelectedSymbol* reqselfselectedsymbol) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (reqselfselectedsymbol) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(reqselfselectedsymbol)->GetArena();
    if (message_arena != submessage_arena) {
      reqselfselectedsymbol = ::google::protobuf::internal::GetOwnedMessage(message_arena, reqselfselectedsymbol, submessage_arena);
    }
    set_has_reqselfselectedsymbol();
    _impl_.request_type_.reqselfselectedsymbol_ = reqselfselectedsymbol;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Request.reqSelfSelectedSymbol)
}
void Request::clear_reqselfselectedsymbol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kReqSelfSelectedSymbol) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.reqselfselectedsymbol_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqselfselectedsymbol_);
    }
    clear_has_request_type();
  }
}
void Request::set_allocated_reqmodifystreategysetting(::lampyris::crypto::protocol::strategy::ReqModifyStreategySetting* reqmodifystreategysetting) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (reqmodifystreategysetting) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(reqmodifystreategysetting)->GetArena();
    if (message_arena != submessage_arena) {
      reqmodifystreategysetting = ::google::protobuf::internal::GetOwnedMessage(message_arena, reqmodifystreategysetting, submessage_arena);
    }
    set_has_reqmodifystreategysetting();
    _impl_.request_type_.reqmodifystreategysetting_ = reqmodifystreategysetting;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Request.reqModifyStreategySetting)
}
void Request::clear_reqmodifystreategysetting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kReqModifyStreategySetting) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.reqmodifystreategysetting_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqmodifystreategysetting_);
    }
    clear_has_request_type();
  }
}
void Request::set_allocated_reqquerystrategyexectioninfo(::lampyris::crypto::protocol::strategy::ReqQueryStrategyExectionInfo* reqquerystrategyexectioninfo) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (reqquerystrategyexectioninfo) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(reqquerystrategyexectioninfo)->GetArena();
    if (message_arena != submessage_arena) {
      reqquerystrategyexectioninfo = ::google::protobuf::internal::GetOwnedMessage(message_arena, reqquerystrategyexectioninfo, submessage_arena);
    }
    set_has_reqquerystrategyexectioninfo();
    _impl_.request_type_.reqquerystrategyexectioninfo_ = reqquerystrategyexectioninfo;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Request.reqQueryStrategyExectionInfo)
}
void Request::clear_reqquerystrategyexectioninfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kReqQueryStrategyExectionInfo) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.reqquerystrategyexectioninfo_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqquerystrategyexectioninfo_);
    }
    clear_has_request_type();
  }
}
void Request::set_allocated_reqplaceorder(::lampyris::crypto::protocol::trading::ReqPlaceOrder* reqplaceorder) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (reqplaceorder) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(reqplaceorder)->GetArena();
    if (message_arena != submessage_arena) {
      reqplaceorder = ::google::protobuf::internal::GetOwnedMessage(message_arena, reqplaceorder, submessage_arena);
    }
    set_has_reqplaceorder();
    _impl_.request_type_.reqplaceorder_ = reqplaceorder;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Request.reqPlaceOrder)
}
void Request::clear_reqplaceorder() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kReqPlaceOrder) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.reqplaceorder_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqplaceorder_);
    }
    clear_has_request_type();
  }
}
void Request::set_allocated_reqmodifyorder(::lampyris::crypto::protocol::trading::ReqModifyOrder* reqmodifyorder) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (reqmodifyorder) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(reqmodifyorder)->GetArena();
    if (message_arena != submessage_arena) {
      reqmodifyorder = ::google::protobuf::internal::GetOwnedMessage(message_arena, reqmodifyorder, submessage_arena);
    }
    set_has_reqmodifyorder();
    _impl_.request_type_.reqmodifyorder_ = reqmodifyorder;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Request.reqModifyOrder)
}
void Request::clear_reqmodifyorder() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kReqModifyOrder) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.reqmodifyorder_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqmodifyorder_);
    }
    clear_has_request_type();
  }
}
void Request::set_allocated_reqcancelorder(::lampyris::crypto::protocol::trading::ReqCancelOrder* reqcancelorder) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (reqcancelorder) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(reqcancelorder)->GetArena();
    if (message_arena != submessage_arena) {
      reqcancelorder = ::google::protobuf::internal::GetOwnedMessage(message_arena, reqcancelorder, submessage_arena);
    }
    set_has_reqcancelorder();
    _impl_.request_type_.reqcancelorder_ = reqcancelorder;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Request.reqCancelOrder)
}
void Request::clear_reqcancelorder() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kReqCancelOrder) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.reqcancelorder_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqcancelorder_);
    }
    clear_has_request_type();
  }
}
void Request::set_allocated_reqonekeycloseposition(::lampyris::crypto::protocol::trading::ReqOneKeyClosePosition* reqonekeycloseposition) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (reqonekeycloseposition) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(reqonekeycloseposition)->GetArena();
    if (message_arena != submessage_arena) {
      reqonekeycloseposition = ::google::protobuf::internal::GetOwnedMessage(message_arena, reqonekeycloseposition, submessage_arena);
    }
    set_has_reqonekeycloseposition();
    _impl_.request_type_.reqonekeycloseposition_ = reqonekeycloseposition;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Request.reqOneKeyClosePosition)
}
void Request::clear_reqonekeycloseposition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kReqOneKeyClosePosition) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.reqonekeycloseposition_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqonekeycloseposition_);
    }
    clear_has_request_type();
  }
}
void Request::set_allocated_reqqueryactiveorders(::lampyris::crypto::protocol::trading::ReqQueryActiveOrders* reqqueryactiveorders) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (reqqueryactiveorders) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(reqqueryactiveorders)->GetArena();
    if (message_arena != submessage_arena) {
      reqqueryactiveorders = ::google::protobuf::internal::GetOwnedMessage(message_arena, reqqueryactiveorders, submessage_arena);
    }
    set_has_reqqueryactiveorders();
    _impl_.request_type_.reqqueryactiveorders_ = reqqueryactiveorders;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Request.reqQueryActiveOrders)
}
void Request::clear_reqqueryactiveorders() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kReqQueryActiveOrders) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.reqqueryactiveorders_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqqueryactiveorders_);
    }
    clear_has_request_type();
  }
}
void Request::set_allocated_reqqueryhistoricalorders(::lampyris::crypto::protocol::trading::ReqQueryHistoricalOrders* reqqueryhistoricalorders) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (reqqueryhistoricalorders) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(reqqueryhistoricalorders)->GetArena();
    if (message_arena != submessage_arena) {
      reqqueryhistoricalorders = ::google::protobuf::internal::GetOwnedMessage(message_arena, reqqueryhistoricalorders, submessage_arena);
    }
    set_has_reqqueryhistoricalorders();
    _impl_.request_type_.reqqueryhistoricalorders_ = reqqueryhistoricalorders;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Request.reqQueryHistoricalOrders)
}
void Request::clear_reqqueryhistoricalorders() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kReqQueryHistoricalOrders) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.reqqueryhistoricalorders_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqqueryhistoricalorders_);
    }
    clear_has_request_type();
  }
}
void Request::set_allocated_reqquerypositions(::lampyris::crypto::protocol::trading::ReqQueryPositions* reqquerypositions) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (reqquerypositions) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(reqquerypositions)->GetArena();
    if (message_arena != submessage_arena) {
      reqquerypositions = ::google::protobuf::internal::GetOwnedMessage(message_arena, reqquerypositions, submessage_arena);
    }
    set_has_reqquerypositions();
    _impl_.request_type_.reqquerypositions_ = reqquerypositions;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Request.reqQueryPositions)
}
void Request::clear_reqquerypositions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kReqQueryPositions) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.reqquerypositions_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqquerypositions_);
    }
    clear_has_request_type();
  }
}
void Request::set_allocated_reqsetleverage(::lampyris::crypto::protocol::trading::ReqSetLeverage* reqsetleverage) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (reqsetleverage) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(reqsetleverage)->GetArena();
    if (message_arena != submessage_arena) {
      reqsetleverage = ::google::protobuf::internal::GetOwnedMessage(message_arena, reqsetleverage, submessage_arena);
    }
    set_has_reqsetleverage();
    _impl_.request_type_.reqsetleverage_ = reqsetleverage;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Request.reqSetLeverage)
}
void Request::clear_reqsetleverage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kReqSetLeverage) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.reqsetleverage_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqsetleverage_);
    }
    clear_has_request_type();
  }
}
void Request::set_allocated_reqqueryleverage(::lampyris::crypto::protocol::trading::ReqQueryLeverage* reqqueryleverage) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (reqqueryleverage) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(reqqueryleverage)->GetArena();
    if (message_arena != submessage_arena) {
      reqqueryleverage = ::google::protobuf::internal::GetOwnedMessage(message_arena, reqqueryleverage, submessage_arena);
    }
    set_has_reqqueryleverage();
    _impl_.request_type_.reqqueryleverage_ = reqqueryleverage;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Request.reqQueryLeverage)
}
void Request::clear_reqqueryleverage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kReqQueryLeverage) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.reqqueryleverage_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqqueryleverage_);
    }
    clear_has_request_type();
  }
}
void Request::set_allocated_reqqueryleveragebracket(::lampyris::crypto::protocol::trading::ReqQueryLeverageBracket* reqqueryleveragebracket) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_request_type();
  if (reqqueryleveragebracket) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(reqqueryleveragebracket)->GetArena();
    if (message_arena != submessage_arena) {
      reqqueryleveragebracket = ::google::protobuf::internal::GetOwnedMessage(message_arena, reqqueryleveragebracket, submessage_arena);
    }
    set_has_reqqueryleveragebracket();
    _impl_.request_type_.reqqueryleveragebracket_ = reqqueryleveragebracket;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Request.reqQueryLeverageBracket)
}
void Request::clear_reqqueryleveragebracket() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (request_type_case() == kReqQueryLeverageBracket) {
    if (GetArena() == nullptr) {
      delete _impl_.request_type_.reqqueryleveragebracket_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqqueryleveragebracket_);
    }
    clear_has_request_type();
  }
}
Request::Request(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lampyris.crypto.protocol.common.Request)
}
inline PROTOBUF_NDEBUG_INLINE Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::lampyris::crypto::protocol::common::Request& from_msg)
      : request_type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Request::Request(
    ::google::protobuf::Arena* arena,
    const Request& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Request* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (request_type_case()) {
    case REQUEST_TYPE_NOT_SET:
      break;
      case kReqAccountSummaryUpdate:
        _impl_.request_type_.reqaccountsummaryupdate_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::account::ReqAccountSummaryUpdate>(arena, *from._impl_.request_type_.reqaccountsummaryupdate_);
        break;
      case kReqAccountAssetTransfer:
        _impl_.request_type_.reqaccountassettransfer_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::account::ReqAccountAssetTransfer>(arena, *from._impl_.request_type_.reqaccountassettransfer_);
        break;
      case kReqQueryAssetTransferHistory:
        _impl_.request_type_.reqqueryassettransferhistory_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::account::ReqQueryAssetTransferHistory>(arena, *from._impl_.request_type_.reqqueryassettransferhistory_);
        break;
      case kReqLogin:
        _impl_.request_type_.reqlogin_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::app::ReqLogin>(arena, *from._impl_.request_type_.reqlogin_);
        break;
      case kReqLogout:
        _impl_.request_type_.reqlogout_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::app::ReqLogout>(arena, *from._impl_.request_type_.reqlogout_);
        break;
      case kReqHeartBeat:
        _impl_.request_type_.reqheartbeat_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::app::ReqHeartBeat>(arena, *from._impl_.request_type_.reqheartbeat_);
        break;
      case kReqUploadAppBehaviour:
        _impl_.request_type_.requploadappbehaviour_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::app::ReqUploadAppBehaviour>(arena, *from._impl_.request_type_.requploadappbehaviour_);
        break;
      case kReqSubscribeTickerData:
        _impl_.request_type_.reqsubscribetickerdata_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::ReqSubscribeTickerData>(arena, *from._impl_.request_type_.reqsubscribetickerdata_);
        break;
      case kReqSubscribeTradeData:
        _impl_.request_type_.reqsubscribetradedata_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::ReqSubscribeTradeData>(arena, *from._impl_.request_type_.reqsubscribetradedata_);
        break;
      case kReqSubscribeCandlestickUpdate:
        _impl_.request_type_.reqsubscribecandlestickupdate_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::ReqSubscribeCandlestickUpdate>(arena, *from._impl_.request_type_.reqsubscribecandlestickupdate_);
        break;
      case kReqCandlestickQuery:
        _impl_.request_type_.reqcandlestickquery_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::ReqCandlestickQuery>(arena, *from._impl_.request_type_.reqcandlestickquery_);
        break;
      case kReqTradeRule:
        _impl_.request_type_.reqtraderule_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::ReqTradeRule>(arena, *from._impl_.request_type_.reqtraderule_);
        break;
      case kReqSelfSelectedSymbol:
        _impl_.request_type_.reqselfselectedsymbol_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::ReqSelfSelectedSymbol>(arena, *from._impl_.request_type_.reqselfselectedsymbol_);
        break;
      case kReqModifyStreategySetting:
        _impl_.request_type_.reqmodifystreategysetting_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::strategy::ReqModifyStreategySetting>(arena, *from._impl_.request_type_.reqmodifystreategysetting_);
        break;
      case kReqQueryStrategyExectionInfo:
        _impl_.request_type_.reqquerystrategyexectioninfo_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::strategy::ReqQueryStrategyExectionInfo>(arena, *from._impl_.request_type_.reqquerystrategyexectioninfo_);
        break;
      case kReqPlaceOrder:
        _impl_.request_type_.reqplaceorder_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ReqPlaceOrder>(arena, *from._impl_.request_type_.reqplaceorder_);
        break;
      case kReqModifyOrder:
        _impl_.request_type_.reqmodifyorder_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ReqModifyOrder>(arena, *from._impl_.request_type_.reqmodifyorder_);
        break;
      case kReqCancelOrder:
        _impl_.request_type_.reqcancelorder_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ReqCancelOrder>(arena, *from._impl_.request_type_.reqcancelorder_);
        break;
      case kReqOneKeyClosePosition:
        _impl_.request_type_.reqonekeycloseposition_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ReqOneKeyClosePosition>(arena, *from._impl_.request_type_.reqonekeycloseposition_);
        break;
      case kReqQueryActiveOrders:
        _impl_.request_type_.reqqueryactiveorders_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ReqQueryActiveOrders>(arena, *from._impl_.request_type_.reqqueryactiveorders_);
        break;
      case kReqQueryHistoricalOrders:
        _impl_.request_type_.reqqueryhistoricalorders_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ReqQueryHistoricalOrders>(arena, *from._impl_.request_type_.reqqueryhistoricalorders_);
        break;
      case kReqQueryPositions:
        _impl_.request_type_.reqquerypositions_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ReqQueryPositions>(arena, *from._impl_.request_type_.reqquerypositions_);
        break;
      case kReqSetLeverage:
        _impl_.request_type_.reqsetleverage_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ReqSetLeverage>(arena, *from._impl_.request_type_.reqsetleverage_);
        break;
      case kReqQueryLeverage:
        _impl_.request_type_.reqqueryleverage_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ReqQueryLeverage>(arena, *from._impl_.request_type_.reqqueryleverage_);
        break;
      case kReqQueryLeverageBracket:
        _impl_.request_type_.reqqueryleveragebracket_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ReqQueryLeverageBracket>(arena, *from._impl_.request_type_.reqqueryleveragebracket_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:lampyris.crypto.protocol.common.Request)
}
inline PROTOBUF_NDEBUG_INLINE Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : request_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Request::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Request::~Request() {
  // @@protoc_insertion_point(destructor:lampyris.crypto.protocol.common.Request)
  SharedDtor(*this);
}
inline void Request::SharedDtor(MessageLite& self) {
  Request& this_ = static_cast<Request&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_request_type()) {
    this_.clear_request_type();
  }
  this_._impl_.~Impl_();
}

void Request::clear_request_type() {
// @@protoc_insertion_point(one_of_clear_start:lampyris.crypto.protocol.common.Request)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (request_type_case()) {
    case kReqAccountSummaryUpdate: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.reqaccountsummaryupdate_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqaccountsummaryupdate_);
      }
      break;
    }
    case kReqAccountAssetTransfer: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.reqaccountassettransfer_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqaccountassettransfer_);
      }
      break;
    }
    case kReqQueryAssetTransferHistory: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.reqqueryassettransferhistory_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqqueryassettransferhistory_);
      }
      break;
    }
    case kReqLogin: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.reqlogin_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqlogin_);
      }
      break;
    }
    case kReqLogout: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.reqlogout_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqlogout_);
      }
      break;
    }
    case kReqHeartBeat: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.reqheartbeat_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqheartbeat_);
      }
      break;
    }
    case kReqUploadAppBehaviour: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.requploadappbehaviour_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.requploadappbehaviour_);
      }
      break;
    }
    case kReqSubscribeTickerData: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.reqsubscribetickerdata_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqsubscribetickerdata_);
      }
      break;
    }
    case kReqSubscribeTradeData: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.reqsubscribetradedata_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqsubscribetradedata_);
      }
      break;
    }
    case kReqSubscribeCandlestickUpdate: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.reqsubscribecandlestickupdate_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqsubscribecandlestickupdate_);
      }
      break;
    }
    case kReqCandlestickQuery: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.reqcandlestickquery_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqcandlestickquery_);
      }
      break;
    }
    case kReqTradeRule: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.reqtraderule_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqtraderule_);
      }
      break;
    }
    case kReqSelfSelectedSymbol: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.reqselfselectedsymbol_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqselfselectedsymbol_);
      }
      break;
    }
    case kReqModifyStreategySetting: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.reqmodifystreategysetting_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqmodifystreategysetting_);
      }
      break;
    }
    case kReqQueryStrategyExectionInfo: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.reqquerystrategyexectioninfo_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqquerystrategyexectioninfo_);
      }
      break;
    }
    case kReqPlaceOrder: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.reqplaceorder_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqplaceorder_);
      }
      break;
    }
    case kReqModifyOrder: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.reqmodifyorder_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqmodifyorder_);
      }
      break;
    }
    case kReqCancelOrder: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.reqcancelorder_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqcancelorder_);
      }
      break;
    }
    case kReqOneKeyClosePosition: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.reqonekeycloseposition_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqonekeycloseposition_);
      }
      break;
    }
    case kReqQueryActiveOrders: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.reqqueryactiveorders_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqqueryactiveorders_);
      }
      break;
    }
    case kReqQueryHistoricalOrders: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.reqqueryhistoricalorders_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqqueryhistoricalorders_);
      }
      break;
    }
    case kReqQueryPositions: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.reqquerypositions_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqquerypositions_);
      }
      break;
    }
    case kReqSetLeverage: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.reqsetleverage_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqsetleverage_);
      }
      break;
    }
    case kReqQueryLeverage: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.reqqueryleverage_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqqueryleverage_);
      }
      break;
    }
    case kReqQueryLeverageBracket: {
      if (GetArena() == nullptr) {
        delete _impl_.request_type_.reqqueryleveragebracket_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.request_type_.reqqueryleveragebracket_);
      }
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = REQUEST_TYPE_NOT_SET;
}


inline void* Request::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Request(arena);
}
constexpr auto Request::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Request),
                                            alignof(Request));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Request::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Request_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Request::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Request>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Request::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Request>(), &Request::ByteSizeLong,
            &Request::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Request, _impl_._cached_size_),
        false,
    },
    &Request::kDescriptorMethods,
    &descriptor_table_common_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Request::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 25, 25, 0, 2> Request::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    25, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4261412864,  // skipmap
    offsetof(decltype(_table_), field_entries),
    25,  // num_field_entries
    25,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::common::Request>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .lampyris.crypto.protocol.account.ReqAccountSummaryUpdate reqAccountSummaryUpdate = 1;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.request_type_.reqaccountsummaryupdate_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.account.ReqAccountAssetTransfer reqAccountAssetTransfer = 2;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.request_type_.reqaccountassettransfer_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.account.ReqQueryAssetTransferHistory reqQueryAssetTransferHistory = 3;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.request_type_.reqqueryassettransferhistory_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.app.ReqLogin reqLogin = 4;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.request_type_.reqlogin_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.app.ReqLogout reqLogout = 5;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.request_type_.reqlogout_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.app.ReqHeartBeat reqHeartBeat = 6;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.request_type_.reqheartbeat_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.app.ReqUploadAppBehaviour reqUploadAppBehaviour = 7;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.request_type_.requploadappbehaviour_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.quote.ReqSubscribeTickerData reqSubscribeTickerData = 8;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.request_type_.reqsubscribetickerdata_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.quote.ReqSubscribeTradeData reqSubscribeTradeData = 9;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.request_type_.reqsubscribetradedata_), _Internal::kOneofCaseOffset + 0, 8,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.quote.ReqSubscribeCandlestickUpdate reqSubscribeCandlestickUpdate = 10;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.request_type_.reqsubscribecandlestickupdate_), _Internal::kOneofCaseOffset + 0, 9,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.quote.ReqCandlestickQuery reqCandlestickQuery = 11;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.request_type_.reqcandlestickquery_), _Internal::kOneofCaseOffset + 0, 10,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.quote.ReqTradeRule reqTradeRule = 12;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.request_type_.reqtraderule_), _Internal::kOneofCaseOffset + 0, 11,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.quote.ReqSelfSelectedSymbol reqSelfSelectedSymbol = 13;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.request_type_.reqselfselectedsymbol_), _Internal::kOneofCaseOffset + 0, 12,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.strategy.ReqModifyStreategySetting reqModifyStreategySetting = 14;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.request_type_.reqmodifystreategysetting_), _Internal::kOneofCaseOffset + 0, 13,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.strategy.ReqQueryStrategyExectionInfo reqQueryStrategyExectionInfo = 15;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.request_type_.reqquerystrategyexectioninfo_), _Internal::kOneofCaseOffset + 0, 14,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.trading.ReqPlaceOrder reqPlaceOrder = 16;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.request_type_.reqplaceorder_), _Internal::kOneofCaseOffset + 0, 15,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.trading.ReqModifyOrder reqModifyOrder = 17;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.request_type_.reqmodifyorder_), _Internal::kOneofCaseOffset + 0, 16,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.trading.ReqCancelOrder reqCancelOrder = 18;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.request_type_.reqcancelorder_), _Internal::kOneofCaseOffset + 0, 17,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.trading.ReqOneKeyClosePosition reqOneKeyClosePosition = 19;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.request_type_.reqonekeycloseposition_), _Internal::kOneofCaseOffset + 0, 18,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.trading.ReqQueryActiveOrders reqQueryActiveOrders = 20;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.request_type_.reqqueryactiveorders_), _Internal::kOneofCaseOffset + 0, 19,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.trading.ReqQueryHistoricalOrders reqQueryHistoricalOrders = 21;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.request_type_.reqqueryhistoricalorders_), _Internal::kOneofCaseOffset + 0, 20,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.trading.ReqQueryPositions reqQueryPositions = 22;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.request_type_.reqquerypositions_), _Internal::kOneofCaseOffset + 0, 21,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.trading.ReqSetLeverage reqSetLeverage = 23;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.request_type_.reqsetleverage_), _Internal::kOneofCaseOffset + 0, 22,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.trading.ReqQueryLeverage reqQueryLeverage = 24;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.request_type_.reqqueryleverage_), _Internal::kOneofCaseOffset + 0, 23,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.trading.ReqQueryLeverageBracket reqQueryLeverageBracket = 25;
    {PROTOBUF_FIELD_OFFSET(Request, _impl_.request_type_.reqqueryleveragebracket_), _Internal::kOneofCaseOffset + 0, 24,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::account::ReqAccountSummaryUpdate>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::account::ReqAccountAssetTransfer>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::account::ReqQueryAssetTransferHistory>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::app::ReqLogin>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::app::ReqLogout>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::app::ReqHeartBeat>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::app::ReqUploadAppBehaviour>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::quote::ReqSubscribeTickerData>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::quote::ReqSubscribeTradeData>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::quote::ReqSubscribeCandlestickUpdate>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::quote::ReqCandlestickQuery>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::quote::ReqTradeRule>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::quote::ReqSelfSelectedSymbol>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::strategy::ReqModifyStreategySetting>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::strategy::ReqQueryStrategyExectionInfo>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::trading::ReqPlaceOrder>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::trading::ReqModifyOrder>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::trading::ReqCancelOrder>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::trading::ReqOneKeyClosePosition>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::trading::ReqQueryActiveOrders>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::trading::ReqQueryHistoricalOrders>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::trading::ReqQueryPositions>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::trading::ReqSetLeverage>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::trading::ReqQueryLeverage>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::trading::ReqQueryLeverageBracket>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:lampyris.crypto.protocol.common.Request)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_request_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Request::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Request& this_ = static_cast<const Request&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Request::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Request& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:lampyris.crypto.protocol.common.Request)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.request_type_case()) {
            case kReqAccountSummaryUpdate: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.request_type_.reqaccountsummaryupdate_, this_._impl_.request_type_.reqaccountsummaryupdate_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kReqAccountAssetTransfer: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.request_type_.reqaccountassettransfer_, this_._impl_.request_type_.reqaccountassettransfer_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kReqQueryAssetTransferHistory: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.request_type_.reqqueryassettransferhistory_, this_._impl_.request_type_.reqqueryassettransferhistory_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kReqLogin: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.request_type_.reqlogin_, this_._impl_.request_type_.reqlogin_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kReqLogout: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.request_type_.reqlogout_, this_._impl_.request_type_.reqlogout_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kReqHeartBeat: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  6, *this_._impl_.request_type_.reqheartbeat_, this_._impl_.request_type_.reqheartbeat_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kReqUploadAppBehaviour: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  7, *this_._impl_.request_type_.requploadappbehaviour_, this_._impl_.request_type_.requploadappbehaviour_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kReqSubscribeTickerData: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  8, *this_._impl_.request_type_.reqsubscribetickerdata_, this_._impl_.request_type_.reqsubscribetickerdata_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kReqSubscribeTradeData: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  9, *this_._impl_.request_type_.reqsubscribetradedata_, this_._impl_.request_type_.reqsubscribetradedata_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kReqSubscribeCandlestickUpdate: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  10, *this_._impl_.request_type_.reqsubscribecandlestickupdate_, this_._impl_.request_type_.reqsubscribecandlestickupdate_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kReqCandlestickQuery: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  11, *this_._impl_.request_type_.reqcandlestickquery_, this_._impl_.request_type_.reqcandlestickquery_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kReqTradeRule: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  12, *this_._impl_.request_type_.reqtraderule_, this_._impl_.request_type_.reqtraderule_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kReqSelfSelectedSymbol: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  13, *this_._impl_.request_type_.reqselfselectedsymbol_, this_._impl_.request_type_.reqselfselectedsymbol_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kReqModifyStreategySetting: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  14, *this_._impl_.request_type_.reqmodifystreategysetting_, this_._impl_.request_type_.reqmodifystreategysetting_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kReqQueryStrategyExectionInfo: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  15, *this_._impl_.request_type_.reqquerystrategyexectioninfo_, this_._impl_.request_type_.reqquerystrategyexectioninfo_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kReqPlaceOrder: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  16, *this_._impl_.request_type_.reqplaceorder_, this_._impl_.request_type_.reqplaceorder_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kReqModifyOrder: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  17, *this_._impl_.request_type_.reqmodifyorder_, this_._impl_.request_type_.reqmodifyorder_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kReqCancelOrder: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  18, *this_._impl_.request_type_.reqcancelorder_, this_._impl_.request_type_.reqcancelorder_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kReqOneKeyClosePosition: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  19, *this_._impl_.request_type_.reqonekeycloseposition_, this_._impl_.request_type_.reqonekeycloseposition_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kReqQueryActiveOrders: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  20, *this_._impl_.request_type_.reqqueryactiveorders_, this_._impl_.request_type_.reqqueryactiveorders_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kReqQueryHistoricalOrders: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  21, *this_._impl_.request_type_.reqqueryhistoricalorders_, this_._impl_.request_type_.reqqueryhistoricalorders_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kReqQueryPositions: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  22, *this_._impl_.request_type_.reqquerypositions_, this_._impl_.request_type_.reqquerypositions_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kReqSetLeverage: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  23, *this_._impl_.request_type_.reqsetleverage_, this_._impl_.request_type_.reqsetleverage_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kReqQueryLeverage: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  24, *this_._impl_.request_type_.reqqueryleverage_, this_._impl_.request_type_.reqqueryleverage_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kReqQueryLeverageBracket: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  25, *this_._impl_.request_type_.reqqueryleveragebracket_, this_._impl_.request_type_.reqqueryleveragebracket_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:lampyris.crypto.protocol.common.Request)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Request::ByteSizeLong(const MessageLite& base) {
          const Request& this_ = static_cast<const Request&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Request::ByteSizeLong() const {
          const Request& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:lampyris.crypto.protocol.common.Request)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.request_type_case()) {
            // .lampyris.crypto.protocol.account.ReqAccountSummaryUpdate reqAccountSummaryUpdate = 1;
            case kReqAccountSummaryUpdate: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_type_.reqaccountsummaryupdate_);
              break;
            }
            // .lampyris.crypto.protocol.account.ReqAccountAssetTransfer reqAccountAssetTransfer = 2;
            case kReqAccountAssetTransfer: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_type_.reqaccountassettransfer_);
              break;
            }
            // .lampyris.crypto.protocol.account.ReqQueryAssetTransferHistory reqQueryAssetTransferHistory = 3;
            case kReqQueryAssetTransferHistory: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_type_.reqqueryassettransferhistory_);
              break;
            }
            // .lampyris.crypto.protocol.app.ReqLogin reqLogin = 4;
            case kReqLogin: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_type_.reqlogin_);
              break;
            }
            // .lampyris.crypto.protocol.app.ReqLogout reqLogout = 5;
            case kReqLogout: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_type_.reqlogout_);
              break;
            }
            // .lampyris.crypto.protocol.app.ReqHeartBeat reqHeartBeat = 6;
            case kReqHeartBeat: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_type_.reqheartbeat_);
              break;
            }
            // .lampyris.crypto.protocol.app.ReqUploadAppBehaviour reqUploadAppBehaviour = 7;
            case kReqUploadAppBehaviour: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_type_.requploadappbehaviour_);
              break;
            }
            // .lampyris.crypto.protocol.quote.ReqSubscribeTickerData reqSubscribeTickerData = 8;
            case kReqSubscribeTickerData: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_type_.reqsubscribetickerdata_);
              break;
            }
            // .lampyris.crypto.protocol.quote.ReqSubscribeTradeData reqSubscribeTradeData = 9;
            case kReqSubscribeTradeData: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_type_.reqsubscribetradedata_);
              break;
            }
            // .lampyris.crypto.protocol.quote.ReqSubscribeCandlestickUpdate reqSubscribeCandlestickUpdate = 10;
            case kReqSubscribeCandlestickUpdate: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_type_.reqsubscribecandlestickupdate_);
              break;
            }
            // .lampyris.crypto.protocol.quote.ReqCandlestickQuery reqCandlestickQuery = 11;
            case kReqCandlestickQuery: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_type_.reqcandlestickquery_);
              break;
            }
            // .lampyris.crypto.protocol.quote.ReqTradeRule reqTradeRule = 12;
            case kReqTradeRule: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_type_.reqtraderule_);
              break;
            }
            // .lampyris.crypto.protocol.quote.ReqSelfSelectedSymbol reqSelfSelectedSymbol = 13;
            case kReqSelfSelectedSymbol: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_type_.reqselfselectedsymbol_);
              break;
            }
            // .lampyris.crypto.protocol.strategy.ReqModifyStreategySetting reqModifyStreategySetting = 14;
            case kReqModifyStreategySetting: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_type_.reqmodifystreategysetting_);
              break;
            }
            // .lampyris.crypto.protocol.strategy.ReqQueryStrategyExectionInfo reqQueryStrategyExectionInfo = 15;
            case kReqQueryStrategyExectionInfo: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_type_.reqquerystrategyexectioninfo_);
              break;
            }
            // .lampyris.crypto.protocol.trading.ReqPlaceOrder reqPlaceOrder = 16;
            case kReqPlaceOrder: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_type_.reqplaceorder_);
              break;
            }
            // .lampyris.crypto.protocol.trading.ReqModifyOrder reqModifyOrder = 17;
            case kReqModifyOrder: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_type_.reqmodifyorder_);
              break;
            }
            // .lampyris.crypto.protocol.trading.ReqCancelOrder reqCancelOrder = 18;
            case kReqCancelOrder: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_type_.reqcancelorder_);
              break;
            }
            // .lampyris.crypto.protocol.trading.ReqOneKeyClosePosition reqOneKeyClosePosition = 19;
            case kReqOneKeyClosePosition: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_type_.reqonekeycloseposition_);
              break;
            }
            // .lampyris.crypto.protocol.trading.ReqQueryActiveOrders reqQueryActiveOrders = 20;
            case kReqQueryActiveOrders: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_type_.reqqueryactiveorders_);
              break;
            }
            // .lampyris.crypto.protocol.trading.ReqQueryHistoricalOrders reqQueryHistoricalOrders = 21;
            case kReqQueryHistoricalOrders: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_type_.reqqueryhistoricalorders_);
              break;
            }
            // .lampyris.crypto.protocol.trading.ReqQueryPositions reqQueryPositions = 22;
            case kReqQueryPositions: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_type_.reqquerypositions_);
              break;
            }
            // .lampyris.crypto.protocol.trading.ReqSetLeverage reqSetLeverage = 23;
            case kReqSetLeverage: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_type_.reqsetleverage_);
              break;
            }
            // .lampyris.crypto.protocol.trading.ReqQueryLeverage reqQueryLeverage = 24;
            case kReqQueryLeverage: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_type_.reqqueryleverage_);
              break;
            }
            // .lampyris.crypto.protocol.trading.ReqQueryLeverageBracket reqQueryLeverageBracket = 25;
            case kReqQueryLeverageBracket: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.request_type_.reqqueryleveragebracket_);
              break;
            }
            case REQUEST_TYPE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Request::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Request*>(&to_msg);
  auto& from = static_cast<const Request&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:lampyris.crypto.protocol.common.Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_request_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kReqAccountSummaryUpdate: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.reqaccountsummaryupdate_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::account::ReqAccountSummaryUpdate>(arena, *from._impl_.request_type_.reqaccountsummaryupdate_);
        } else {
          _this->_impl_.request_type_.reqaccountsummaryupdate_->MergeFrom(from._internal_reqaccountsummaryupdate());
        }
        break;
      }
      case kReqAccountAssetTransfer: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.reqaccountassettransfer_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::account::ReqAccountAssetTransfer>(arena, *from._impl_.request_type_.reqaccountassettransfer_);
        } else {
          _this->_impl_.request_type_.reqaccountassettransfer_->MergeFrom(from._internal_reqaccountassettransfer());
        }
        break;
      }
      case kReqQueryAssetTransferHistory: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.reqqueryassettransferhistory_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::account::ReqQueryAssetTransferHistory>(arena, *from._impl_.request_type_.reqqueryassettransferhistory_);
        } else {
          _this->_impl_.request_type_.reqqueryassettransferhistory_->MergeFrom(from._internal_reqqueryassettransferhistory());
        }
        break;
      }
      case kReqLogin: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.reqlogin_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::app::ReqLogin>(arena, *from._impl_.request_type_.reqlogin_);
        } else {
          _this->_impl_.request_type_.reqlogin_->MergeFrom(from._internal_reqlogin());
        }
        break;
      }
      case kReqLogout: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.reqlogout_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::app::ReqLogout>(arena, *from._impl_.request_type_.reqlogout_);
        } else {
          _this->_impl_.request_type_.reqlogout_->MergeFrom(from._internal_reqlogout());
        }
        break;
      }
      case kReqHeartBeat: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.reqheartbeat_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::app::ReqHeartBeat>(arena, *from._impl_.request_type_.reqheartbeat_);
        } else {
          _this->_impl_.request_type_.reqheartbeat_->MergeFrom(from._internal_reqheartbeat());
        }
        break;
      }
      case kReqUploadAppBehaviour: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.requploadappbehaviour_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::app::ReqUploadAppBehaviour>(arena, *from._impl_.request_type_.requploadappbehaviour_);
        } else {
          _this->_impl_.request_type_.requploadappbehaviour_->MergeFrom(from._internal_requploadappbehaviour());
        }
        break;
      }
      case kReqSubscribeTickerData: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.reqsubscribetickerdata_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::ReqSubscribeTickerData>(arena, *from._impl_.request_type_.reqsubscribetickerdata_);
        } else {
          _this->_impl_.request_type_.reqsubscribetickerdata_->MergeFrom(from._internal_reqsubscribetickerdata());
        }
        break;
      }
      case kReqSubscribeTradeData: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.reqsubscribetradedata_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::ReqSubscribeTradeData>(arena, *from._impl_.request_type_.reqsubscribetradedata_);
        } else {
          _this->_impl_.request_type_.reqsubscribetradedata_->MergeFrom(from._internal_reqsubscribetradedata());
        }
        break;
      }
      case kReqSubscribeCandlestickUpdate: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.reqsubscribecandlestickupdate_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::ReqSubscribeCandlestickUpdate>(arena, *from._impl_.request_type_.reqsubscribecandlestickupdate_);
        } else {
          _this->_impl_.request_type_.reqsubscribecandlestickupdate_->MergeFrom(from._internal_reqsubscribecandlestickupdate());
        }
        break;
      }
      case kReqCandlestickQuery: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.reqcandlestickquery_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::ReqCandlestickQuery>(arena, *from._impl_.request_type_.reqcandlestickquery_);
        } else {
          _this->_impl_.request_type_.reqcandlestickquery_->MergeFrom(from._internal_reqcandlestickquery());
        }
        break;
      }
      case kReqTradeRule: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.reqtraderule_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::ReqTradeRule>(arena, *from._impl_.request_type_.reqtraderule_);
        } else {
          _this->_impl_.request_type_.reqtraderule_->MergeFrom(from._internal_reqtraderule());
        }
        break;
      }
      case kReqSelfSelectedSymbol: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.reqselfselectedsymbol_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::ReqSelfSelectedSymbol>(arena, *from._impl_.request_type_.reqselfselectedsymbol_);
        } else {
          _this->_impl_.request_type_.reqselfselectedsymbol_->MergeFrom(from._internal_reqselfselectedsymbol());
        }
        break;
      }
      case kReqModifyStreategySetting: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.reqmodifystreategysetting_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::strategy::ReqModifyStreategySetting>(arena, *from._impl_.request_type_.reqmodifystreategysetting_);
        } else {
          _this->_impl_.request_type_.reqmodifystreategysetting_->MergeFrom(from._internal_reqmodifystreategysetting());
        }
        break;
      }
      case kReqQueryStrategyExectionInfo: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.reqquerystrategyexectioninfo_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::strategy::ReqQueryStrategyExectionInfo>(arena, *from._impl_.request_type_.reqquerystrategyexectioninfo_);
        } else {
          _this->_impl_.request_type_.reqquerystrategyexectioninfo_->MergeFrom(from._internal_reqquerystrategyexectioninfo());
        }
        break;
      }
      case kReqPlaceOrder: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.reqplaceorder_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ReqPlaceOrder>(arena, *from._impl_.request_type_.reqplaceorder_);
        } else {
          _this->_impl_.request_type_.reqplaceorder_->MergeFrom(from._internal_reqplaceorder());
        }
        break;
      }
      case kReqModifyOrder: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.reqmodifyorder_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ReqModifyOrder>(arena, *from._impl_.request_type_.reqmodifyorder_);
        } else {
          _this->_impl_.request_type_.reqmodifyorder_->MergeFrom(from._internal_reqmodifyorder());
        }
        break;
      }
      case kReqCancelOrder: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.reqcancelorder_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ReqCancelOrder>(arena, *from._impl_.request_type_.reqcancelorder_);
        } else {
          _this->_impl_.request_type_.reqcancelorder_->MergeFrom(from._internal_reqcancelorder());
        }
        break;
      }
      case kReqOneKeyClosePosition: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.reqonekeycloseposition_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ReqOneKeyClosePosition>(arena, *from._impl_.request_type_.reqonekeycloseposition_);
        } else {
          _this->_impl_.request_type_.reqonekeycloseposition_->MergeFrom(from._internal_reqonekeycloseposition());
        }
        break;
      }
      case kReqQueryActiveOrders: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.reqqueryactiveorders_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ReqQueryActiveOrders>(arena, *from._impl_.request_type_.reqqueryactiveorders_);
        } else {
          _this->_impl_.request_type_.reqqueryactiveorders_->MergeFrom(from._internal_reqqueryactiveorders());
        }
        break;
      }
      case kReqQueryHistoricalOrders: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.reqqueryhistoricalorders_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ReqQueryHistoricalOrders>(arena, *from._impl_.request_type_.reqqueryhistoricalorders_);
        } else {
          _this->_impl_.request_type_.reqqueryhistoricalorders_->MergeFrom(from._internal_reqqueryhistoricalorders());
        }
        break;
      }
      case kReqQueryPositions: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.reqquerypositions_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ReqQueryPositions>(arena, *from._impl_.request_type_.reqquerypositions_);
        } else {
          _this->_impl_.request_type_.reqquerypositions_->MergeFrom(from._internal_reqquerypositions());
        }
        break;
      }
      case kReqSetLeverage: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.reqsetleverage_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ReqSetLeverage>(arena, *from._impl_.request_type_.reqsetleverage_);
        } else {
          _this->_impl_.request_type_.reqsetleverage_->MergeFrom(from._internal_reqsetleverage());
        }
        break;
      }
      case kReqQueryLeverage: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.reqqueryleverage_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ReqQueryLeverage>(arena, *from._impl_.request_type_.reqqueryleverage_);
        } else {
          _this->_impl_.request_type_.reqqueryleverage_->MergeFrom(from._internal_reqqueryleverage());
        }
        break;
      }
      case kReqQueryLeverageBracket: {
        if (oneof_needs_init) {
          _this->_impl_.request_type_.reqqueryleveragebracket_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ReqQueryLeverageBracket>(arena, *from._impl_.request_type_.reqqueryleveragebracket_);
        } else {
          _this->_impl_.request_type_.reqqueryleveragebracket_->MergeFrom(from._internal_reqqueryleveragebracket());
        }
        break;
      }
      case REQUEST_TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lampyris.crypto.protocol.common.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Request::InternalSwap(Request* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.request_type_, other->_impl_.request_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Response::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::lampyris::crypto::protocol::common::Response, _impl_._oneof_case_);
};

void Response::set_allocated_accountassetinfobean(::lampyris::crypto::protocol::account::AccountAssetInfoBean* accountassetinfobean) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (accountassetinfobean) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(accountassetinfobean)->GetArena();
    if (message_arena != submessage_arena) {
      accountassetinfobean = ::google::protobuf::internal::GetOwnedMessage(message_arena, accountassetinfobean, submessage_arena);
    }
    set_has_accountassetinfobean();
    _impl_.response_type_.accountassetinfobean_ = accountassetinfobean;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.accountAssetInfoBean)
}
void Response::clear_accountassetinfobean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kAccountAssetInfoBean) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.accountassetinfobean_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.accountassetinfobean_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_subaccountinfobean(::lampyris::crypto::protocol::account::SubAccountInfoBean* subaccountinfobean) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (subaccountinfobean) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(subaccountinfobean)->GetArena();
    if (message_arena != submessage_arena) {
      subaccountinfobean = ::google::protobuf::internal::GetOwnedMessage(message_arena, subaccountinfobean, submessage_arena);
    }
    set_has_subaccountinfobean();
    _impl_.response_type_.subaccountinfobean_ = subaccountinfobean;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.subAccountInfoBean)
}
void Response::clear_subaccountinfobean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kSubAccountInfoBean) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.subaccountinfobean_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.subaccountinfobean_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_resquerysubacccountlist(::lampyris::crypto::protocol::account::ResQuerySubAcccountList* resquerysubacccountlist) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (resquerysubacccountlist) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(resquerysubacccountlist)->GetArena();
    if (message_arena != submessage_arena) {
      resquerysubacccountlist = ::google::protobuf::internal::GetOwnedMessage(message_arena, resquerysubacccountlist, submessage_arena);
    }
    set_has_resquerysubacccountlist();
    _impl_.response_type_.resquerysubacccountlist_ = resquerysubacccountlist;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.resQuerySubAcccountList)
}
void Response::clear_resquerysubacccountlist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kResQuerySubAcccountList) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.resquerysubacccountlist_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.resquerysubacccountlist_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_resaccountsummaryupdate(::lampyris::crypto::protocol::account::ResAccountSummaryUpdate* resaccountsummaryupdate) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (resaccountsummaryupdate) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(resaccountsummaryupdate)->GetArena();
    if (message_arena != submessage_arena) {
      resaccountsummaryupdate = ::google::protobuf::internal::GetOwnedMessage(message_arena, resaccountsummaryupdate, submessage_arena);
    }
    set_has_resaccountsummaryupdate();
    _impl_.response_type_.resaccountsummaryupdate_ = resaccountsummaryupdate;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.resAccountSummaryUpdate)
}
void Response::clear_resaccountsummaryupdate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kResAccountSummaryUpdate) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.resaccountsummaryupdate_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.resaccountsummaryupdate_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_assettransferhistoryinfodetailbean(::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean* assettransferhistoryinfodetailbean) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (assettransferhistoryinfodetailbean) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(assettransferhistoryinfodetailbean)->GetArena();
    if (message_arena != submessage_arena) {
      assettransferhistoryinfodetailbean = ::google::protobuf::internal::GetOwnedMessage(message_arena, assettransferhistoryinfodetailbean, submessage_arena);
    }
    set_has_assettransferhistoryinfodetailbean();
    _impl_.response_type_.assettransferhistoryinfodetailbean_ = assettransferhistoryinfodetailbean;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.assetTransferHistoryInfoDetailBean)
}
void Response::clear_assettransferhistoryinfodetailbean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kAssetTransferHistoryInfoDetailBean) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.assettransferhistoryinfodetailbean_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.assettransferhistoryinfodetailbean_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_assettransferhistoryinfobean(::lampyris::crypto::protocol::account::AssetTransferHistoryInfoBean* assettransferhistoryinfobean) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (assettransferhistoryinfobean) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(assettransferhistoryinfobean)->GetArena();
    if (message_arena != submessage_arena) {
      assettransferhistoryinfobean = ::google::protobuf::internal::GetOwnedMessage(message_arena, assettransferhistoryinfobean, submessage_arena);
    }
    set_has_assettransferhistoryinfobean();
    _impl_.response_type_.assettransferhistoryinfobean_ = assettransferhistoryinfobean;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.assetTransferHistoryInfoBean)
}
void Response::clear_assettransferhistoryinfobean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kAssetTransferHistoryInfoBean) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.assettransferhistoryinfobean_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.assettransferhistoryinfobean_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_reslogin(::lampyris::crypto::protocol::app::ResLogin* reslogin) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (reslogin) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(reslogin)->GetArena();
    if (message_arena != submessage_arena) {
      reslogin = ::google::protobuf::internal::GetOwnedMessage(message_arena, reslogin, submessage_arena);
    }
    set_has_reslogin();
    _impl_.response_type_.reslogin_ = reslogin;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.resLogin)
}
void Response::clear_reslogin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kResLogin) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.reslogin_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.reslogin_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_resheartbeat(::lampyris::crypto::protocol::app::ResHeartBeat* resheartbeat) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (resheartbeat) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(resheartbeat)->GetArena();
    if (message_arena != submessage_arena) {
      resheartbeat = ::google::protobuf::internal::GetOwnedMessage(message_arena, resheartbeat, submessage_arena);
    }
    set_has_resheartbeat();
    _impl_.response_type_.resheartbeat_ = resheartbeat;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.resHeartBeat)
}
void Response::clear_resheartbeat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kResHeartBeat) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.resheartbeat_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.resheartbeat_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_resnotice(::lampyris::crypto::protocol::app::ResNotice* resnotice) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (resnotice) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(resnotice)->GetArena();
    if (message_arena != submessage_arena) {
      resnotice = ::google::protobuf::internal::GetOwnedMessage(message_arena, resnotice, submessage_arena);
    }
    set_has_resnotice();
    _impl_.response_type_.resnotice_ = resnotice;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.resNotice)
}
void Response::clear_resnotice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kResNotice) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.resnotice_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.resnotice_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_symboltickerdatabean(::lampyris::crypto::protocol::quote::SymbolTickerDataBean* symboltickerdatabean) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (symboltickerdatabean) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(symboltickerdatabean)->GetArena();
    if (message_arena != submessage_arena) {
      symboltickerdatabean = ::google::protobuf::internal::GetOwnedMessage(message_arena, symboltickerdatabean, submessage_arena);
    }
    set_has_symboltickerdatabean();
    _impl_.response_type_.symboltickerdatabean_ = symboltickerdatabean;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.symbolTickerDataBean)
}
void Response::clear_symboltickerdatabean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kSymbolTickerDataBean) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.symboltickerdatabean_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.symboltickerdatabean_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_ressubscribetickerdata(::lampyris::crypto::protocol::quote::ResSubscribeTickerData* ressubscribetickerdata) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (ressubscribetickerdata) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(ressubscribetickerdata)->GetArena();
    if (message_arena != submessage_arena) {
      ressubscribetickerdata = ::google::protobuf::internal::GetOwnedMessage(message_arena, ressubscribetickerdata, submessage_arena);
    }
    set_has_ressubscribetickerdata();
    _impl_.response_type_.ressubscribetickerdata_ = ressubscribetickerdata;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.resSubscribeTickerData)
}
void Response::clear_ressubscribetickerdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kResSubscribeTickerData) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.ressubscribetickerdata_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.ressubscribetickerdata_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_symboltradedatabean(::lampyris::crypto::protocol::quote::SymbolTradeDataBean* symboltradedatabean) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (symboltradedatabean) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(symboltradedatabean)->GetArena();
    if (message_arena != submessage_arena) {
      symboltradedatabean = ::google::protobuf::internal::GetOwnedMessage(message_arena, symboltradedatabean, submessage_arena);
    }
    set_has_symboltradedatabean();
    _impl_.response_type_.symboltradedatabean_ = symboltradedatabean;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.symbolTradeDataBean)
}
void Response::clear_symboltradedatabean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kSymbolTradeDataBean) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.symboltradedatabean_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.symboltradedatabean_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_tradedatabean(::lampyris::crypto::protocol::quote::TradeDataBean* tradedatabean) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (tradedatabean) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(tradedatabean)->GetArena();
    if (message_arena != submessage_arena) {
      tradedatabean = ::google::protobuf::internal::GetOwnedMessage(message_arena, tradedatabean, submessage_arena);
    }
    set_has_tradedatabean();
    _impl_.response_type_.tradedatabean_ = tradedatabean;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.tradeDataBean)
}
void Response::clear_tradedatabean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kTradeDataBean) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.tradedatabean_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.tradedatabean_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_rescandlestickquery(::lampyris::crypto::protocol::quote::ResCandlestickQuery* rescandlestickquery) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (rescandlestickquery) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(rescandlestickquery)->GetArena();
    if (message_arena != submessage_arena) {
      rescandlestickquery = ::google::protobuf::internal::GetOwnedMessage(message_arena, rescandlestickquery, submessage_arena);
    }
    set_has_rescandlestickquery();
    _impl_.response_type_.rescandlestickquery_ = rescandlestickquery;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.resCandlestickQuery)
}
void Response::clear_rescandlestickquery() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kResCandlestickQuery) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.rescandlestickquery_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.rescandlestickquery_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_candlestickupdatebean(::lampyris::crypto::protocol::quote::CandlestickUpdateBean* candlestickupdatebean) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (candlestickupdatebean) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(candlestickupdatebean)->GetArena();
    if (message_arena != submessage_arena) {
      candlestickupdatebean = ::google::protobuf::internal::GetOwnedMessage(message_arena, candlestickupdatebean, submessage_arena);
    }
    set_has_candlestickupdatebean();
    _impl_.response_type_.candlestickupdatebean_ = candlestickupdatebean;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.candlestickUpdateBean)
}
void Response::clear_candlestickupdatebean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kCandlestickUpdateBean) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.candlestickupdatebean_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.candlestickupdatebean_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_candlestickbean(::lampyris::crypto::protocol::quote::CandlestickBean* candlestickbean) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (candlestickbean) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(candlestickbean)->GetArena();
    if (message_arena != submessage_arena) {
      candlestickbean = ::google::protobuf::internal::GetOwnedMessage(message_arena, candlestickbean, submessage_arena);
    }
    set_has_candlestickbean();
    _impl_.response_type_.candlestickbean_ = candlestickbean;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.candlestickBean)
}
void Response::clear_candlestickbean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kCandlestickBean) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.candlestickbean_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.candlestickbean_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_restraderule(::lampyris::crypto::protocol::quote::ResTradeRule* restraderule) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (restraderule) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(restraderule)->GetArena();
    if (message_arena != submessage_arena) {
      restraderule = ::google::protobuf::internal::GetOwnedMessage(message_arena, restraderule, submessage_arena);
    }
    set_has_restraderule();
    _impl_.response_type_.restraderule_ = restraderule;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.resTradeRule)
}
void Response::clear_restraderule() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kResTradeRule) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.restraderule_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.restraderule_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_symboltraderulebean(::lampyris::crypto::protocol::quote::SymbolTradeRuleBean* symboltraderulebean) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (symboltraderulebean) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(symboltraderulebean)->GetArena();
    if (message_arena != submessage_arena) {
      symboltraderulebean = ::google::protobuf::internal::GetOwnedMessage(message_arena, symboltraderulebean, submessage_arena);
    }
    set_has_symboltraderulebean();
    _impl_.response_type_.symboltraderulebean_ = symboltraderulebean;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.symbolTradeRuleBean)
}
void Response::clear_symboltraderulebean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kSymbolTradeRuleBean) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.symboltraderulebean_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.symboltraderulebean_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_marketmonitornoticelistbean(::lampyris::crypto::protocol::quote::MarketMonitorNoticeListBean* marketmonitornoticelistbean) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (marketmonitornoticelistbean) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(marketmonitornoticelistbean)->GetArena();
    if (message_arena != submessage_arena) {
      marketmonitornoticelistbean = ::google::protobuf::internal::GetOwnedMessage(message_arena, marketmonitornoticelistbean, submessage_arena);
    }
    set_has_marketmonitornoticelistbean();
    _impl_.response_type_.marketmonitornoticelistbean_ = marketmonitornoticelistbean;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.marketMonitorNoticeListBean)
}
void Response::clear_marketmonitornoticelistbean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kMarketMonitorNoticeListBean) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.marketmonitornoticelistbean_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.marketmonitornoticelistbean_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_marketmonitornoticebean(::lampyris::crypto::protocol::quote::MarketMonitorNoticeBean* marketmonitornoticebean) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (marketmonitornoticebean) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(marketmonitornoticebean)->GetArena();
    if (message_arena != submessage_arena) {
      marketmonitornoticebean = ::google::protobuf::internal::GetOwnedMessage(message_arena, marketmonitornoticebean, submessage_arena);
    }
    set_has_marketmonitornoticebean();
    _impl_.response_type_.marketmonitornoticebean_ = marketmonitornoticebean;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.marketMonitorNoticeBean)
}
void Response::clear_marketmonitornoticebean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kMarketMonitorNoticeBean) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.marketmonitornoticebean_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.marketmonitornoticebean_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_selfselectedsymbolinfobean(::lampyris::crypto::protocol::quote::SelfSelectedSymbolInfoBean* selfselectedsymbolinfobean) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (selfselectedsymbolinfobean) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(selfselectedsymbolinfobean)->GetArena();
    if (message_arena != submessage_arena) {
      selfselectedsymbolinfobean = ::google::protobuf::internal::GetOwnedMessage(message_arena, selfselectedsymbolinfobean, submessage_arena);
    }
    set_has_selfselectedsymbolinfobean();
    _impl_.response_type_.selfselectedsymbolinfobean_ = selfselectedsymbolinfobean;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.selfSelectedSymbolInfoBean)
}
void Response::clear_selfselectedsymbolinfobean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kSelfSelectedSymbolInfoBean) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.selfselectedsymbolinfobean_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.selfselectedsymbolinfobean_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_selfselectedsymbolgroupbean(::lampyris::crypto::protocol::quote::SelfSelectedSymbolGroupBean* selfselectedsymbolgroupbean) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (selfselectedsymbolgroupbean) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(selfselectedsymbolgroupbean)->GetArena();
    if (message_arena != submessage_arena) {
      selfselectedsymbolgroupbean = ::google::protobuf::internal::GetOwnedMessage(message_arena, selfselectedsymbolgroupbean, submessage_arena);
    }
    set_has_selfselectedsymbolgroupbean();
    _impl_.response_type_.selfselectedsymbolgroupbean_ = selfselectedsymbolgroupbean;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.selfSelectedSymbolGroupBean)
}
void Response::clear_selfselectedsymbolgroupbean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kSelfSelectedSymbolGroupBean) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.selfselectedsymbolgroupbean_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.selfselectedsymbolgroupbean_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_resselfselectedsymbol(::lampyris::crypto::protocol::quote::ResSelfSelectedSymbol* resselfselectedsymbol) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (resselfselectedsymbol) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(resselfselectedsymbol)->GetArena();
    if (message_arena != submessage_arena) {
      resselfselectedsymbol = ::google::protobuf::internal::GetOwnedMessage(message_arena, resselfselectedsymbol, submessage_arena);
    }
    set_has_resselfselectedsymbol();
    _impl_.response_type_.resselfselectedsymbol_ = resselfselectedsymbol;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.resSelfSelectedSymbol)
}
void Response::clear_resselfselectedsymbol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kResSelfSelectedSymbol) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.resselfselectedsymbol_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.resselfselectedsymbol_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_marketpreviewintervaldatabean(::lampyris::crypto::protocol::quote::MarketPreviewIntervalDataBean* marketpreviewintervaldatabean) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (marketpreviewintervaldatabean) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(marketpreviewintervaldatabean)->GetArena();
    if (message_arena != submessage_arena) {
      marketpreviewintervaldatabean = ::google::protobuf::internal::GetOwnedMessage(message_arena, marketpreviewintervaldatabean, submessage_arena);
    }
    set_has_marketpreviewintervaldatabean();
    _impl_.response_type_.marketpreviewintervaldatabean_ = marketpreviewintervaldatabean;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.marketPreviewIntervalDataBean)
}
void Response::clear_marketpreviewintervaldatabean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kMarketPreviewIntervalDataBean) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.marketpreviewintervaldatabean_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.marketpreviewintervaldatabean_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_resmarketpreviewdata(::lampyris::crypto::protocol::quote::ResMarketPreviewData* resmarketpreviewdata) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (resmarketpreviewdata) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(resmarketpreviewdata)->GetArena();
    if (message_arena != submessage_arena) {
      resmarketpreviewdata = ::google::protobuf::internal::GetOwnedMessage(message_arena, resmarketpreviewdata, submessage_arena);
    }
    set_has_resmarketpreviewdata();
    _impl_.response_type_.resmarketpreviewdata_ = resmarketpreviewdata;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.resMarketPreviewData)
}
void Response::clear_resmarketpreviewdata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kResMarketPreviewData) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.resmarketpreviewdata_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.resmarketpreviewdata_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_streategyconfigbean(::lampyris::crypto::protocol::strategy::StreategyConfigBean* streategyconfigbean) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (streategyconfigbean) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(streategyconfigbean)->GetArena();
    if (message_arena != submessage_arena) {
      streategyconfigbean = ::google::protobuf::internal::GetOwnedMessage(message_arena, streategyconfigbean, submessage_arena);
    }
    set_has_streategyconfigbean();
    _impl_.response_type_.streategyconfigbean_ = streategyconfigbean;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.streategyConfigBean)
}
void Response::clear_streategyconfigbean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kStreategyConfigBean) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.streategyconfigbean_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.streategyconfigbean_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_streategyfieldbean(::lampyris::crypto::protocol::strategy::StreategyFieldBean* streategyfieldbean) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (streategyfieldbean) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(streategyfieldbean)->GetArena();
    if (message_arena != submessage_arena) {
      streategyfieldbean = ::google::protobuf::internal::GetOwnedMessage(message_arena, streategyfieldbean, submessage_arena);
    }
    set_has_streategyfieldbean();
    _impl_.response_type_.streategyfieldbean_ = streategyfieldbean;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.streategyFieldBean)
}
void Response::clear_streategyfieldbean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kStreategyFieldBean) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.streategyfieldbean_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.streategyfieldbean_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_resmodifystreategysetting(::lampyris::crypto::protocol::strategy::ResModifyStreategySetting* resmodifystreategysetting) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (resmodifystreategysetting) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(resmodifystreategysetting)->GetArena();
    if (message_arena != submessage_arena) {
      resmodifystreategysetting = ::google::protobuf::internal::GetOwnedMessage(message_arena, resmodifystreategysetting, submessage_arena);
    }
    set_has_resmodifystreategysetting();
    _impl_.response_type_.resmodifystreategysetting_ = resmodifystreategysetting;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.resModifyStreategySetting)
}
void Response::clear_resmodifystreategysetting() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kResModifyStreategySetting) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.resmodifystreategysetting_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.resmodifystreategysetting_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_resstreategysettings(::lampyris::crypto::protocol::strategy::ResStreategySettings* resstreategysettings) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (resstreategysettings) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(resstreategysettings)->GetArena();
    if (message_arena != submessage_arena) {
      resstreategysettings = ::google::protobuf::internal::GetOwnedMessage(message_arena, resstreategysettings, submessage_arena);
    }
    set_has_resstreategysettings();
    _impl_.response_type_.resstreategysettings_ = resstreategysettings;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.resStreategySettings)
}
void Response::clear_resstreategysettings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kResStreategySettings) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.resstreategysettings_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.resstreategysettings_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_strategyexectioninfobean(::lampyris::crypto::protocol::strategy::StrategyExectionInfoBean* strategyexectioninfobean) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (strategyexectioninfobean) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(strategyexectioninfobean)->GetArena();
    if (message_arena != submessage_arena) {
      strategyexectioninfobean = ::google::protobuf::internal::GetOwnedMessage(message_arena, strategyexectioninfobean, submessage_arena);
    }
    set_has_strategyexectioninfobean();
    _impl_.response_type_.strategyexectioninfobean_ = strategyexectioninfobean;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.strategyExectionInfoBean)
}
void Response::clear_strategyexectioninfobean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kStrategyExectionInfoBean) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.strategyexectioninfobean_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.strategyexectioninfobean_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_resquerystrategyexectioninfo(::lampyris::crypto::protocol::strategy::ResQueryStrategyExectionInfo* resquerystrategyexectioninfo) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (resquerystrategyexectioninfo) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(resquerystrategyexectioninfo)->GetArena();
    if (message_arena != submessage_arena) {
      resquerystrategyexectioninfo = ::google::protobuf::internal::GetOwnedMessage(message_arena, resquerystrategyexectioninfo, submessage_arena);
    }
    set_has_resquerystrategyexectioninfo();
    _impl_.response_type_.resquerystrategyexectioninfo_ = resquerystrategyexectioninfo;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.resQueryStrategyExectionInfo)
}
void Response::clear_resquerystrategyexectioninfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kResQueryStrategyExectionInfo) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.resquerystrategyexectioninfo_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.resquerystrategyexectioninfo_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_conditiontriggerbean(::lampyris::crypto::protocol::trading::ConditionTriggerBean* conditiontriggerbean) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (conditiontriggerbean) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(conditiontriggerbean)->GetArena();
    if (message_arena != submessage_arena) {
      conditiontriggerbean = ::google::protobuf::internal::GetOwnedMessage(message_arena, conditiontriggerbean, submessage_arena);
    }
    set_has_conditiontriggerbean();
    _impl_.response_type_.conditiontriggerbean_ = conditiontriggerbean;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.conditionTriggerBean)
}
void Response::clear_conditiontriggerbean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kConditionTriggerBean) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.conditiontriggerbean_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.conditiontriggerbean_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_orderbean(::lampyris::crypto::protocol::trading::OrderBean* orderbean) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (orderbean) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(orderbean)->GetArena();
    if (message_arena != submessage_arena) {
      orderbean = ::google::protobuf::internal::GetOwnedMessage(message_arena, orderbean, submessage_arena);
    }
    set_has_orderbean();
    _impl_.response_type_.orderbean_ = orderbean;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.orderBean)
}
void Response::clear_orderbean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kOrderBean) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.orderbean_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.orderbean_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_orderstatusbean(::lampyris::crypto::protocol::trading::OrderStatusBean* orderstatusbean) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (orderstatusbean) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(orderstatusbean)->GetArena();
    if (message_arena != submessage_arena) {
      orderstatusbean = ::google::protobuf::internal::GetOwnedMessage(message_arena, orderstatusbean, submessage_arena);
    }
    set_has_orderstatusbean();
    _impl_.response_type_.orderstatusbean_ = orderstatusbean;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.orderStatusBean)
}
void Response::clear_orderstatusbean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kOrderStatusBean) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.orderstatusbean_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.orderstatusbean_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_resqueryorders(::lampyris::crypto::protocol::trading::ResQueryOrders* resqueryorders) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (resqueryorders) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(resqueryorders)->GetArena();
    if (message_arena != submessage_arena) {
      resqueryorders = ::google::protobuf::internal::GetOwnedMessage(message_arena, resqueryorders, submessage_arena);
    }
    set_has_resqueryorders();
    _impl_.response_type_.resqueryorders_ = resqueryorders;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.resQueryOrders)
}
void Response::clear_resqueryorders() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kResQueryOrders) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.resqueryorders_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.resqueryorders_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_positionbean(::lampyris::crypto::protocol::trading::PositionBean* positionbean) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (positionbean) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(positionbean)->GetArena();
    if (message_arena != submessage_arena) {
      positionbean = ::google::protobuf::internal::GetOwnedMessage(message_arena, positionbean, submessage_arena);
    }
    set_has_positionbean();
    _impl_.response_type_.positionbean_ = positionbean;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.positionBean)
}
void Response::clear_positionbean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kPositionBean) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.positionbean_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.positionbean_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_resquerypositions(::lampyris::crypto::protocol::trading::ResQueryPositions* resquerypositions) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (resquerypositions) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(resquerypositions)->GetArena();
    if (message_arena != submessage_arena) {
      resquerypositions = ::google::protobuf::internal::GetOwnedMessage(message_arena, resquerypositions, submessage_arena);
    }
    set_has_resquerypositions();
    _impl_.response_type_.resquerypositions_ = resquerypositions;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.resQueryPositions)
}
void Response::clear_resquerypositions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kResQueryPositions) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.resquerypositions_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.resquerypositions_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_leveragebean(::lampyris::crypto::protocol::trading::LeverageBean* leveragebean) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (leveragebean) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(leveragebean)->GetArena();
    if (message_arena != submessage_arena) {
      leveragebean = ::google::protobuf::internal::GetOwnedMessage(message_arena, leveragebean, submessage_arena);
    }
    set_has_leveragebean();
    _impl_.response_type_.leveragebean_ = leveragebean;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.leverageBean)
}
void Response::clear_leveragebean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kLeverageBean) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.leveragebean_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.leveragebean_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_resqueryleverage(::lampyris::crypto::protocol::trading::ResQueryLeverage* resqueryleverage) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (resqueryleverage) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(resqueryleverage)->GetArena();
    if (message_arena != submessage_arena) {
      resqueryleverage = ::google::protobuf::internal::GetOwnedMessage(message_arena, resqueryleverage, submessage_arena);
    }
    set_has_resqueryleverage();
    _impl_.response_type_.resqueryleverage_ = resqueryleverage;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.resQueryLeverage)
}
void Response::clear_resqueryleverage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kResQueryLeverage) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.resqueryleverage_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.resqueryleverage_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_resqueryleveragebracket(::lampyris::crypto::protocol::trading::ResQueryLeverageBracket* resqueryleveragebracket) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (resqueryleveragebracket) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(resqueryleveragebracket)->GetArena();
    if (message_arena != submessage_arena) {
      resqueryleveragebracket = ::google::protobuf::internal::GetOwnedMessage(message_arena, resqueryleveragebracket, submessage_arena);
    }
    set_has_resqueryleveragebracket();
    _impl_.response_type_.resqueryleveragebracket_ = resqueryleveragebracket;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.resQueryLeverageBracket)
}
void Response::clear_resqueryleveragebracket() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kResQueryLeverageBracket) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.resqueryleveragebracket_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.resqueryleveragebracket_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_symbolleveragebracketbean(::lampyris::crypto::protocol::trading::SymbolLeverageBracketBean* symbolleveragebracketbean) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (symbolleveragebracketbean) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(symbolleveragebracketbean)->GetArena();
    if (message_arena != submessage_arena) {
      symbolleveragebracketbean = ::google::protobuf::internal::GetOwnedMessage(message_arena, symbolleveragebracketbean, submessage_arena);
    }
    set_has_symbolleveragebracketbean();
    _impl_.response_type_.symbolleveragebracketbean_ = symbolleveragebracketbean;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.symbolLeverageBracketBean)
}
void Response::clear_symbolleveragebracketbean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kSymbolLeverageBracketBean) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.symbolleveragebracketbean_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.symbolleveragebracketbean_);
    }
    clear_has_response_type();
  }
}
void Response::set_allocated_leveragebracketbean(::lampyris::crypto::protocol::trading::LeverageBracketBean* leveragebracketbean) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_response_type();
  if (leveragebracketbean) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(leveragebracketbean)->GetArena();
    if (message_arena != submessage_arena) {
      leveragebracketbean = ::google::protobuf::internal::GetOwnedMessage(message_arena, leveragebracketbean, submessage_arena);
    }
    set_has_leveragebracketbean();
    _impl_.response_type_.leveragebracketbean_ = leveragebracketbean;
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.common.Response.leverageBracketBean)
}
void Response::clear_leveragebracketbean() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (response_type_case() == kLeverageBracketBean) {
    if (GetArena() == nullptr) {
      delete _impl_.response_type_.leveragebracketbean_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.leveragebracketbean_);
    }
    clear_has_response_type();
  }
}
Response::Response(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lampyris.crypto.protocol.common.Response)
}
inline PROTOBUF_NDEBUG_INLINE Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::lampyris::crypto::protocol::common::Response& from_msg)
      : response_type_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Response::Response(
    ::google::protobuf::Arena* arena,
    const Response& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (response_type_case()) {
    case RESPONSE_TYPE_NOT_SET:
      break;
      case kAccountAssetInfoBean:
        _impl_.response_type_.accountassetinfobean_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::account::AccountAssetInfoBean>(arena, *from._impl_.response_type_.accountassetinfobean_);
        break;
      case kSubAccountInfoBean:
        _impl_.response_type_.subaccountinfobean_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::account::SubAccountInfoBean>(arena, *from._impl_.response_type_.subaccountinfobean_);
        break;
      case kResQuerySubAcccountList:
        _impl_.response_type_.resquerysubacccountlist_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::account::ResQuerySubAcccountList>(arena, *from._impl_.response_type_.resquerysubacccountlist_);
        break;
      case kResAccountSummaryUpdate:
        _impl_.response_type_.resaccountsummaryupdate_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::account::ResAccountSummaryUpdate>(arena, *from._impl_.response_type_.resaccountsummaryupdate_);
        break;
      case kAssetTransferHistoryInfoDetailBean:
        _impl_.response_type_.assettransferhistoryinfodetailbean_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean>(arena, *from._impl_.response_type_.assettransferhistoryinfodetailbean_);
        break;
      case kAssetTransferHistoryInfoBean:
        _impl_.response_type_.assettransferhistoryinfobean_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::account::AssetTransferHistoryInfoBean>(arena, *from._impl_.response_type_.assettransferhistoryinfobean_);
        break;
      case kResLogin:
        _impl_.response_type_.reslogin_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::app::ResLogin>(arena, *from._impl_.response_type_.reslogin_);
        break;
      case kResHeartBeat:
        _impl_.response_type_.resheartbeat_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::app::ResHeartBeat>(arena, *from._impl_.response_type_.resheartbeat_);
        break;
      case kResNotice:
        _impl_.response_type_.resnotice_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::app::ResNotice>(arena, *from._impl_.response_type_.resnotice_);
        break;
      case kSymbolTickerDataBean:
        _impl_.response_type_.symboltickerdatabean_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::SymbolTickerDataBean>(arena, *from._impl_.response_type_.symboltickerdatabean_);
        break;
      case kResSubscribeTickerData:
        _impl_.response_type_.ressubscribetickerdata_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::ResSubscribeTickerData>(arena, *from._impl_.response_type_.ressubscribetickerdata_);
        break;
      case kSymbolTradeDataBean:
        _impl_.response_type_.symboltradedatabean_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::SymbolTradeDataBean>(arena, *from._impl_.response_type_.symboltradedatabean_);
        break;
      case kTradeDataBean:
        _impl_.response_type_.tradedatabean_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::TradeDataBean>(arena, *from._impl_.response_type_.tradedatabean_);
        break;
      case kResCandlestickQuery:
        _impl_.response_type_.rescandlestickquery_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::ResCandlestickQuery>(arena, *from._impl_.response_type_.rescandlestickquery_);
        break;
      case kCandlestickUpdateBean:
        _impl_.response_type_.candlestickupdatebean_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::CandlestickUpdateBean>(arena, *from._impl_.response_type_.candlestickupdatebean_);
        break;
      case kCandlestickBean:
        _impl_.response_type_.candlestickbean_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::CandlestickBean>(arena, *from._impl_.response_type_.candlestickbean_);
        break;
      case kResTradeRule:
        _impl_.response_type_.restraderule_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::ResTradeRule>(arena, *from._impl_.response_type_.restraderule_);
        break;
      case kSymbolTradeRuleBean:
        _impl_.response_type_.symboltraderulebean_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::SymbolTradeRuleBean>(arena, *from._impl_.response_type_.symboltraderulebean_);
        break;
      case kMarketMonitorNoticeListBean:
        _impl_.response_type_.marketmonitornoticelistbean_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::MarketMonitorNoticeListBean>(arena, *from._impl_.response_type_.marketmonitornoticelistbean_);
        break;
      case kMarketMonitorNoticeBean:
        _impl_.response_type_.marketmonitornoticebean_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::MarketMonitorNoticeBean>(arena, *from._impl_.response_type_.marketmonitornoticebean_);
        break;
      case kSelfSelectedSymbolInfoBean:
        _impl_.response_type_.selfselectedsymbolinfobean_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::SelfSelectedSymbolInfoBean>(arena, *from._impl_.response_type_.selfselectedsymbolinfobean_);
        break;
      case kSelfSelectedSymbolGroupBean:
        _impl_.response_type_.selfselectedsymbolgroupbean_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::SelfSelectedSymbolGroupBean>(arena, *from._impl_.response_type_.selfselectedsymbolgroupbean_);
        break;
      case kResSelfSelectedSymbol:
        _impl_.response_type_.resselfselectedsymbol_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::ResSelfSelectedSymbol>(arena, *from._impl_.response_type_.resselfselectedsymbol_);
        break;
      case kMarketPreviewIntervalDataBean:
        _impl_.response_type_.marketpreviewintervaldatabean_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::MarketPreviewIntervalDataBean>(arena, *from._impl_.response_type_.marketpreviewintervaldatabean_);
        break;
      case kResMarketPreviewData:
        _impl_.response_type_.resmarketpreviewdata_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::ResMarketPreviewData>(arena, *from._impl_.response_type_.resmarketpreviewdata_);
        break;
      case kStreategyConfigBean:
        _impl_.response_type_.streategyconfigbean_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::strategy::StreategyConfigBean>(arena, *from._impl_.response_type_.streategyconfigbean_);
        break;
      case kStreategyFieldBean:
        _impl_.response_type_.streategyfieldbean_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::strategy::StreategyFieldBean>(arena, *from._impl_.response_type_.streategyfieldbean_);
        break;
      case kResModifyStreategySetting:
        _impl_.response_type_.resmodifystreategysetting_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::strategy::ResModifyStreategySetting>(arena, *from._impl_.response_type_.resmodifystreategysetting_);
        break;
      case kResStreategySettings:
        _impl_.response_type_.resstreategysettings_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::strategy::ResStreategySettings>(arena, *from._impl_.response_type_.resstreategysettings_);
        break;
      case kStrategyExectionInfoBean:
        _impl_.response_type_.strategyexectioninfobean_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::strategy::StrategyExectionInfoBean>(arena, *from._impl_.response_type_.strategyexectioninfobean_);
        break;
      case kResQueryStrategyExectionInfo:
        _impl_.response_type_.resquerystrategyexectioninfo_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::strategy::ResQueryStrategyExectionInfo>(arena, *from._impl_.response_type_.resquerystrategyexectioninfo_);
        break;
      case kConditionTriggerBean:
        _impl_.response_type_.conditiontriggerbean_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ConditionTriggerBean>(arena, *from._impl_.response_type_.conditiontriggerbean_);
        break;
      case kOrderBean:
        _impl_.response_type_.orderbean_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::OrderBean>(arena, *from._impl_.response_type_.orderbean_);
        break;
      case kOrderStatusBean:
        _impl_.response_type_.orderstatusbean_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::OrderStatusBean>(arena, *from._impl_.response_type_.orderstatusbean_);
        break;
      case kResQueryOrders:
        _impl_.response_type_.resqueryorders_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ResQueryOrders>(arena, *from._impl_.response_type_.resqueryorders_);
        break;
      case kPositionBean:
        _impl_.response_type_.positionbean_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::PositionBean>(arena, *from._impl_.response_type_.positionbean_);
        break;
      case kResQueryPositions:
        _impl_.response_type_.resquerypositions_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ResQueryPositions>(arena, *from._impl_.response_type_.resquerypositions_);
        break;
      case kLeverageBean:
        _impl_.response_type_.leveragebean_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::LeverageBean>(arena, *from._impl_.response_type_.leveragebean_);
        break;
      case kResQueryLeverage:
        _impl_.response_type_.resqueryleverage_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ResQueryLeverage>(arena, *from._impl_.response_type_.resqueryleverage_);
        break;
      case kResQueryLeverageBracket:
        _impl_.response_type_.resqueryleveragebracket_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ResQueryLeverageBracket>(arena, *from._impl_.response_type_.resqueryleveragebracket_);
        break;
      case kSymbolLeverageBracketBean:
        _impl_.response_type_.symbolleveragebracketbean_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::SymbolLeverageBracketBean>(arena, *from._impl_.response_type_.symbolleveragebracketbean_);
        break;
      case kLeverageBracketBean:
        _impl_.response_type_.leveragebracketbean_ = ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::LeverageBracketBean>(arena, *from._impl_.response_type_.leveragebracketbean_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:lampyris.crypto.protocol.common.Response)
}
inline PROTOBUF_NDEBUG_INLINE Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : response_type_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Response::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Response::~Response() {
  // @@protoc_insertion_point(destructor:lampyris.crypto.protocol.common.Response)
  SharedDtor(*this);
}
inline void Response::SharedDtor(MessageLite& self) {
  Response& this_ = static_cast<Response&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_response_type()) {
    this_.clear_response_type();
  }
  this_._impl_.~Impl_();
}

void Response::clear_response_type() {
// @@protoc_insertion_point(one_of_clear_start:lampyris.crypto.protocol.common.Response)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (response_type_case()) {
    case kAccountAssetInfoBean: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.accountassetinfobean_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.accountassetinfobean_);
      }
      break;
    }
    case kSubAccountInfoBean: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.subaccountinfobean_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.subaccountinfobean_);
      }
      break;
    }
    case kResQuerySubAcccountList: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.resquerysubacccountlist_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.resquerysubacccountlist_);
      }
      break;
    }
    case kResAccountSummaryUpdate: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.resaccountsummaryupdate_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.resaccountsummaryupdate_);
      }
      break;
    }
    case kAssetTransferHistoryInfoDetailBean: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.assettransferhistoryinfodetailbean_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.assettransferhistoryinfodetailbean_);
      }
      break;
    }
    case kAssetTransferHistoryInfoBean: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.assettransferhistoryinfobean_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.assettransferhistoryinfobean_);
      }
      break;
    }
    case kResLogin: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.reslogin_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.reslogin_);
      }
      break;
    }
    case kResHeartBeat: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.resheartbeat_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.resheartbeat_);
      }
      break;
    }
    case kResNotice: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.resnotice_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.resnotice_);
      }
      break;
    }
    case kSymbolTickerDataBean: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.symboltickerdatabean_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.symboltickerdatabean_);
      }
      break;
    }
    case kResSubscribeTickerData: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.ressubscribetickerdata_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.ressubscribetickerdata_);
      }
      break;
    }
    case kSymbolTradeDataBean: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.symboltradedatabean_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.symboltradedatabean_);
      }
      break;
    }
    case kTradeDataBean: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.tradedatabean_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.tradedatabean_);
      }
      break;
    }
    case kResCandlestickQuery: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.rescandlestickquery_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.rescandlestickquery_);
      }
      break;
    }
    case kCandlestickUpdateBean: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.candlestickupdatebean_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.candlestickupdatebean_);
      }
      break;
    }
    case kCandlestickBean: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.candlestickbean_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.candlestickbean_);
      }
      break;
    }
    case kResTradeRule: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.restraderule_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.restraderule_);
      }
      break;
    }
    case kSymbolTradeRuleBean: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.symboltraderulebean_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.symboltraderulebean_);
      }
      break;
    }
    case kMarketMonitorNoticeListBean: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.marketmonitornoticelistbean_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.marketmonitornoticelistbean_);
      }
      break;
    }
    case kMarketMonitorNoticeBean: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.marketmonitornoticebean_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.marketmonitornoticebean_);
      }
      break;
    }
    case kSelfSelectedSymbolInfoBean: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.selfselectedsymbolinfobean_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.selfselectedsymbolinfobean_);
      }
      break;
    }
    case kSelfSelectedSymbolGroupBean: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.selfselectedsymbolgroupbean_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.selfselectedsymbolgroupbean_);
      }
      break;
    }
    case kResSelfSelectedSymbol: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.resselfselectedsymbol_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.resselfselectedsymbol_);
      }
      break;
    }
    case kMarketPreviewIntervalDataBean: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.marketpreviewintervaldatabean_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.marketpreviewintervaldatabean_);
      }
      break;
    }
    case kResMarketPreviewData: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.resmarketpreviewdata_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.resmarketpreviewdata_);
      }
      break;
    }
    case kStreategyConfigBean: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.streategyconfigbean_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.streategyconfigbean_);
      }
      break;
    }
    case kStreategyFieldBean: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.streategyfieldbean_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.streategyfieldbean_);
      }
      break;
    }
    case kResModifyStreategySetting: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.resmodifystreategysetting_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.resmodifystreategysetting_);
      }
      break;
    }
    case kResStreategySettings: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.resstreategysettings_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.resstreategysettings_);
      }
      break;
    }
    case kStrategyExectionInfoBean: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.strategyexectioninfobean_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.strategyexectioninfobean_);
      }
      break;
    }
    case kResQueryStrategyExectionInfo: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.resquerystrategyexectioninfo_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.resquerystrategyexectioninfo_);
      }
      break;
    }
    case kConditionTriggerBean: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.conditiontriggerbean_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.conditiontriggerbean_);
      }
      break;
    }
    case kOrderBean: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.orderbean_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.orderbean_);
      }
      break;
    }
    case kOrderStatusBean: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.orderstatusbean_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.orderstatusbean_);
      }
      break;
    }
    case kResQueryOrders: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.resqueryorders_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.resqueryorders_);
      }
      break;
    }
    case kPositionBean: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.positionbean_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.positionbean_);
      }
      break;
    }
    case kResQueryPositions: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.resquerypositions_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.resquerypositions_);
      }
      break;
    }
    case kLeverageBean: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.leveragebean_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.leveragebean_);
      }
      break;
    }
    case kResQueryLeverage: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.resqueryleverage_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.resqueryleverage_);
      }
      break;
    }
    case kResQueryLeverageBracket: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.resqueryleveragebracket_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.resqueryleveragebracket_);
      }
      break;
    }
    case kSymbolLeverageBracketBean: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.symbolleveragebracketbean_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.symbolleveragebracketbean_);
      }
      break;
    }
    case kLeverageBracketBean: {
      if (GetArena() == nullptr) {
        delete _impl_.response_type_.leveragebracketbean_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.response_type_.leveragebracketbean_);
      }
      break;
    }
    case RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESPONSE_TYPE_NOT_SET;
}


inline void* Response::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Response(arena);
}
constexpr auto Response::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Response),
                                            alignof(Response));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Response::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Response_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Response::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Response>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Response::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Response>(), &Response::ByteSizeLong,
            &Response::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Response, _impl_._cached_size_),
        false,
    },
    &Response::kDescriptorMethods,
    &descriptor_table_common_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Response::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 42, 42, 0, 7> Response::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    42, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    0,  // skipmap
    offsetof(decltype(_table_), field_entries),
    42,  // num_field_entries
    42,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::common::Response>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    33, 0, 1,
    64512, 32,
    65535, 65535
  }}, {{
    // .lampyris.crypto.protocol.account.AccountAssetInfoBean accountAssetInfoBean = 1;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.accountassetinfobean_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.account.SubAccountInfoBean subAccountInfoBean = 2;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.subaccountinfobean_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.account.ResQuerySubAcccountList resQuerySubAcccountList = 3;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.resquerysubacccountlist_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.account.ResAccountSummaryUpdate resAccountSummaryUpdate = 4;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.resaccountsummaryupdate_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.account.AssetTransferHistoryInfoDetailBean assetTransferHistoryInfoDetailBean = 5;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.assettransferhistoryinfodetailbean_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.account.AssetTransferHistoryInfoBean assetTransferHistoryInfoBean = 6;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.assettransferhistoryinfobean_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.app.ResLogin resLogin = 7;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.reslogin_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.app.ResHeartBeat resHeartBeat = 8;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.resheartbeat_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.app.ResNotice resNotice = 9;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.resnotice_), _Internal::kOneofCaseOffset + 0, 8,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.quote.SymbolTickerDataBean symbolTickerDataBean = 10;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.symboltickerdatabean_), _Internal::kOneofCaseOffset + 0, 9,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.quote.ResSubscribeTickerData resSubscribeTickerData = 11;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.ressubscribetickerdata_), _Internal::kOneofCaseOffset + 0, 10,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.quote.SymbolTradeDataBean symbolTradeDataBean = 12;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.symboltradedatabean_), _Internal::kOneofCaseOffset + 0, 11,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.quote.TradeDataBean tradeDataBean = 13;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.tradedatabean_), _Internal::kOneofCaseOffset + 0, 12,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.quote.ResCandlestickQuery resCandlestickQuery = 14;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.rescandlestickquery_), _Internal::kOneofCaseOffset + 0, 13,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.quote.CandlestickUpdateBean candlestickUpdateBean = 15;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.candlestickupdatebean_), _Internal::kOneofCaseOffset + 0, 14,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.quote.CandlestickBean candlestickBean = 16;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.candlestickbean_), _Internal::kOneofCaseOffset + 0, 15,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.quote.ResTradeRule resTradeRule = 17;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.restraderule_), _Internal::kOneofCaseOffset + 0, 16,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.quote.SymbolTradeRuleBean symbolTradeRuleBean = 18;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.symboltraderulebean_), _Internal::kOneofCaseOffset + 0, 17,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.quote.MarketMonitorNoticeListBean marketMonitorNoticeListBean = 19;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.marketmonitornoticelistbean_), _Internal::kOneofCaseOffset + 0, 18,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.quote.MarketMonitorNoticeBean marketMonitorNoticeBean = 20;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.marketmonitornoticebean_), _Internal::kOneofCaseOffset + 0, 19,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.quote.SelfSelectedSymbolInfoBean selfSelectedSymbolInfoBean = 21;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.selfselectedsymbolinfobean_), _Internal::kOneofCaseOffset + 0, 20,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.quote.SelfSelectedSymbolGroupBean selfSelectedSymbolGroupBean = 22;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.selfselectedsymbolgroupbean_), _Internal::kOneofCaseOffset + 0, 21,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.quote.ResSelfSelectedSymbol resSelfSelectedSymbol = 23;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.resselfselectedsymbol_), _Internal::kOneofCaseOffset + 0, 22,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.quote.MarketPreviewIntervalDataBean marketPreviewIntervalDataBean = 24;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.marketpreviewintervaldatabean_), _Internal::kOneofCaseOffset + 0, 23,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.quote.ResMarketPreviewData resMarketPreviewData = 25;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.resmarketpreviewdata_), _Internal::kOneofCaseOffset + 0, 24,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.strategy.StreategyConfigBean streategyConfigBean = 26;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.streategyconfigbean_), _Internal::kOneofCaseOffset + 0, 25,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.strategy.StreategyFieldBean streategyFieldBean = 27;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.streategyfieldbean_), _Internal::kOneofCaseOffset + 0, 26,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.strategy.ResModifyStreategySetting resModifyStreategySetting = 28;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.resmodifystreategysetting_), _Internal::kOneofCaseOffset + 0, 27,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.strategy.ResStreategySettings resStreategySettings = 29;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.resstreategysettings_), _Internal::kOneofCaseOffset + 0, 28,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.strategy.StrategyExectionInfoBean strategyExectionInfoBean = 30;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.strategyexectioninfobean_), _Internal::kOneofCaseOffset + 0, 29,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.strategy.ResQueryStrategyExectionInfo resQueryStrategyExectionInfo = 31;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.resquerystrategyexectioninfo_), _Internal::kOneofCaseOffset + 0, 30,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.trading.ConditionTriggerBean conditionTriggerBean = 32;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.conditiontriggerbean_), _Internal::kOneofCaseOffset + 0, 31,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.trading.OrderBean orderBean = 33;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.orderbean_), _Internal::kOneofCaseOffset + 0, 32,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.trading.OrderStatusBean orderStatusBean = 34;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.orderstatusbean_), _Internal::kOneofCaseOffset + 0, 33,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.trading.ResQueryOrders resQueryOrders = 35;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.resqueryorders_), _Internal::kOneofCaseOffset + 0, 34,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.trading.PositionBean positionBean = 36;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.positionbean_), _Internal::kOneofCaseOffset + 0, 35,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.trading.ResQueryPositions resQueryPositions = 37;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.resquerypositions_), _Internal::kOneofCaseOffset + 0, 36,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.trading.LeverageBean leverageBean = 38;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.leveragebean_), _Internal::kOneofCaseOffset + 0, 37,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.trading.ResQueryLeverage resQueryLeverage = 39;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.resqueryleverage_), _Internal::kOneofCaseOffset + 0, 38,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.trading.ResQueryLeverageBracket resQueryLeverageBracket = 40;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.resqueryleveragebracket_), _Internal::kOneofCaseOffset + 0, 39,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.trading.SymbolLeverageBracketBean symbolLeverageBracketBean = 41;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.symbolleveragebracketbean_), _Internal::kOneofCaseOffset + 0, 40,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lampyris.crypto.protocol.trading.LeverageBracketBean leverageBracketBean = 42;
    {PROTOBUF_FIELD_OFFSET(Response, _impl_.response_type_.leveragebracketbean_), _Internal::kOneofCaseOffset + 0, 41,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::account::AccountAssetInfoBean>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::account::SubAccountInfoBean>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::account::ResQuerySubAcccountList>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::account::ResAccountSummaryUpdate>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::account::AssetTransferHistoryInfoBean>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::app::ResLogin>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::app::ResHeartBeat>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::app::ResNotice>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::quote::SymbolTickerDataBean>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::quote::ResSubscribeTickerData>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::quote::SymbolTradeDataBean>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::quote::TradeDataBean>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::quote::ResCandlestickQuery>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::quote::CandlestickUpdateBean>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::quote::CandlestickBean>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::quote::ResTradeRule>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::quote::SymbolTradeRuleBean>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::quote::MarketMonitorNoticeListBean>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::quote::MarketMonitorNoticeBean>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::quote::SelfSelectedSymbolInfoBean>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::quote::SelfSelectedSymbolGroupBean>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::quote::ResSelfSelectedSymbol>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::quote::MarketPreviewIntervalDataBean>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::quote::ResMarketPreviewData>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::strategy::StreategyConfigBean>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::strategy::StreategyFieldBean>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::strategy::ResModifyStreategySetting>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::strategy::ResStreategySettings>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::strategy::StrategyExectionInfoBean>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::strategy::ResQueryStrategyExectionInfo>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::trading::ConditionTriggerBean>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::trading::OrderBean>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::trading::OrderStatusBean>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::trading::ResQueryOrders>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::trading::PositionBean>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::trading::ResQueryPositions>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::trading::LeverageBean>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::trading::ResQueryLeverage>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::trading::ResQueryLeverageBracket>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::trading::SymbolLeverageBracketBean>()},
    {::_pbi::TcParser::GetTable<::lampyris::crypto::protocol::trading::LeverageBracketBean>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:lampyris.crypto.protocol.common.Response)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_response_type();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Response::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Response& this_ = static_cast<const Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Response::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:lampyris.crypto.protocol.common.Response)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.response_type_case()) {
            case kAccountAssetInfoBean: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.response_type_.accountassetinfobean_, this_._impl_.response_type_.accountassetinfobean_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSubAccountInfoBean: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.response_type_.subaccountinfobean_, this_._impl_.response_type_.subaccountinfobean_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kResQuerySubAcccountList: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.response_type_.resquerysubacccountlist_, this_._impl_.response_type_.resquerysubacccountlist_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kResAccountSummaryUpdate: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.response_type_.resaccountsummaryupdate_, this_._impl_.response_type_.resaccountsummaryupdate_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kAssetTransferHistoryInfoDetailBean: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.response_type_.assettransferhistoryinfodetailbean_, this_._impl_.response_type_.assettransferhistoryinfodetailbean_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kAssetTransferHistoryInfoBean: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  6, *this_._impl_.response_type_.assettransferhistoryinfobean_, this_._impl_.response_type_.assettransferhistoryinfobean_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kResLogin: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  7, *this_._impl_.response_type_.reslogin_, this_._impl_.response_type_.reslogin_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kResHeartBeat: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  8, *this_._impl_.response_type_.resheartbeat_, this_._impl_.response_type_.resheartbeat_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kResNotice: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  9, *this_._impl_.response_type_.resnotice_, this_._impl_.response_type_.resnotice_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSymbolTickerDataBean: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  10, *this_._impl_.response_type_.symboltickerdatabean_, this_._impl_.response_type_.symboltickerdatabean_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kResSubscribeTickerData: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  11, *this_._impl_.response_type_.ressubscribetickerdata_, this_._impl_.response_type_.ressubscribetickerdata_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSymbolTradeDataBean: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  12, *this_._impl_.response_type_.symboltradedatabean_, this_._impl_.response_type_.symboltradedatabean_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kTradeDataBean: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  13, *this_._impl_.response_type_.tradedatabean_, this_._impl_.response_type_.tradedatabean_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kResCandlestickQuery: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  14, *this_._impl_.response_type_.rescandlestickquery_, this_._impl_.response_type_.rescandlestickquery_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCandlestickUpdateBean: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  15, *this_._impl_.response_type_.candlestickupdatebean_, this_._impl_.response_type_.candlestickupdatebean_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kCandlestickBean: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  16, *this_._impl_.response_type_.candlestickbean_, this_._impl_.response_type_.candlestickbean_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kResTradeRule: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  17, *this_._impl_.response_type_.restraderule_, this_._impl_.response_type_.restraderule_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSymbolTradeRuleBean: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  18, *this_._impl_.response_type_.symboltraderulebean_, this_._impl_.response_type_.symboltraderulebean_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kMarketMonitorNoticeListBean: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  19, *this_._impl_.response_type_.marketmonitornoticelistbean_, this_._impl_.response_type_.marketmonitornoticelistbean_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kMarketMonitorNoticeBean: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  20, *this_._impl_.response_type_.marketmonitornoticebean_, this_._impl_.response_type_.marketmonitornoticebean_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSelfSelectedSymbolInfoBean: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  21, *this_._impl_.response_type_.selfselectedsymbolinfobean_, this_._impl_.response_type_.selfselectedsymbolinfobean_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSelfSelectedSymbolGroupBean: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  22, *this_._impl_.response_type_.selfselectedsymbolgroupbean_, this_._impl_.response_type_.selfselectedsymbolgroupbean_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kResSelfSelectedSymbol: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  23, *this_._impl_.response_type_.resselfselectedsymbol_, this_._impl_.response_type_.resselfselectedsymbol_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kMarketPreviewIntervalDataBean: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  24, *this_._impl_.response_type_.marketpreviewintervaldatabean_, this_._impl_.response_type_.marketpreviewintervaldatabean_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kResMarketPreviewData: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  25, *this_._impl_.response_type_.resmarketpreviewdata_, this_._impl_.response_type_.resmarketpreviewdata_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kStreategyConfigBean: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  26, *this_._impl_.response_type_.streategyconfigbean_, this_._impl_.response_type_.streategyconfigbean_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kStreategyFieldBean: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  27, *this_._impl_.response_type_.streategyfieldbean_, this_._impl_.response_type_.streategyfieldbean_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kResModifyStreategySetting: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  28, *this_._impl_.response_type_.resmodifystreategysetting_, this_._impl_.response_type_.resmodifystreategysetting_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kResStreategySettings: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  29, *this_._impl_.response_type_.resstreategysettings_, this_._impl_.response_type_.resstreategysettings_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kStrategyExectionInfoBean: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  30, *this_._impl_.response_type_.strategyexectioninfobean_, this_._impl_.response_type_.strategyexectioninfobean_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kResQueryStrategyExectionInfo: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  31, *this_._impl_.response_type_.resquerystrategyexectioninfo_, this_._impl_.response_type_.resquerystrategyexectioninfo_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kConditionTriggerBean: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  32, *this_._impl_.response_type_.conditiontriggerbean_, this_._impl_.response_type_.conditiontriggerbean_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kOrderBean: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  33, *this_._impl_.response_type_.orderbean_, this_._impl_.response_type_.orderbean_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kOrderStatusBean: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  34, *this_._impl_.response_type_.orderstatusbean_, this_._impl_.response_type_.orderstatusbean_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kResQueryOrders: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  35, *this_._impl_.response_type_.resqueryorders_, this_._impl_.response_type_.resqueryorders_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kPositionBean: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  36, *this_._impl_.response_type_.positionbean_, this_._impl_.response_type_.positionbean_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kResQueryPositions: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  37, *this_._impl_.response_type_.resquerypositions_, this_._impl_.response_type_.resquerypositions_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kLeverageBean: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  38, *this_._impl_.response_type_.leveragebean_, this_._impl_.response_type_.leveragebean_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kResQueryLeverage: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  39, *this_._impl_.response_type_.resqueryleverage_, this_._impl_.response_type_.resqueryleverage_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kResQueryLeverageBracket: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  40, *this_._impl_.response_type_.resqueryleveragebracket_, this_._impl_.response_type_.resqueryleveragebracket_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kSymbolLeverageBracketBean: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  41, *this_._impl_.response_type_.symbolleveragebracketbean_, this_._impl_.response_type_.symbolleveragebracketbean_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kLeverageBracketBean: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  42, *this_._impl_.response_type_.leveragebracketbean_, this_._impl_.response_type_.leveragebracketbean_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:lampyris.crypto.protocol.common.Response)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Response::ByteSizeLong(const MessageLite& base) {
          const Response& this_ = static_cast<const Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Response::ByteSizeLong() const {
          const Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:lampyris.crypto.protocol.common.Response)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.response_type_case()) {
            // .lampyris.crypto.protocol.account.AccountAssetInfoBean accountAssetInfoBean = 1;
            case kAccountAssetInfoBean: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.accountassetinfobean_);
              break;
            }
            // .lampyris.crypto.protocol.account.SubAccountInfoBean subAccountInfoBean = 2;
            case kSubAccountInfoBean: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.subaccountinfobean_);
              break;
            }
            // .lampyris.crypto.protocol.account.ResQuerySubAcccountList resQuerySubAcccountList = 3;
            case kResQuerySubAcccountList: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.resquerysubacccountlist_);
              break;
            }
            // .lampyris.crypto.protocol.account.ResAccountSummaryUpdate resAccountSummaryUpdate = 4;
            case kResAccountSummaryUpdate: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.resaccountsummaryupdate_);
              break;
            }
            // .lampyris.crypto.protocol.account.AssetTransferHistoryInfoDetailBean assetTransferHistoryInfoDetailBean = 5;
            case kAssetTransferHistoryInfoDetailBean: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.assettransferhistoryinfodetailbean_);
              break;
            }
            // .lampyris.crypto.protocol.account.AssetTransferHistoryInfoBean assetTransferHistoryInfoBean = 6;
            case kAssetTransferHistoryInfoBean: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.assettransferhistoryinfobean_);
              break;
            }
            // .lampyris.crypto.protocol.app.ResLogin resLogin = 7;
            case kResLogin: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.reslogin_);
              break;
            }
            // .lampyris.crypto.protocol.app.ResHeartBeat resHeartBeat = 8;
            case kResHeartBeat: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.resheartbeat_);
              break;
            }
            // .lampyris.crypto.protocol.app.ResNotice resNotice = 9;
            case kResNotice: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.resnotice_);
              break;
            }
            // .lampyris.crypto.protocol.quote.SymbolTickerDataBean symbolTickerDataBean = 10;
            case kSymbolTickerDataBean: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.symboltickerdatabean_);
              break;
            }
            // .lampyris.crypto.protocol.quote.ResSubscribeTickerData resSubscribeTickerData = 11;
            case kResSubscribeTickerData: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.ressubscribetickerdata_);
              break;
            }
            // .lampyris.crypto.protocol.quote.SymbolTradeDataBean symbolTradeDataBean = 12;
            case kSymbolTradeDataBean: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.symboltradedatabean_);
              break;
            }
            // .lampyris.crypto.protocol.quote.TradeDataBean tradeDataBean = 13;
            case kTradeDataBean: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.tradedatabean_);
              break;
            }
            // .lampyris.crypto.protocol.quote.ResCandlestickQuery resCandlestickQuery = 14;
            case kResCandlestickQuery: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.rescandlestickquery_);
              break;
            }
            // .lampyris.crypto.protocol.quote.CandlestickUpdateBean candlestickUpdateBean = 15;
            case kCandlestickUpdateBean: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.candlestickupdatebean_);
              break;
            }
            // .lampyris.crypto.protocol.quote.CandlestickBean candlestickBean = 16;
            case kCandlestickBean: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.candlestickbean_);
              break;
            }
            // .lampyris.crypto.protocol.quote.ResTradeRule resTradeRule = 17;
            case kResTradeRule: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.restraderule_);
              break;
            }
            // .lampyris.crypto.protocol.quote.SymbolTradeRuleBean symbolTradeRuleBean = 18;
            case kSymbolTradeRuleBean: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.symboltraderulebean_);
              break;
            }
            // .lampyris.crypto.protocol.quote.MarketMonitorNoticeListBean marketMonitorNoticeListBean = 19;
            case kMarketMonitorNoticeListBean: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.marketmonitornoticelistbean_);
              break;
            }
            // .lampyris.crypto.protocol.quote.MarketMonitorNoticeBean marketMonitorNoticeBean = 20;
            case kMarketMonitorNoticeBean: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.marketmonitornoticebean_);
              break;
            }
            // .lampyris.crypto.protocol.quote.SelfSelectedSymbolInfoBean selfSelectedSymbolInfoBean = 21;
            case kSelfSelectedSymbolInfoBean: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.selfselectedsymbolinfobean_);
              break;
            }
            // .lampyris.crypto.protocol.quote.SelfSelectedSymbolGroupBean selfSelectedSymbolGroupBean = 22;
            case kSelfSelectedSymbolGroupBean: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.selfselectedsymbolgroupbean_);
              break;
            }
            // .lampyris.crypto.protocol.quote.ResSelfSelectedSymbol resSelfSelectedSymbol = 23;
            case kResSelfSelectedSymbol: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.resselfselectedsymbol_);
              break;
            }
            // .lampyris.crypto.protocol.quote.MarketPreviewIntervalDataBean marketPreviewIntervalDataBean = 24;
            case kMarketPreviewIntervalDataBean: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.marketpreviewintervaldatabean_);
              break;
            }
            // .lampyris.crypto.protocol.quote.ResMarketPreviewData resMarketPreviewData = 25;
            case kResMarketPreviewData: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.resmarketpreviewdata_);
              break;
            }
            // .lampyris.crypto.protocol.strategy.StreategyConfigBean streategyConfigBean = 26;
            case kStreategyConfigBean: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.streategyconfigbean_);
              break;
            }
            // .lampyris.crypto.protocol.strategy.StreategyFieldBean streategyFieldBean = 27;
            case kStreategyFieldBean: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.streategyfieldbean_);
              break;
            }
            // .lampyris.crypto.protocol.strategy.ResModifyStreategySetting resModifyStreategySetting = 28;
            case kResModifyStreategySetting: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.resmodifystreategysetting_);
              break;
            }
            // .lampyris.crypto.protocol.strategy.ResStreategySettings resStreategySettings = 29;
            case kResStreategySettings: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.resstreategysettings_);
              break;
            }
            // .lampyris.crypto.protocol.strategy.StrategyExectionInfoBean strategyExectionInfoBean = 30;
            case kStrategyExectionInfoBean: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.strategyexectioninfobean_);
              break;
            }
            // .lampyris.crypto.protocol.strategy.ResQueryStrategyExectionInfo resQueryStrategyExectionInfo = 31;
            case kResQueryStrategyExectionInfo: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.resquerystrategyexectioninfo_);
              break;
            }
            // .lampyris.crypto.protocol.trading.ConditionTriggerBean conditionTriggerBean = 32;
            case kConditionTriggerBean: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.conditiontriggerbean_);
              break;
            }
            // .lampyris.crypto.protocol.trading.OrderBean orderBean = 33;
            case kOrderBean: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.orderbean_);
              break;
            }
            // .lampyris.crypto.protocol.trading.OrderStatusBean orderStatusBean = 34;
            case kOrderStatusBean: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.orderstatusbean_);
              break;
            }
            // .lampyris.crypto.protocol.trading.ResQueryOrders resQueryOrders = 35;
            case kResQueryOrders: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.resqueryorders_);
              break;
            }
            // .lampyris.crypto.protocol.trading.PositionBean positionBean = 36;
            case kPositionBean: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.positionbean_);
              break;
            }
            // .lampyris.crypto.protocol.trading.ResQueryPositions resQueryPositions = 37;
            case kResQueryPositions: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.resquerypositions_);
              break;
            }
            // .lampyris.crypto.protocol.trading.LeverageBean leverageBean = 38;
            case kLeverageBean: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.leveragebean_);
              break;
            }
            // .lampyris.crypto.protocol.trading.ResQueryLeverage resQueryLeverage = 39;
            case kResQueryLeverage: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.resqueryleverage_);
              break;
            }
            // .lampyris.crypto.protocol.trading.ResQueryLeverageBracket resQueryLeverageBracket = 40;
            case kResQueryLeverageBracket: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.resqueryleveragebracket_);
              break;
            }
            // .lampyris.crypto.protocol.trading.SymbolLeverageBracketBean symbolLeverageBracketBean = 41;
            case kSymbolLeverageBracketBean: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.symbolleveragebracketbean_);
              break;
            }
            // .lampyris.crypto.protocol.trading.LeverageBracketBean leverageBracketBean = 42;
            case kLeverageBracketBean: {
              total_size += 2 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.response_type_.leveragebracketbean_);
              break;
            }
            case RESPONSE_TYPE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Response::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Response*>(&to_msg);
  auto& from = static_cast<const Response&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:lampyris.crypto.protocol.common.Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_response_type();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kAccountAssetInfoBean: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.accountassetinfobean_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::account::AccountAssetInfoBean>(arena, *from._impl_.response_type_.accountassetinfobean_);
        } else {
          _this->_impl_.response_type_.accountassetinfobean_->MergeFrom(from._internal_accountassetinfobean());
        }
        break;
      }
      case kSubAccountInfoBean: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.subaccountinfobean_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::account::SubAccountInfoBean>(arena, *from._impl_.response_type_.subaccountinfobean_);
        } else {
          _this->_impl_.response_type_.subaccountinfobean_->MergeFrom(from._internal_subaccountinfobean());
        }
        break;
      }
      case kResQuerySubAcccountList: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.resquerysubacccountlist_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::account::ResQuerySubAcccountList>(arena, *from._impl_.response_type_.resquerysubacccountlist_);
        } else {
          _this->_impl_.response_type_.resquerysubacccountlist_->MergeFrom(from._internal_resquerysubacccountlist());
        }
        break;
      }
      case kResAccountSummaryUpdate: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.resaccountsummaryupdate_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::account::ResAccountSummaryUpdate>(arena, *from._impl_.response_type_.resaccountsummaryupdate_);
        } else {
          _this->_impl_.response_type_.resaccountsummaryupdate_->MergeFrom(from._internal_resaccountsummaryupdate());
        }
        break;
      }
      case kAssetTransferHistoryInfoDetailBean: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.assettransferhistoryinfodetailbean_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean>(arena, *from._impl_.response_type_.assettransferhistoryinfodetailbean_);
        } else {
          _this->_impl_.response_type_.assettransferhistoryinfodetailbean_->MergeFrom(from._internal_assettransferhistoryinfodetailbean());
        }
        break;
      }
      case kAssetTransferHistoryInfoBean: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.assettransferhistoryinfobean_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::account::AssetTransferHistoryInfoBean>(arena, *from._impl_.response_type_.assettransferhistoryinfobean_);
        } else {
          _this->_impl_.response_type_.assettransferhistoryinfobean_->MergeFrom(from._internal_assettransferhistoryinfobean());
        }
        break;
      }
      case kResLogin: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.reslogin_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::app::ResLogin>(arena, *from._impl_.response_type_.reslogin_);
        } else {
          _this->_impl_.response_type_.reslogin_->MergeFrom(from._internal_reslogin());
        }
        break;
      }
      case kResHeartBeat: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.resheartbeat_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::app::ResHeartBeat>(arena, *from._impl_.response_type_.resheartbeat_);
        } else {
          _this->_impl_.response_type_.resheartbeat_->MergeFrom(from._internal_resheartbeat());
        }
        break;
      }
      case kResNotice: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.resnotice_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::app::ResNotice>(arena, *from._impl_.response_type_.resnotice_);
        } else {
          _this->_impl_.response_type_.resnotice_->MergeFrom(from._internal_resnotice());
        }
        break;
      }
      case kSymbolTickerDataBean: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.symboltickerdatabean_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::SymbolTickerDataBean>(arena, *from._impl_.response_type_.symboltickerdatabean_);
        } else {
          _this->_impl_.response_type_.symboltickerdatabean_->MergeFrom(from._internal_symboltickerdatabean());
        }
        break;
      }
      case kResSubscribeTickerData: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.ressubscribetickerdata_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::ResSubscribeTickerData>(arena, *from._impl_.response_type_.ressubscribetickerdata_);
        } else {
          _this->_impl_.response_type_.ressubscribetickerdata_->MergeFrom(from._internal_ressubscribetickerdata());
        }
        break;
      }
      case kSymbolTradeDataBean: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.symboltradedatabean_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::SymbolTradeDataBean>(arena, *from._impl_.response_type_.symboltradedatabean_);
        } else {
          _this->_impl_.response_type_.symboltradedatabean_->MergeFrom(from._internal_symboltradedatabean());
        }
        break;
      }
      case kTradeDataBean: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.tradedatabean_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::TradeDataBean>(arena, *from._impl_.response_type_.tradedatabean_);
        } else {
          _this->_impl_.response_type_.tradedatabean_->MergeFrom(from._internal_tradedatabean());
        }
        break;
      }
      case kResCandlestickQuery: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.rescandlestickquery_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::ResCandlestickQuery>(arena, *from._impl_.response_type_.rescandlestickquery_);
        } else {
          _this->_impl_.response_type_.rescandlestickquery_->MergeFrom(from._internal_rescandlestickquery());
        }
        break;
      }
      case kCandlestickUpdateBean: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.candlestickupdatebean_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::CandlestickUpdateBean>(arena, *from._impl_.response_type_.candlestickupdatebean_);
        } else {
          _this->_impl_.response_type_.candlestickupdatebean_->MergeFrom(from._internal_candlestickupdatebean());
        }
        break;
      }
      case kCandlestickBean: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.candlestickbean_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::CandlestickBean>(arena, *from._impl_.response_type_.candlestickbean_);
        } else {
          _this->_impl_.response_type_.candlestickbean_->MergeFrom(from._internal_candlestickbean());
        }
        break;
      }
      case kResTradeRule: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.restraderule_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::ResTradeRule>(arena, *from._impl_.response_type_.restraderule_);
        } else {
          _this->_impl_.response_type_.restraderule_->MergeFrom(from._internal_restraderule());
        }
        break;
      }
      case kSymbolTradeRuleBean: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.symboltraderulebean_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::SymbolTradeRuleBean>(arena, *from._impl_.response_type_.symboltraderulebean_);
        } else {
          _this->_impl_.response_type_.symboltraderulebean_->MergeFrom(from._internal_symboltraderulebean());
        }
        break;
      }
      case kMarketMonitorNoticeListBean: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.marketmonitornoticelistbean_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::MarketMonitorNoticeListBean>(arena, *from._impl_.response_type_.marketmonitornoticelistbean_);
        } else {
          _this->_impl_.response_type_.marketmonitornoticelistbean_->MergeFrom(from._internal_marketmonitornoticelistbean());
        }
        break;
      }
      case kMarketMonitorNoticeBean: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.marketmonitornoticebean_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::MarketMonitorNoticeBean>(arena, *from._impl_.response_type_.marketmonitornoticebean_);
        } else {
          _this->_impl_.response_type_.marketmonitornoticebean_->MergeFrom(from._internal_marketmonitornoticebean());
        }
        break;
      }
      case kSelfSelectedSymbolInfoBean: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.selfselectedsymbolinfobean_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::SelfSelectedSymbolInfoBean>(arena, *from._impl_.response_type_.selfselectedsymbolinfobean_);
        } else {
          _this->_impl_.response_type_.selfselectedsymbolinfobean_->MergeFrom(from._internal_selfselectedsymbolinfobean());
        }
        break;
      }
      case kSelfSelectedSymbolGroupBean: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.selfselectedsymbolgroupbean_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::SelfSelectedSymbolGroupBean>(arena, *from._impl_.response_type_.selfselectedsymbolgroupbean_);
        } else {
          _this->_impl_.response_type_.selfselectedsymbolgroupbean_->MergeFrom(from._internal_selfselectedsymbolgroupbean());
        }
        break;
      }
      case kResSelfSelectedSymbol: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.resselfselectedsymbol_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::ResSelfSelectedSymbol>(arena, *from._impl_.response_type_.resselfselectedsymbol_);
        } else {
          _this->_impl_.response_type_.resselfselectedsymbol_->MergeFrom(from._internal_resselfselectedsymbol());
        }
        break;
      }
      case kMarketPreviewIntervalDataBean: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.marketpreviewintervaldatabean_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::MarketPreviewIntervalDataBean>(arena, *from._impl_.response_type_.marketpreviewintervaldatabean_);
        } else {
          _this->_impl_.response_type_.marketpreviewintervaldatabean_->MergeFrom(from._internal_marketpreviewintervaldatabean());
        }
        break;
      }
      case kResMarketPreviewData: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.resmarketpreviewdata_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::quote::ResMarketPreviewData>(arena, *from._impl_.response_type_.resmarketpreviewdata_);
        } else {
          _this->_impl_.response_type_.resmarketpreviewdata_->MergeFrom(from._internal_resmarketpreviewdata());
        }
        break;
      }
      case kStreategyConfigBean: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.streategyconfigbean_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::strategy::StreategyConfigBean>(arena, *from._impl_.response_type_.streategyconfigbean_);
        } else {
          _this->_impl_.response_type_.streategyconfigbean_->MergeFrom(from._internal_streategyconfigbean());
        }
        break;
      }
      case kStreategyFieldBean: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.streategyfieldbean_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::strategy::StreategyFieldBean>(arena, *from._impl_.response_type_.streategyfieldbean_);
        } else {
          _this->_impl_.response_type_.streategyfieldbean_->MergeFrom(from._internal_streategyfieldbean());
        }
        break;
      }
      case kResModifyStreategySetting: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.resmodifystreategysetting_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::strategy::ResModifyStreategySetting>(arena, *from._impl_.response_type_.resmodifystreategysetting_);
        } else {
          _this->_impl_.response_type_.resmodifystreategysetting_->MergeFrom(from._internal_resmodifystreategysetting());
        }
        break;
      }
      case kResStreategySettings: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.resstreategysettings_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::strategy::ResStreategySettings>(arena, *from._impl_.response_type_.resstreategysettings_);
        } else {
          _this->_impl_.response_type_.resstreategysettings_->MergeFrom(from._internal_resstreategysettings());
        }
        break;
      }
      case kStrategyExectionInfoBean: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.strategyexectioninfobean_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::strategy::StrategyExectionInfoBean>(arena, *from._impl_.response_type_.strategyexectioninfobean_);
        } else {
          _this->_impl_.response_type_.strategyexectioninfobean_->MergeFrom(from._internal_strategyexectioninfobean());
        }
        break;
      }
      case kResQueryStrategyExectionInfo: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.resquerystrategyexectioninfo_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::strategy::ResQueryStrategyExectionInfo>(arena, *from._impl_.response_type_.resquerystrategyexectioninfo_);
        } else {
          _this->_impl_.response_type_.resquerystrategyexectioninfo_->MergeFrom(from._internal_resquerystrategyexectioninfo());
        }
        break;
      }
      case kConditionTriggerBean: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.conditiontriggerbean_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ConditionTriggerBean>(arena, *from._impl_.response_type_.conditiontriggerbean_);
        } else {
          _this->_impl_.response_type_.conditiontriggerbean_->MergeFrom(from._internal_conditiontriggerbean());
        }
        break;
      }
      case kOrderBean: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.orderbean_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::OrderBean>(arena, *from._impl_.response_type_.orderbean_);
        } else {
          _this->_impl_.response_type_.orderbean_->MergeFrom(from._internal_orderbean());
        }
        break;
      }
      case kOrderStatusBean: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.orderstatusbean_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::OrderStatusBean>(arena, *from._impl_.response_type_.orderstatusbean_);
        } else {
          _this->_impl_.response_type_.orderstatusbean_->MergeFrom(from._internal_orderstatusbean());
        }
        break;
      }
      case kResQueryOrders: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.resqueryorders_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ResQueryOrders>(arena, *from._impl_.response_type_.resqueryorders_);
        } else {
          _this->_impl_.response_type_.resqueryorders_->MergeFrom(from._internal_resqueryorders());
        }
        break;
      }
      case kPositionBean: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.positionbean_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::PositionBean>(arena, *from._impl_.response_type_.positionbean_);
        } else {
          _this->_impl_.response_type_.positionbean_->MergeFrom(from._internal_positionbean());
        }
        break;
      }
      case kResQueryPositions: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.resquerypositions_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ResQueryPositions>(arena, *from._impl_.response_type_.resquerypositions_);
        } else {
          _this->_impl_.response_type_.resquerypositions_->MergeFrom(from._internal_resquerypositions());
        }
        break;
      }
      case kLeverageBean: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.leveragebean_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::LeverageBean>(arena, *from._impl_.response_type_.leveragebean_);
        } else {
          _this->_impl_.response_type_.leveragebean_->MergeFrom(from._internal_leveragebean());
        }
        break;
      }
      case kResQueryLeverage: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.resqueryleverage_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ResQueryLeverage>(arena, *from._impl_.response_type_.resqueryleverage_);
        } else {
          _this->_impl_.response_type_.resqueryleverage_->MergeFrom(from._internal_resqueryleverage());
        }
        break;
      }
      case kResQueryLeverageBracket: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.resqueryleveragebracket_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::ResQueryLeverageBracket>(arena, *from._impl_.response_type_.resqueryleveragebracket_);
        } else {
          _this->_impl_.response_type_.resqueryleveragebracket_->MergeFrom(from._internal_resqueryleveragebracket());
        }
        break;
      }
      case kSymbolLeverageBracketBean: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.symbolleveragebracketbean_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::SymbolLeverageBracketBean>(arena, *from._impl_.response_type_.symbolleveragebracketbean_);
        } else {
          _this->_impl_.response_type_.symbolleveragebracketbean_->MergeFrom(from._internal_symbolleveragebracketbean());
        }
        break;
      }
      case kLeverageBracketBean: {
        if (oneof_needs_init) {
          _this->_impl_.response_type_.leveragebracketbean_ =
              ::google::protobuf::Message::CopyConstruct<::lampyris::crypto::protocol::trading::LeverageBracketBean>(arena, *from._impl_.response_type_.leveragebracketbean_);
        } else {
          _this->_impl_.response_type_.leveragebracketbean_->MergeFrom(from._internal_leveragebracketbean());
        }
        break;
      }
      case RESPONSE_TYPE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lampyris.crypto.protocol.common.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Response::InternalSwap(Response* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.response_type_, other->_impl_.response_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace common
}  // namespace protocol
}  // namespace crypto
}  // namespace lampyris
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_common_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

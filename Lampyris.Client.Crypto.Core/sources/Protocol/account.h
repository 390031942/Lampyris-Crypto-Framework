// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: account.proto
// Protobuf C++ Version: 6.30.2

#ifndef account_2eproto_2epb_2eh
#define account_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6030002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_account_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_account_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_account_2eproto;
}  // extern "C"
namespace lampyris {
namespace crypto {
namespace protocol {
namespace account {
enum AssetTransferType : int;
extern const uint32_t AssetTransferType_internal_data_[];
class AccountAssetInfoBean;
struct AccountAssetInfoBeanDefaultTypeInternal;
extern AccountAssetInfoBeanDefaultTypeInternal _AccountAssetInfoBean_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull AccountAssetInfoBean_class_data_;
class AssetTransferHistoryInfoBean;
struct AssetTransferHistoryInfoBeanDefaultTypeInternal;
extern AssetTransferHistoryInfoBeanDefaultTypeInternal _AssetTransferHistoryInfoBean_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull AssetTransferHistoryInfoBean_class_data_;
class AssetTransferHistoryInfoDetailBean;
struct AssetTransferHistoryInfoDetailBeanDefaultTypeInternal;
extern AssetTransferHistoryInfoDetailBeanDefaultTypeInternal _AssetTransferHistoryInfoDetailBean_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull AssetTransferHistoryInfoDetailBean_class_data_;
class ReqAccountAssetTransfer;
struct ReqAccountAssetTransferDefaultTypeInternal;
extern ReqAccountAssetTransferDefaultTypeInternal _ReqAccountAssetTransfer_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ReqAccountAssetTransfer_class_data_;
class ReqAccountSummaryUpdate;
struct ReqAccountSummaryUpdateDefaultTypeInternal;
extern ReqAccountSummaryUpdateDefaultTypeInternal _ReqAccountSummaryUpdate_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ReqAccountSummaryUpdate_class_data_;
class ReqQueryAssetTransferHistory;
struct ReqQueryAssetTransferHistoryDefaultTypeInternal;
extern ReqQueryAssetTransferHistoryDefaultTypeInternal _ReqQueryAssetTransferHistory_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ReqQueryAssetTransferHistory_class_data_;
class ResAccountSummaryUpdate;
struct ResAccountSummaryUpdateDefaultTypeInternal;
extern ResAccountSummaryUpdateDefaultTypeInternal _ResAccountSummaryUpdate_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ResAccountSummaryUpdate_class_data_;
class ResQuerySubAcccountList;
struct ResQuerySubAcccountListDefaultTypeInternal;
extern ResQuerySubAcccountListDefaultTypeInternal _ResQuerySubAcccountList_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ResQuerySubAcccountList_class_data_;
class SubAccountInfoBean;
struct SubAccountInfoBeanDefaultTypeInternal;
extern SubAccountInfoBeanDefaultTypeInternal _SubAccountInfoBean_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SubAccountInfoBean_class_data_;
}  // namespace account
}  // namespace protocol
}  // namespace crypto
}  // namespace lampyris
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::lampyris::crypto::protocol::account::AssetTransferType_internal_data_>
    internal::EnumTraitsImpl::value<::lampyris::crypto::protocol::account::AssetTransferType>;
}  // namespace protobuf
}  // namespace google

namespace lampyris {
namespace crypto {
namespace protocol {
namespace account {
enum AssetTransferType : int {
  RE_AVGERAGE_SUB_ACCOUNT = 0,
  TO_ROOT_ACCOUNT = 1,
  TO_WALLET_ACCOUNT = 2,
  AssetTransferType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  AssetTransferType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t AssetTransferType_internal_data_[];
inline constexpr AssetTransferType AssetTransferType_MIN =
    static_cast<AssetTransferType>(0);
inline constexpr AssetTransferType AssetTransferType_MAX =
    static_cast<AssetTransferType>(2);
inline bool AssetTransferType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
inline constexpr int AssetTransferType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL AssetTransferType_descriptor();
template <typename T>
const std::string& AssetTransferType_Name(T value) {
  static_assert(std::is_same<T, AssetTransferType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to AssetTransferType_Name().");
  return AssetTransferType_Name(static_cast<AssetTransferType>(value));
}
template <>
inline const std::string& AssetTransferType_Name(AssetTransferType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<AssetTransferType_descriptor, 0, 2>(
      static_cast<int>(value));
}
inline bool AssetTransferType_Parse(
    absl::string_view name, AssetTransferType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<AssetTransferType>(AssetTransferType_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class ReqQueryAssetTransferHistory final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lampyris.crypto.protocol.account.ReqQueryAssetTransferHistory) */ {
 public:
  inline ReqQueryAssetTransferHistory() : ReqQueryAssetTransferHistory(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ReqQueryAssetTransferHistory* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ReqQueryAssetTransferHistory));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReqQueryAssetTransferHistory(::google::protobuf::internal::ConstantInitialized);

  inline ReqQueryAssetTransferHistory(const ReqQueryAssetTransferHistory& from) : ReqQueryAssetTransferHistory(nullptr, from) {}
  inline ReqQueryAssetTransferHistory(ReqQueryAssetTransferHistory&& from) noexcept
      : ReqQueryAssetTransferHistory(nullptr, std::move(from)) {}
  inline ReqQueryAssetTransferHistory& operator=(const ReqQueryAssetTransferHistory& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReqQueryAssetTransferHistory& operator=(ReqQueryAssetTransferHistory&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReqQueryAssetTransferHistory& default_instance() {
    return *reinterpret_cast<const ReqQueryAssetTransferHistory*>(
        &_ReqQueryAssetTransferHistory_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(ReqQueryAssetTransferHistory& a, ReqQueryAssetTransferHistory& b) { a.Swap(&b); }
  inline void Swap(ReqQueryAssetTransferHistory* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReqQueryAssetTransferHistory* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReqQueryAssetTransferHistory* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ReqQueryAssetTransferHistory>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ReqQueryAssetTransferHistory& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ReqQueryAssetTransferHistory& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "lampyris.crypto.protocol.account.ReqQueryAssetTransferHistory"; }

 protected:
  explicit ReqQueryAssetTransferHistory(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ReqQueryAssetTransferHistory(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ReqQueryAssetTransferHistory& from);
  ReqQueryAssetTransferHistory(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ReqQueryAssetTransferHistory&& from) noexcept
      : ReqQueryAssetTransferHistory(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lampyris.crypto.protocol.account.ReqQueryAssetTransferHistory)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ReqQueryAssetTransferHistory& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_account_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ReqQueryAssetTransferHistory_class_data_;
// -------------------------------------------------------------------

class ReqAccountSummaryUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lampyris.crypto.protocol.account.ReqAccountSummaryUpdate) */ {
 public:
  inline ReqAccountSummaryUpdate() : ReqAccountSummaryUpdate(nullptr) {}
  ~ReqAccountSummaryUpdate() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ReqAccountSummaryUpdate* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ReqAccountSummaryUpdate));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReqAccountSummaryUpdate(::google::protobuf::internal::ConstantInitialized);

  inline ReqAccountSummaryUpdate(const ReqAccountSummaryUpdate& from) : ReqAccountSummaryUpdate(nullptr, from) {}
  inline ReqAccountSummaryUpdate(ReqAccountSummaryUpdate&& from) noexcept
      : ReqAccountSummaryUpdate(nullptr, std::move(from)) {}
  inline ReqAccountSummaryUpdate& operator=(const ReqAccountSummaryUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReqAccountSummaryUpdate& operator=(ReqAccountSummaryUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReqAccountSummaryUpdate& default_instance() {
    return *reinterpret_cast<const ReqAccountSummaryUpdate*>(
        &_ReqAccountSummaryUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ReqAccountSummaryUpdate& a, ReqAccountSummaryUpdate& b) { a.Swap(&b); }
  inline void Swap(ReqAccountSummaryUpdate* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReqAccountSummaryUpdate* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReqAccountSummaryUpdate* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ReqAccountSummaryUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReqAccountSummaryUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReqAccountSummaryUpdate& from) { ReqAccountSummaryUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ReqAccountSummaryUpdate* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "lampyris.crypto.protocol.account.ReqAccountSummaryUpdate"; }

 protected:
  explicit ReqAccountSummaryUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ReqAccountSummaryUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ReqAccountSummaryUpdate& from);
  ReqAccountSummaryUpdate(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ReqAccountSummaryUpdate&& from) noexcept
      : ReqAccountSummaryUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIsCancelFieldNumber = 1,
  };
  // bool isCancel = 1;
  void clear_iscancel() ;
  bool iscancel() const;
  void set_iscancel(bool value);

  private:
  bool _internal_iscancel() const;
  void _internal_set_iscancel(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lampyris.crypto.protocol.account.ReqAccountSummaryUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ReqAccountSummaryUpdate& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    bool iscancel_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_account_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ReqAccountSummaryUpdate_class_data_;
// -------------------------------------------------------------------

class ReqAccountAssetTransfer final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lampyris.crypto.protocol.account.ReqAccountAssetTransfer) */ {
 public:
  inline ReqAccountAssetTransfer() : ReqAccountAssetTransfer(nullptr) {}
  ~ReqAccountAssetTransfer() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ReqAccountAssetTransfer* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ReqAccountAssetTransfer));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReqAccountAssetTransfer(::google::protobuf::internal::ConstantInitialized);

  inline ReqAccountAssetTransfer(const ReqAccountAssetTransfer& from) : ReqAccountAssetTransfer(nullptr, from) {}
  inline ReqAccountAssetTransfer(ReqAccountAssetTransfer&& from) noexcept
      : ReqAccountAssetTransfer(nullptr, std::move(from)) {}
  inline ReqAccountAssetTransfer& operator=(const ReqAccountAssetTransfer& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReqAccountAssetTransfer& operator=(ReqAccountAssetTransfer&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReqAccountAssetTransfer& default_instance() {
    return *reinterpret_cast<const ReqAccountAssetTransfer*>(
        &_ReqAccountAssetTransfer_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(ReqAccountAssetTransfer& a, ReqAccountAssetTransfer& b) { a.Swap(&b); }
  inline void Swap(ReqAccountAssetTransfer* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReqAccountAssetTransfer* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReqAccountAssetTransfer* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ReqAccountAssetTransfer>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReqAccountAssetTransfer& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReqAccountAssetTransfer& from) { ReqAccountAssetTransfer::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ReqAccountAssetTransfer* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "lampyris.crypto.protocol.account.ReqAccountAssetTransfer"; }

 protected:
  explicit ReqAccountAssetTransfer(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ReqAccountAssetTransfer(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ReqAccountAssetTransfer& from);
  ReqAccountAssetTransfer(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ReqAccountAssetTransfer&& from) noexcept
      : ReqAccountAssetTransfer(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTypeFieldNumber = 1,
  };
  // .lampyris.crypto.protocol.account.AssetTransferType type = 1;
  void clear_type() ;
  ::lampyris::crypto::protocol::account::AssetTransferType type() const;
  void set_type(::lampyris::crypto::protocol::account::AssetTransferType value);

  private:
  ::lampyris::crypto::protocol::account::AssetTransferType _internal_type() const;
  void _internal_set_type(::lampyris::crypto::protocol::account::AssetTransferType value);

  public:
  // @@protoc_insertion_point(class_scope:lampyris.crypto.protocol.account.ReqAccountAssetTransfer)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ReqAccountAssetTransfer& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_account_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ReqAccountAssetTransfer_class_data_;
// -------------------------------------------------------------------

class AssetTransferHistoryInfoDetailBean final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lampyris.crypto.protocol.account.AssetTransferHistoryInfoDetailBean) */ {
 public:
  inline AssetTransferHistoryInfoDetailBean() : AssetTransferHistoryInfoDetailBean(nullptr) {}
  ~AssetTransferHistoryInfoDetailBean() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AssetTransferHistoryInfoDetailBean* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AssetTransferHistoryInfoDetailBean));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AssetTransferHistoryInfoDetailBean(::google::protobuf::internal::ConstantInitialized);

  inline AssetTransferHistoryInfoDetailBean(const AssetTransferHistoryInfoDetailBean& from) : AssetTransferHistoryInfoDetailBean(nullptr, from) {}
  inline AssetTransferHistoryInfoDetailBean(AssetTransferHistoryInfoDetailBean&& from) noexcept
      : AssetTransferHistoryInfoDetailBean(nullptr, std::move(from)) {}
  inline AssetTransferHistoryInfoDetailBean& operator=(const AssetTransferHistoryInfoDetailBean& from) {
    CopyFrom(from);
    return *this;
  }
  inline AssetTransferHistoryInfoDetailBean& operator=(AssetTransferHistoryInfoDetailBean&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AssetTransferHistoryInfoDetailBean& default_instance() {
    return *reinterpret_cast<const AssetTransferHistoryInfoDetailBean*>(
        &_AssetTransferHistoryInfoDetailBean_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(AssetTransferHistoryInfoDetailBean& a, AssetTransferHistoryInfoDetailBean& b) { a.Swap(&b); }
  inline void Swap(AssetTransferHistoryInfoDetailBean* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AssetTransferHistoryInfoDetailBean* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AssetTransferHistoryInfoDetailBean* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AssetTransferHistoryInfoDetailBean>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AssetTransferHistoryInfoDetailBean& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AssetTransferHistoryInfoDetailBean& from) { AssetTransferHistoryInfoDetailBean::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AssetTransferHistoryInfoDetailBean* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "lampyris.crypto.protocol.account.AssetTransferHistoryInfoDetailBean"; }

 protected:
  explicit AssetTransferHistoryInfoDetailBean(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  AssetTransferHistoryInfoDetailBean(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const AssetTransferHistoryInfoDetailBean& from);
  AssetTransferHistoryInfoDetailBean(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, AssetTransferHistoryInfoDetailBean&& from) noexcept
      : AssetTransferHistoryInfoDetailBean(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSourceAccountIdFieldNumber = 1,
    kTargetAccountIdFieldNumber = 2,
    kAmountFieldNumber = 3,
  };
  // int32 sourceAccountId = 1;
  void clear_sourceaccountid() ;
  ::int32_t sourceaccountid() const;
  void set_sourceaccountid(::int32_t value);

  private:
  ::int32_t _internal_sourceaccountid() const;
  void _internal_set_sourceaccountid(::int32_t value);

  public:
  // int32 targetAccountId = 2;
  void clear_targetaccountid() ;
  ::int32_t targetaccountid() const;
  void set_targetaccountid(::int32_t value);

  private:
  ::int32_t _internal_targetaccountid() const;
  void _internal_set_targetaccountid(::int32_t value);

  public:
  // double amount = 3;
  void clear_amount() ;
  double amount() const;
  void set_amount(double value);

  private:
  double _internal_amount() const;
  void _internal_set_amount(double value);

  public:
  // @@protoc_insertion_point(class_scope:lampyris.crypto.protocol.account.AssetTransferHistoryInfoDetailBean)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const AssetTransferHistoryInfoDetailBean& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t sourceaccountid_;
    ::int32_t targetaccountid_;
    double amount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_account_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull AssetTransferHistoryInfoDetailBean_class_data_;
// -------------------------------------------------------------------

class AccountAssetInfoBean final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lampyris.crypto.protocol.account.AccountAssetInfoBean) */ {
 public:
  inline AccountAssetInfoBean() : AccountAssetInfoBean(nullptr) {}
  ~AccountAssetInfoBean() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AccountAssetInfoBean* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AccountAssetInfoBean));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AccountAssetInfoBean(::google::protobuf::internal::ConstantInitialized);

  inline AccountAssetInfoBean(const AccountAssetInfoBean& from) : AccountAssetInfoBean(nullptr, from) {}
  inline AccountAssetInfoBean(AccountAssetInfoBean&& from) noexcept
      : AccountAssetInfoBean(nullptr, std::move(from)) {}
  inline AccountAssetInfoBean& operator=(const AccountAssetInfoBean& from) {
    CopyFrom(from);
    return *this;
  }
  inline AccountAssetInfoBean& operator=(AccountAssetInfoBean&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AccountAssetInfoBean& default_instance() {
    return *reinterpret_cast<const AccountAssetInfoBean*>(
        &_AccountAssetInfoBean_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(AccountAssetInfoBean& a, AccountAssetInfoBean& b) { a.Swap(&b); }
  inline void Swap(AccountAssetInfoBean* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AccountAssetInfoBean* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AccountAssetInfoBean* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AccountAssetInfoBean>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AccountAssetInfoBean& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AccountAssetInfoBean& from) { AccountAssetInfoBean::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AccountAssetInfoBean* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "lampyris.crypto.protocol.account.AccountAssetInfoBean"; }

 protected:
  explicit AccountAssetInfoBean(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  AccountAssetInfoBean(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const AccountAssetInfoBean& from);
  AccountAssetInfoBean(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, AccountAssetInfoBean&& from) noexcept
      : AccountAssetInfoBean(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBalanceFieldNumber = 1,
    kPositionValueFieldNumber = 2,
    kUnrealizedPnLFieldNumber = 3,
    kDailyPnLFieldNumber = 4,
    kDailyPnLPercentageFieldNumber = 5,
    kAvailableBalanceFieldNumber = 6,
    kMaxWithdrawAmountFieldNumber = 7,
  };
  // double balance = 1;
  void clear_balance() ;
  double balance() const;
  void set_balance(double value);

  private:
  double _internal_balance() const;
  void _internal_set_balance(double value);

  public:
  // double positionValue = 2;
  void clear_positionvalue() ;
  double positionvalue() const;
  void set_positionvalue(double value);

  private:
  double _internal_positionvalue() const;
  void _internal_set_positionvalue(double value);

  public:
  // double unrealizedPnL = 3;
  void clear_unrealizedpnl() ;
  double unrealizedpnl() const;
  void set_unrealizedpnl(double value);

  private:
  double _internal_unrealizedpnl() const;
  void _internal_set_unrealizedpnl(double value);

  public:
  // double dailyPnL = 4;
  void clear_dailypnl() ;
  double dailypnl() const;
  void set_dailypnl(double value);

  private:
  double _internal_dailypnl() const;
  void _internal_set_dailypnl(double value);

  public:
  // double dailyPnLPercentage = 5;
  void clear_dailypnlpercentage() ;
  double dailypnlpercentage() const;
  void set_dailypnlpercentage(double value);

  private:
  double _internal_dailypnlpercentage() const;
  void _internal_set_dailypnlpercentage(double value);

  public:
  // double availableBalance = 6;
  void clear_availablebalance() ;
  double availablebalance() const;
  void set_availablebalance(double value);

  private:
  double _internal_availablebalance() const;
  void _internal_set_availablebalance(double value);

  public:
  // double maxWithdrawAmount = 7;
  void clear_maxwithdrawamount() ;
  double maxwithdrawamount() const;
  void set_maxwithdrawamount(double value);

  private:
  double _internal_maxwithdrawamount() const;
  void _internal_set_maxwithdrawamount(double value);

  public:
  // @@protoc_insertion_point(class_scope:lampyris.crypto.protocol.account.AccountAssetInfoBean)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const AccountAssetInfoBean& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    double balance_;
    double positionvalue_;
    double unrealizedpnl_;
    double dailypnl_;
    double dailypnlpercentage_;
    double availablebalance_;
    double maxwithdrawamount_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_account_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull AccountAssetInfoBean_class_data_;
// -------------------------------------------------------------------

class SubAccountInfoBean final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lampyris.crypto.protocol.account.SubAccountInfoBean) */ {
 public:
  inline SubAccountInfoBean() : SubAccountInfoBean(nullptr) {}
  ~SubAccountInfoBean() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubAccountInfoBean* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubAccountInfoBean));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubAccountInfoBean(::google::protobuf::internal::ConstantInitialized);

  inline SubAccountInfoBean(const SubAccountInfoBean& from) : SubAccountInfoBean(nullptr, from) {}
  inline SubAccountInfoBean(SubAccountInfoBean&& from) noexcept
      : SubAccountInfoBean(nullptr, std::move(from)) {}
  inline SubAccountInfoBean& operator=(const SubAccountInfoBean& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubAccountInfoBean& operator=(SubAccountInfoBean&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubAccountInfoBean& default_instance() {
    return *reinterpret_cast<const SubAccountInfoBean*>(
        &_SubAccountInfoBean_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SubAccountInfoBean& a, SubAccountInfoBean& b) { a.Swap(&b); }
  inline void Swap(SubAccountInfoBean* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubAccountInfoBean* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubAccountInfoBean* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubAccountInfoBean>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubAccountInfoBean& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubAccountInfoBean& from) { SubAccountInfoBean::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubAccountInfoBean* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "lampyris.crypto.protocol.account.SubAccountInfoBean"; }

 protected:
  explicit SubAccountInfoBean(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SubAccountInfoBean(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SubAccountInfoBean& from);
  SubAccountInfoBean(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SubAccountInfoBean&& from) noexcept
      : SubAccountInfoBean(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOwnerNameFieldNumber = 3,
    kOwnerEmailFieldNumber = 4,
    kOwnerPhoneNumberFieldNumber = 5,
    kAssetInfoFieldNumber = 2,
    kAccountIdFieldNumber = 1,
    kIsRootFieldNumber = 6,
  };
  // string ownerName = 3;
  void clear_ownername() ;
  const std::string& ownername() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ownername(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_ownername();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_ownername();
  void set_allocated_ownername(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_ownername() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_ownername(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_ownername();

  public:
  // string ownerEmail = 4;
  void clear_owneremail() ;
  const std::string& owneremail() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_owneremail(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_owneremail();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_owneremail();
  void set_allocated_owneremail(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_owneremail() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_owneremail(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_owneremail();

  public:
  // string ownerPhoneNumber = 5;
  void clear_ownerphonenumber() ;
  const std::string& ownerphonenumber() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ownerphonenumber(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_ownerphonenumber();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_ownerphonenumber();
  void set_allocated_ownerphonenumber(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_ownerphonenumber() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_ownerphonenumber(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_ownerphonenumber();

  public:
  // .lampyris.crypto.protocol.account.AccountAssetInfoBean assetInfo = 2;
  bool has_assetinfo() const;
  void clear_assetinfo() ;
  const ::lampyris::crypto::protocol::account::AccountAssetInfoBean& assetinfo() const;
  [[nodiscard]] ::lampyris::crypto::protocol::account::AccountAssetInfoBean* PROTOBUF_NULLABLE release_assetinfo();
  ::lampyris::crypto::protocol::account::AccountAssetInfoBean* PROTOBUF_NONNULL mutable_assetinfo();
  void set_allocated_assetinfo(::lampyris::crypto::protocol::account::AccountAssetInfoBean* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_assetinfo(::lampyris::crypto::protocol::account::AccountAssetInfoBean* PROTOBUF_NULLABLE value);
  ::lampyris::crypto::protocol::account::AccountAssetInfoBean* PROTOBUF_NULLABLE unsafe_arena_release_assetinfo();

  private:
  const ::lampyris::crypto::protocol::account::AccountAssetInfoBean& _internal_assetinfo() const;
  ::lampyris::crypto::protocol::account::AccountAssetInfoBean* PROTOBUF_NONNULL _internal_mutable_assetinfo();

  public:
  // int32 accountId = 1;
  void clear_accountid() ;
  ::int32_t accountid() const;
  void set_accountid(::int32_t value);

  private:
  ::int32_t _internal_accountid() const;
  void _internal_set_accountid(::int32_t value);

  public:
  // bool isRoot = 6;
  void clear_isroot() ;
  bool isroot() const;
  void set_isroot(bool value);

  private:
  bool _internal_isroot() const;
  void _internal_set_isroot(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lampyris.crypto.protocol.account.SubAccountInfoBean)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   1, 95,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SubAccountInfoBean& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr ownername_;
    ::google::protobuf::internal::ArenaStringPtr owneremail_;
    ::google::protobuf::internal::ArenaStringPtr ownerphonenumber_;
    ::lampyris::crypto::protocol::account::AccountAssetInfoBean* PROTOBUF_NULLABLE assetinfo_;
    ::int32_t accountid_;
    bool isroot_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_account_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SubAccountInfoBean_class_data_;
// -------------------------------------------------------------------

class ResAccountSummaryUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lampyris.crypto.protocol.account.ResAccountSummaryUpdate) */ {
 public:
  inline ResAccountSummaryUpdate() : ResAccountSummaryUpdate(nullptr) {}
  ~ResAccountSummaryUpdate() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ResAccountSummaryUpdate* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ResAccountSummaryUpdate));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ResAccountSummaryUpdate(::google::protobuf::internal::ConstantInitialized);

  inline ResAccountSummaryUpdate(const ResAccountSummaryUpdate& from) : ResAccountSummaryUpdate(nullptr, from) {}
  inline ResAccountSummaryUpdate(ResAccountSummaryUpdate&& from) noexcept
      : ResAccountSummaryUpdate(nullptr, std::move(from)) {}
  inline ResAccountSummaryUpdate& operator=(const ResAccountSummaryUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResAccountSummaryUpdate& operator=(ResAccountSummaryUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResAccountSummaryUpdate& default_instance() {
    return *reinterpret_cast<const ResAccountSummaryUpdate*>(
        &_ResAccountSummaryUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ResAccountSummaryUpdate& a, ResAccountSummaryUpdate& b) { a.Swap(&b); }
  inline void Swap(ResAccountSummaryUpdate* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResAccountSummaryUpdate* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResAccountSummaryUpdate* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ResAccountSummaryUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResAccountSummaryUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ResAccountSummaryUpdate& from) { ResAccountSummaryUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ResAccountSummaryUpdate* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "lampyris.crypto.protocol.account.ResAccountSummaryUpdate"; }

 protected:
  explicit ResAccountSummaryUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ResAccountSummaryUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ResAccountSummaryUpdate& from);
  ResAccountSummaryUpdate(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ResAccountSummaryUpdate&& from) noexcept
      : ResAccountSummaryUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAssetInfoFieldNumber = 1,
  };
  // .lampyris.crypto.protocol.account.AccountAssetInfoBean assetInfo = 1;
  bool has_assetinfo() const;
  void clear_assetinfo() ;
  const ::lampyris::crypto::protocol::account::AccountAssetInfoBean& assetinfo() const;
  [[nodiscard]] ::lampyris::crypto::protocol::account::AccountAssetInfoBean* PROTOBUF_NULLABLE release_assetinfo();
  ::lampyris::crypto::protocol::account::AccountAssetInfoBean* PROTOBUF_NONNULL mutable_assetinfo();
  void set_allocated_assetinfo(::lampyris::crypto::protocol::account::AccountAssetInfoBean* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_assetinfo(::lampyris::crypto::protocol::account::AccountAssetInfoBean* PROTOBUF_NULLABLE value);
  ::lampyris::crypto::protocol::account::AccountAssetInfoBean* PROTOBUF_NULLABLE unsafe_arena_release_assetinfo();

  private:
  const ::lampyris::crypto::protocol::account::AccountAssetInfoBean& _internal_assetinfo() const;
  ::lampyris::crypto::protocol::account::AccountAssetInfoBean* PROTOBUF_NONNULL _internal_mutable_assetinfo();

  public:
  // @@protoc_insertion_point(class_scope:lampyris.crypto.protocol.account.ResAccountSummaryUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ResAccountSummaryUpdate& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::lampyris::crypto::protocol::account::AccountAssetInfoBean* PROTOBUF_NULLABLE assetinfo_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_account_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ResAccountSummaryUpdate_class_data_;
// -------------------------------------------------------------------

class AssetTransferHistoryInfoBean final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lampyris.crypto.protocol.account.AssetTransferHistoryInfoBean) */ {
 public:
  inline AssetTransferHistoryInfoBean() : AssetTransferHistoryInfoBean(nullptr) {}
  ~AssetTransferHistoryInfoBean() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AssetTransferHistoryInfoBean* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AssetTransferHistoryInfoBean));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AssetTransferHistoryInfoBean(::google::protobuf::internal::ConstantInitialized);

  inline AssetTransferHistoryInfoBean(const AssetTransferHistoryInfoBean& from) : AssetTransferHistoryInfoBean(nullptr, from) {}
  inline AssetTransferHistoryInfoBean(AssetTransferHistoryInfoBean&& from) noexcept
      : AssetTransferHistoryInfoBean(nullptr, std::move(from)) {}
  inline AssetTransferHistoryInfoBean& operator=(const AssetTransferHistoryInfoBean& from) {
    CopyFrom(from);
    return *this;
  }
  inline AssetTransferHistoryInfoBean& operator=(AssetTransferHistoryInfoBean&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AssetTransferHistoryInfoBean& default_instance() {
    return *reinterpret_cast<const AssetTransferHistoryInfoBean*>(
        &_AssetTransferHistoryInfoBean_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(AssetTransferHistoryInfoBean& a, AssetTransferHistoryInfoBean& b) { a.Swap(&b); }
  inline void Swap(AssetTransferHistoryInfoBean* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AssetTransferHistoryInfoBean* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AssetTransferHistoryInfoBean* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AssetTransferHistoryInfoBean>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AssetTransferHistoryInfoBean& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AssetTransferHistoryInfoBean& from) { AssetTransferHistoryInfoBean::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AssetTransferHistoryInfoBean* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "lampyris.crypto.protocol.account.AssetTransferHistoryInfoBean"; }

 protected:
  explicit AssetTransferHistoryInfoBean(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  AssetTransferHistoryInfoBean(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const AssetTransferHistoryInfoBean& from);
  AssetTransferHistoryInfoBean(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, AssetTransferHistoryInfoBean&& from) noexcept
      : AssetTransferHistoryInfoBean(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDetailBeanListFieldNumber = 2,
    kTransferStartTimestampFieldNumber = 3,
    kTransferFinishedTimestampFieldNumber = 4,
    kTypeFieldNumber = 1,
  };
  // repeated .lampyris.crypto.protocol.account.AssetTransferHistoryInfoDetailBean detailBeanList = 2;
  int detailbeanlist_size() const;
  private:
  int _internal_detailbeanlist_size() const;

  public:
  void clear_detailbeanlist() ;
  ::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean* PROTOBUF_NONNULL mutable_detailbeanlist(int index);
  ::google::protobuf::RepeatedPtrField<::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean>* PROTOBUF_NONNULL mutable_detailbeanlist();

  private:
  const ::google::protobuf::RepeatedPtrField<::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean>& _internal_detailbeanlist() const;
  ::google::protobuf::RepeatedPtrField<::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean>* PROTOBUF_NONNULL _internal_mutable_detailbeanlist();
  public:
  const ::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean& detailbeanlist(int index) const;
  ::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean* PROTOBUF_NONNULL add_detailbeanlist();
  const ::google::protobuf::RepeatedPtrField<::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean>& detailbeanlist() const;
  // int64 transferStartTimestamp = 3;
  void clear_transferstarttimestamp() ;
  ::int64_t transferstarttimestamp() const;
  void set_transferstarttimestamp(::int64_t value);

  private:
  ::int64_t _internal_transferstarttimestamp() const;
  void _internal_set_transferstarttimestamp(::int64_t value);

  public:
  // int64 transferFinishedTimestamp = 4;
  void clear_transferfinishedtimestamp() ;
  ::int64_t transferfinishedtimestamp() const;
  void set_transferfinishedtimestamp(::int64_t value);

  private:
  ::int64_t _internal_transferfinishedtimestamp() const;
  void _internal_set_transferfinishedtimestamp(::int64_t value);

  public:
  // .lampyris.crypto.protocol.account.AssetTransferType type = 1;
  void clear_type() ;
  ::lampyris::crypto::protocol::account::AssetTransferType type() const;
  void set_type(::lampyris::crypto::protocol::account::AssetTransferType value);

  private:
  ::lampyris::crypto::protocol::account::AssetTransferType _internal_type() const;
  void _internal_set_type(::lampyris::crypto::protocol::account::AssetTransferType value);

  public:
  // @@protoc_insertion_point(class_scope:lampyris.crypto.protocol.account.AssetTransferHistoryInfoBean)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const AssetTransferHistoryInfoBean& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean > detailbeanlist_;
    ::int64_t transferstarttimestamp_;
    ::int64_t transferfinishedtimestamp_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_account_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull AssetTransferHistoryInfoBean_class_data_;
// -------------------------------------------------------------------

class ResQuerySubAcccountList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lampyris.crypto.protocol.account.ResQuerySubAcccountList) */ {
 public:
  inline ResQuerySubAcccountList() : ResQuerySubAcccountList(nullptr) {}
  ~ResQuerySubAcccountList() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ResQuerySubAcccountList* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ResQuerySubAcccountList));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ResQuerySubAcccountList(::google::protobuf::internal::ConstantInitialized);

  inline ResQuerySubAcccountList(const ResQuerySubAcccountList& from) : ResQuerySubAcccountList(nullptr, from) {}
  inline ResQuerySubAcccountList(ResQuerySubAcccountList&& from) noexcept
      : ResQuerySubAcccountList(nullptr, std::move(from)) {}
  inline ResQuerySubAcccountList& operator=(const ResQuerySubAcccountList& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResQuerySubAcccountList& operator=(ResQuerySubAcccountList&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResQuerySubAcccountList& default_instance() {
    return *reinterpret_cast<const ResQuerySubAcccountList*>(
        &_ResQuerySubAcccountList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ResQuerySubAcccountList& a, ResQuerySubAcccountList& b) { a.Swap(&b); }
  inline void Swap(ResQuerySubAcccountList* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResQuerySubAcccountList* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResQuerySubAcccountList* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ResQuerySubAcccountList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResQuerySubAcccountList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ResQuerySubAcccountList& from) { ResQuerySubAcccountList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ResQuerySubAcccountList* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "lampyris.crypto.protocol.account.ResQuerySubAcccountList"; }

 protected:
  explicit ResQuerySubAcccountList(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ResQuerySubAcccountList(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ResQuerySubAcccountList& from);
  ResQuerySubAcccountList(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ResQuerySubAcccountList&& from) noexcept
      : ResQuerySubAcccountList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBeanListFieldNumber = 1,
  };
  // .lampyris.crypto.protocol.account.SubAccountInfoBean beanList = 1;
  bool has_beanlist() const;
  void clear_beanlist() ;
  const ::lampyris::crypto::protocol::account::SubAccountInfoBean& beanlist() const;
  [[nodiscard]] ::lampyris::crypto::protocol::account::SubAccountInfoBean* PROTOBUF_NULLABLE release_beanlist();
  ::lampyris::crypto::protocol::account::SubAccountInfoBean* PROTOBUF_NONNULL mutable_beanlist();
  void set_allocated_beanlist(::lampyris::crypto::protocol::account::SubAccountInfoBean* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_beanlist(::lampyris::crypto::protocol::account::SubAccountInfoBean* PROTOBUF_NULLABLE value);
  ::lampyris::crypto::protocol::account::SubAccountInfoBean* PROTOBUF_NULLABLE unsafe_arena_release_beanlist();

  private:
  const ::lampyris::crypto::protocol::account::SubAccountInfoBean& _internal_beanlist() const;
  ::lampyris::crypto::protocol::account::SubAccountInfoBean* PROTOBUF_NONNULL _internal_mutable_beanlist();

  public:
  // @@protoc_insertion_point(class_scope:lampyris.crypto.protocol.account.ResQuerySubAcccountList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ResQuerySubAcccountList& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::lampyris::crypto::protocol::account::SubAccountInfoBean* PROTOBUF_NULLABLE beanlist_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_account_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ResQuerySubAcccountList_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AccountAssetInfoBean

// double balance = 1;
inline void AccountAssetInfoBean::clear_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.balance_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline double AccountAssetInfoBean::balance() const {
  // @@protoc_insertion_point(field_get:lampyris.crypto.protocol.account.AccountAssetInfoBean.balance)
  return _internal_balance();
}
inline void AccountAssetInfoBean::set_balance(double value) {
  _internal_set_balance(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:lampyris.crypto.protocol.account.AccountAssetInfoBean.balance)
}
inline double AccountAssetInfoBean::_internal_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.balance_;
}
inline void AccountAssetInfoBean::_internal_set_balance(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.balance_ = value;
}

// double positionValue = 2;
inline void AccountAssetInfoBean::clear_positionvalue() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.positionvalue_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline double AccountAssetInfoBean::positionvalue() const {
  // @@protoc_insertion_point(field_get:lampyris.crypto.protocol.account.AccountAssetInfoBean.positionValue)
  return _internal_positionvalue();
}
inline void AccountAssetInfoBean::set_positionvalue(double value) {
  _internal_set_positionvalue(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:lampyris.crypto.protocol.account.AccountAssetInfoBean.positionValue)
}
inline double AccountAssetInfoBean::_internal_positionvalue() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.positionvalue_;
}
inline void AccountAssetInfoBean::_internal_set_positionvalue(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.positionvalue_ = value;
}

// double unrealizedPnL = 3;
inline void AccountAssetInfoBean::clear_unrealizedpnl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unrealizedpnl_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double AccountAssetInfoBean::unrealizedpnl() const {
  // @@protoc_insertion_point(field_get:lampyris.crypto.protocol.account.AccountAssetInfoBean.unrealizedPnL)
  return _internal_unrealizedpnl();
}
inline void AccountAssetInfoBean::set_unrealizedpnl(double value) {
  _internal_set_unrealizedpnl(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:lampyris.crypto.protocol.account.AccountAssetInfoBean.unrealizedPnL)
}
inline double AccountAssetInfoBean::_internal_unrealizedpnl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unrealizedpnl_;
}
inline void AccountAssetInfoBean::_internal_set_unrealizedpnl(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unrealizedpnl_ = value;
}

// double dailyPnL = 4;
inline void AccountAssetInfoBean::clear_dailypnl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dailypnl_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline double AccountAssetInfoBean::dailypnl() const {
  // @@protoc_insertion_point(field_get:lampyris.crypto.protocol.account.AccountAssetInfoBean.dailyPnL)
  return _internal_dailypnl();
}
inline void AccountAssetInfoBean::set_dailypnl(double value) {
  _internal_set_dailypnl(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:lampyris.crypto.protocol.account.AccountAssetInfoBean.dailyPnL)
}
inline double AccountAssetInfoBean::_internal_dailypnl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dailypnl_;
}
inline void AccountAssetInfoBean::_internal_set_dailypnl(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dailypnl_ = value;
}

// double dailyPnLPercentage = 5;
inline void AccountAssetInfoBean::clear_dailypnlpercentage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dailypnlpercentage_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline double AccountAssetInfoBean::dailypnlpercentage() const {
  // @@protoc_insertion_point(field_get:lampyris.crypto.protocol.account.AccountAssetInfoBean.dailyPnLPercentage)
  return _internal_dailypnlpercentage();
}
inline void AccountAssetInfoBean::set_dailypnlpercentage(double value) {
  _internal_set_dailypnlpercentage(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:lampyris.crypto.protocol.account.AccountAssetInfoBean.dailyPnLPercentage)
}
inline double AccountAssetInfoBean::_internal_dailypnlpercentage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dailypnlpercentage_;
}
inline void AccountAssetInfoBean::_internal_set_dailypnlpercentage(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dailypnlpercentage_ = value;
}

// double availableBalance = 6;
inline void AccountAssetInfoBean::clear_availablebalance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.availablebalance_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline double AccountAssetInfoBean::availablebalance() const {
  // @@protoc_insertion_point(field_get:lampyris.crypto.protocol.account.AccountAssetInfoBean.availableBalance)
  return _internal_availablebalance();
}
inline void AccountAssetInfoBean::set_availablebalance(double value) {
  _internal_set_availablebalance(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:lampyris.crypto.protocol.account.AccountAssetInfoBean.availableBalance)
}
inline double AccountAssetInfoBean::_internal_availablebalance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.availablebalance_;
}
inline void AccountAssetInfoBean::_internal_set_availablebalance(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.availablebalance_ = value;
}

// double maxWithdrawAmount = 7;
inline void AccountAssetInfoBean::clear_maxwithdrawamount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxwithdrawamount_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline double AccountAssetInfoBean::maxwithdrawamount() const {
  // @@protoc_insertion_point(field_get:lampyris.crypto.protocol.account.AccountAssetInfoBean.maxWithdrawAmount)
  return _internal_maxwithdrawamount();
}
inline void AccountAssetInfoBean::set_maxwithdrawamount(double value) {
  _internal_set_maxwithdrawamount(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:lampyris.crypto.protocol.account.AccountAssetInfoBean.maxWithdrawAmount)
}
inline double AccountAssetInfoBean::_internal_maxwithdrawamount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maxwithdrawamount_;
}
inline void AccountAssetInfoBean::_internal_set_maxwithdrawamount(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxwithdrawamount_ = value;
}

// -------------------------------------------------------------------

// SubAccountInfoBean

// int32 accountId = 1;
inline void SubAccountInfoBean::clear_accountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t SubAccountInfoBean::accountid() const {
  // @@protoc_insertion_point(field_get:lampyris.crypto.protocol.account.SubAccountInfoBean.accountId)
  return _internal_accountid();
}
inline void SubAccountInfoBean::set_accountid(::int32_t value) {
  _internal_set_accountid(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:lampyris.crypto.protocol.account.SubAccountInfoBean.accountId)
}
inline ::int32_t SubAccountInfoBean::_internal_accountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accountid_;
}
inline void SubAccountInfoBean::_internal_set_accountid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accountid_ = value;
}

// .lampyris.crypto.protocol.account.AccountAssetInfoBean assetInfo = 2;
inline bool SubAccountInfoBean::has_assetinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.assetinfo_ != nullptr);
  return value;
}
inline void SubAccountInfoBean::clear_assetinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.assetinfo_ != nullptr) _impl_.assetinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::lampyris::crypto::protocol::account::AccountAssetInfoBean& SubAccountInfoBean::_internal_assetinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lampyris::crypto::protocol::account::AccountAssetInfoBean* p = _impl_.assetinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::lampyris::crypto::protocol::account::AccountAssetInfoBean&>(::lampyris::crypto::protocol::account::_AccountAssetInfoBean_default_instance_);
}
inline const ::lampyris::crypto::protocol::account::AccountAssetInfoBean& SubAccountInfoBean::assetinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lampyris.crypto.protocol.account.SubAccountInfoBean.assetInfo)
  return _internal_assetinfo();
}
inline void SubAccountInfoBean::unsafe_arena_set_allocated_assetinfo(
    ::lampyris::crypto::protocol::account::AccountAssetInfoBean* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.assetinfo_);
  }
  _impl_.assetinfo_ = reinterpret_cast<::lampyris::crypto::protocol::account::AccountAssetInfoBean*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lampyris.crypto.protocol.account.SubAccountInfoBean.assetInfo)
}
inline ::lampyris::crypto::protocol::account::AccountAssetInfoBean* PROTOBUF_NULLABLE SubAccountInfoBean::release_assetinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::lampyris::crypto::protocol::account::AccountAssetInfoBean* released = _impl_.assetinfo_;
  _impl_.assetinfo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::lampyris::crypto::protocol::account::AccountAssetInfoBean* PROTOBUF_NULLABLE SubAccountInfoBean::unsafe_arena_release_assetinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lampyris.crypto.protocol.account.SubAccountInfoBean.assetInfo)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::lampyris::crypto::protocol::account::AccountAssetInfoBean* temp = _impl_.assetinfo_;
  _impl_.assetinfo_ = nullptr;
  return temp;
}
inline ::lampyris::crypto::protocol::account::AccountAssetInfoBean* PROTOBUF_NONNULL SubAccountInfoBean::_internal_mutable_assetinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.assetinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lampyris::crypto::protocol::account::AccountAssetInfoBean>(GetArena());
    _impl_.assetinfo_ = reinterpret_cast<::lampyris::crypto::protocol::account::AccountAssetInfoBean*>(p);
  }
  return _impl_.assetinfo_;
}
inline ::lampyris::crypto::protocol::account::AccountAssetInfoBean* PROTOBUF_NONNULL SubAccountInfoBean::mutable_assetinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::lampyris::crypto::protocol::account::AccountAssetInfoBean* _msg = _internal_mutable_assetinfo();
  // @@protoc_insertion_point(field_mutable:lampyris.crypto.protocol.account.SubAccountInfoBean.assetInfo)
  return _msg;
}
inline void SubAccountInfoBean::set_allocated_assetinfo(::lampyris::crypto::protocol::account::AccountAssetInfoBean* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.assetinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.assetinfo_ = reinterpret_cast<::lampyris::crypto::protocol::account::AccountAssetInfoBean*>(value);
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.account.SubAccountInfoBean.assetInfo)
}

// string ownerName = 3;
inline void SubAccountInfoBean::clear_ownername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ownername_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SubAccountInfoBean::ownername() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lampyris.crypto.protocol.account.SubAccountInfoBean.ownerName)
  return _internal_ownername();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SubAccountInfoBean::set_ownername(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.ownername_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lampyris.crypto.protocol.account.SubAccountInfoBean.ownerName)
}
inline std::string* PROTOBUF_NONNULL SubAccountInfoBean::mutable_ownername()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ownername();
  // @@protoc_insertion_point(field_mutable:lampyris.crypto.protocol.account.SubAccountInfoBean.ownerName)
  return _s;
}
inline const std::string& SubAccountInfoBean::_internal_ownername() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ownername_.Get();
}
inline void SubAccountInfoBean::_internal_set_ownername(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.ownername_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL SubAccountInfoBean::_internal_mutable_ownername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.ownername_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE SubAccountInfoBean::release_ownername() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lampyris.crypto.protocol.account.SubAccountInfoBean.ownerName)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.ownername_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.ownername_.Set("", GetArena());
  }
  return released;
}
inline void SubAccountInfoBean::set_allocated_ownername(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.ownername_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.ownername_.IsDefault()) {
    _impl_.ownername_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.account.SubAccountInfoBean.ownerName)
}

// string ownerEmail = 4;
inline void SubAccountInfoBean::clear_owneremail() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.owneremail_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& SubAccountInfoBean::owneremail() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lampyris.crypto.protocol.account.SubAccountInfoBean.ownerEmail)
  return _internal_owneremail();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SubAccountInfoBean::set_owneremail(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.owneremail_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lampyris.crypto.protocol.account.SubAccountInfoBean.ownerEmail)
}
inline std::string* PROTOBUF_NONNULL SubAccountInfoBean::mutable_owneremail()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_owneremail();
  // @@protoc_insertion_point(field_mutable:lampyris.crypto.protocol.account.SubAccountInfoBean.ownerEmail)
  return _s;
}
inline const std::string& SubAccountInfoBean::_internal_owneremail() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.owneremail_.Get();
}
inline void SubAccountInfoBean::_internal_set_owneremail(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.owneremail_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL SubAccountInfoBean::_internal_mutable_owneremail() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.owneremail_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE SubAccountInfoBean::release_owneremail() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lampyris.crypto.protocol.account.SubAccountInfoBean.ownerEmail)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.owneremail_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.owneremail_.Set("", GetArena());
  }
  return released;
}
inline void SubAccountInfoBean::set_allocated_owneremail(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.owneremail_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.owneremail_.IsDefault()) {
    _impl_.owneremail_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.account.SubAccountInfoBean.ownerEmail)
}

// string ownerPhoneNumber = 5;
inline void SubAccountInfoBean::clear_ownerphonenumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ownerphonenumber_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& SubAccountInfoBean::ownerphonenumber() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lampyris.crypto.protocol.account.SubAccountInfoBean.ownerPhoneNumber)
  return _internal_ownerphonenumber();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SubAccountInfoBean::set_ownerphonenumber(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.ownerphonenumber_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lampyris.crypto.protocol.account.SubAccountInfoBean.ownerPhoneNumber)
}
inline std::string* PROTOBUF_NONNULL SubAccountInfoBean::mutable_ownerphonenumber()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ownerphonenumber();
  // @@protoc_insertion_point(field_mutable:lampyris.crypto.protocol.account.SubAccountInfoBean.ownerPhoneNumber)
  return _s;
}
inline const std::string& SubAccountInfoBean::_internal_ownerphonenumber() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ownerphonenumber_.Get();
}
inline void SubAccountInfoBean::_internal_set_ownerphonenumber(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.ownerphonenumber_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL SubAccountInfoBean::_internal_mutable_ownerphonenumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.ownerphonenumber_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE SubAccountInfoBean::release_ownerphonenumber() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lampyris.crypto.protocol.account.SubAccountInfoBean.ownerPhoneNumber)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.ownerphonenumber_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.ownerphonenumber_.Set("", GetArena());
  }
  return released;
}
inline void SubAccountInfoBean::set_allocated_ownerphonenumber(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.ownerphonenumber_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.ownerphonenumber_.IsDefault()) {
    _impl_.ownerphonenumber_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.account.SubAccountInfoBean.ownerPhoneNumber)
}

// bool isRoot = 6;
inline void SubAccountInfoBean::clear_isroot() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isroot_ = false;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline bool SubAccountInfoBean::isroot() const {
  // @@protoc_insertion_point(field_get:lampyris.crypto.protocol.account.SubAccountInfoBean.isRoot)
  return _internal_isroot();
}
inline void SubAccountInfoBean::set_isroot(bool value) {
  _internal_set_isroot(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:lampyris.crypto.protocol.account.SubAccountInfoBean.isRoot)
}
inline bool SubAccountInfoBean::_internal_isroot() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isroot_;
}
inline void SubAccountInfoBean::_internal_set_isroot(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isroot_ = value;
}

// -------------------------------------------------------------------

// ResQuerySubAcccountList

// .lampyris.crypto.protocol.account.SubAccountInfoBean beanList = 1;
inline bool ResQuerySubAcccountList::has_beanlist() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.beanlist_ != nullptr);
  return value;
}
inline void ResQuerySubAcccountList::clear_beanlist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.beanlist_ != nullptr) _impl_.beanlist_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lampyris::crypto::protocol::account::SubAccountInfoBean& ResQuerySubAcccountList::_internal_beanlist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lampyris::crypto::protocol::account::SubAccountInfoBean* p = _impl_.beanlist_;
  return p != nullptr ? *p : reinterpret_cast<const ::lampyris::crypto::protocol::account::SubAccountInfoBean&>(::lampyris::crypto::protocol::account::_SubAccountInfoBean_default_instance_);
}
inline const ::lampyris::crypto::protocol::account::SubAccountInfoBean& ResQuerySubAcccountList::beanlist() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lampyris.crypto.protocol.account.ResQuerySubAcccountList.beanList)
  return _internal_beanlist();
}
inline void ResQuerySubAcccountList::unsafe_arena_set_allocated_beanlist(
    ::lampyris::crypto::protocol::account::SubAccountInfoBean* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.beanlist_);
  }
  _impl_.beanlist_ = reinterpret_cast<::lampyris::crypto::protocol::account::SubAccountInfoBean*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lampyris.crypto.protocol.account.ResQuerySubAcccountList.beanList)
}
inline ::lampyris::crypto::protocol::account::SubAccountInfoBean* PROTOBUF_NULLABLE ResQuerySubAcccountList::release_beanlist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lampyris::crypto::protocol::account::SubAccountInfoBean* released = _impl_.beanlist_;
  _impl_.beanlist_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::lampyris::crypto::protocol::account::SubAccountInfoBean* PROTOBUF_NULLABLE ResQuerySubAcccountList::unsafe_arena_release_beanlist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lampyris.crypto.protocol.account.ResQuerySubAcccountList.beanList)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lampyris::crypto::protocol::account::SubAccountInfoBean* temp = _impl_.beanlist_;
  _impl_.beanlist_ = nullptr;
  return temp;
}
inline ::lampyris::crypto::protocol::account::SubAccountInfoBean* PROTOBUF_NONNULL ResQuerySubAcccountList::_internal_mutable_beanlist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.beanlist_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lampyris::crypto::protocol::account::SubAccountInfoBean>(GetArena());
    _impl_.beanlist_ = reinterpret_cast<::lampyris::crypto::protocol::account::SubAccountInfoBean*>(p);
  }
  return _impl_.beanlist_;
}
inline ::lampyris::crypto::protocol::account::SubAccountInfoBean* PROTOBUF_NONNULL ResQuerySubAcccountList::mutable_beanlist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lampyris::crypto::protocol::account::SubAccountInfoBean* _msg = _internal_mutable_beanlist();
  // @@protoc_insertion_point(field_mutable:lampyris.crypto.protocol.account.ResQuerySubAcccountList.beanList)
  return _msg;
}
inline void ResQuerySubAcccountList::set_allocated_beanlist(::lampyris::crypto::protocol::account::SubAccountInfoBean* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.beanlist_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.beanlist_ = reinterpret_cast<::lampyris::crypto::protocol::account::SubAccountInfoBean*>(value);
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.account.ResQuerySubAcccountList.beanList)
}

// -------------------------------------------------------------------

// ReqAccountSummaryUpdate

// bool isCancel = 1;
inline void ReqAccountSummaryUpdate::clear_iscancel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.iscancel_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool ReqAccountSummaryUpdate::iscancel() const {
  // @@protoc_insertion_point(field_get:lampyris.crypto.protocol.account.ReqAccountSummaryUpdate.isCancel)
  return _internal_iscancel();
}
inline void ReqAccountSummaryUpdate::set_iscancel(bool value) {
  _internal_set_iscancel(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:lampyris.crypto.protocol.account.ReqAccountSummaryUpdate.isCancel)
}
inline bool ReqAccountSummaryUpdate::_internal_iscancel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.iscancel_;
}
inline void ReqAccountSummaryUpdate::_internal_set_iscancel(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.iscancel_ = value;
}

// -------------------------------------------------------------------

// ResAccountSummaryUpdate

// .lampyris.crypto.protocol.account.AccountAssetInfoBean assetInfo = 1;
inline bool ResAccountSummaryUpdate::has_assetinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.assetinfo_ != nullptr);
  return value;
}
inline void ResAccountSummaryUpdate::clear_assetinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.assetinfo_ != nullptr) _impl_.assetinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lampyris::crypto::protocol::account::AccountAssetInfoBean& ResAccountSummaryUpdate::_internal_assetinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lampyris::crypto::protocol::account::AccountAssetInfoBean* p = _impl_.assetinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::lampyris::crypto::protocol::account::AccountAssetInfoBean&>(::lampyris::crypto::protocol::account::_AccountAssetInfoBean_default_instance_);
}
inline const ::lampyris::crypto::protocol::account::AccountAssetInfoBean& ResAccountSummaryUpdate::assetinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lampyris.crypto.protocol.account.ResAccountSummaryUpdate.assetInfo)
  return _internal_assetinfo();
}
inline void ResAccountSummaryUpdate::unsafe_arena_set_allocated_assetinfo(
    ::lampyris::crypto::protocol::account::AccountAssetInfoBean* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.assetinfo_);
  }
  _impl_.assetinfo_ = reinterpret_cast<::lampyris::crypto::protocol::account::AccountAssetInfoBean*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lampyris.crypto.protocol.account.ResAccountSummaryUpdate.assetInfo)
}
inline ::lampyris::crypto::protocol::account::AccountAssetInfoBean* PROTOBUF_NULLABLE ResAccountSummaryUpdate::release_assetinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lampyris::crypto::protocol::account::AccountAssetInfoBean* released = _impl_.assetinfo_;
  _impl_.assetinfo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::lampyris::crypto::protocol::account::AccountAssetInfoBean* PROTOBUF_NULLABLE ResAccountSummaryUpdate::unsafe_arena_release_assetinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lampyris.crypto.protocol.account.ResAccountSummaryUpdate.assetInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lampyris::crypto::protocol::account::AccountAssetInfoBean* temp = _impl_.assetinfo_;
  _impl_.assetinfo_ = nullptr;
  return temp;
}
inline ::lampyris::crypto::protocol::account::AccountAssetInfoBean* PROTOBUF_NONNULL ResAccountSummaryUpdate::_internal_mutable_assetinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.assetinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lampyris::crypto::protocol::account::AccountAssetInfoBean>(GetArena());
    _impl_.assetinfo_ = reinterpret_cast<::lampyris::crypto::protocol::account::AccountAssetInfoBean*>(p);
  }
  return _impl_.assetinfo_;
}
inline ::lampyris::crypto::protocol::account::AccountAssetInfoBean* PROTOBUF_NONNULL ResAccountSummaryUpdate::mutable_assetinfo()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lampyris::crypto::protocol::account::AccountAssetInfoBean* _msg = _internal_mutable_assetinfo();
  // @@protoc_insertion_point(field_mutable:lampyris.crypto.protocol.account.ResAccountSummaryUpdate.assetInfo)
  return _msg;
}
inline void ResAccountSummaryUpdate::set_allocated_assetinfo(::lampyris::crypto::protocol::account::AccountAssetInfoBean* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.assetinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.assetinfo_ = reinterpret_cast<::lampyris::crypto::protocol::account::AccountAssetInfoBean*>(value);
  // @@protoc_insertion_point(field_set_allocated:lampyris.crypto.protocol.account.ResAccountSummaryUpdate.assetInfo)
}

// -------------------------------------------------------------------

// ReqAccountAssetTransfer

// .lampyris.crypto.protocol.account.AssetTransferType type = 1;
inline void ReqAccountAssetTransfer::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::lampyris::crypto::protocol::account::AssetTransferType ReqAccountAssetTransfer::type() const {
  // @@protoc_insertion_point(field_get:lampyris.crypto.protocol.account.ReqAccountAssetTransfer.type)
  return _internal_type();
}
inline void ReqAccountAssetTransfer::set_type(::lampyris::crypto::protocol::account::AssetTransferType value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:lampyris.crypto.protocol.account.ReqAccountAssetTransfer.type)
}
inline ::lampyris::crypto::protocol::account::AssetTransferType ReqAccountAssetTransfer::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lampyris::crypto::protocol::account::AssetTransferType>(_impl_.type_);
}
inline void ReqAccountAssetTransfer::_internal_set_type(::lampyris::crypto::protocol::account::AssetTransferType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// -------------------------------------------------------------------

// AssetTransferHistoryInfoDetailBean

// int32 sourceAccountId = 1;
inline void AssetTransferHistoryInfoDetailBean::clear_sourceaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sourceaccountid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t AssetTransferHistoryInfoDetailBean::sourceaccountid() const {
  // @@protoc_insertion_point(field_get:lampyris.crypto.protocol.account.AssetTransferHistoryInfoDetailBean.sourceAccountId)
  return _internal_sourceaccountid();
}
inline void AssetTransferHistoryInfoDetailBean::set_sourceaccountid(::int32_t value) {
  _internal_set_sourceaccountid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:lampyris.crypto.protocol.account.AssetTransferHistoryInfoDetailBean.sourceAccountId)
}
inline ::int32_t AssetTransferHistoryInfoDetailBean::_internal_sourceaccountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sourceaccountid_;
}
inline void AssetTransferHistoryInfoDetailBean::_internal_set_sourceaccountid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sourceaccountid_ = value;
}

// int32 targetAccountId = 2;
inline void AssetTransferHistoryInfoDetailBean::clear_targetaccountid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetaccountid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t AssetTransferHistoryInfoDetailBean::targetaccountid() const {
  // @@protoc_insertion_point(field_get:lampyris.crypto.protocol.account.AssetTransferHistoryInfoDetailBean.targetAccountId)
  return _internal_targetaccountid();
}
inline void AssetTransferHistoryInfoDetailBean::set_targetaccountid(::int32_t value) {
  _internal_set_targetaccountid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:lampyris.crypto.protocol.account.AssetTransferHistoryInfoDetailBean.targetAccountId)
}
inline ::int32_t AssetTransferHistoryInfoDetailBean::_internal_targetaccountid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.targetaccountid_;
}
inline void AssetTransferHistoryInfoDetailBean::_internal_set_targetaccountid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.targetaccountid_ = value;
}

// double amount = 3;
inline void AssetTransferHistoryInfoDetailBean::clear_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline double AssetTransferHistoryInfoDetailBean::amount() const {
  // @@protoc_insertion_point(field_get:lampyris.crypto.protocol.account.AssetTransferHistoryInfoDetailBean.amount)
  return _internal_amount();
}
inline void AssetTransferHistoryInfoDetailBean::set_amount(double value) {
  _internal_set_amount(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:lampyris.crypto.protocol.account.AssetTransferHistoryInfoDetailBean.amount)
}
inline double AssetTransferHistoryInfoDetailBean::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amount_;
}
inline void AssetTransferHistoryInfoDetailBean::_internal_set_amount(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = value;
}

// -------------------------------------------------------------------

// AssetTransferHistoryInfoBean

// .lampyris.crypto.protocol.account.AssetTransferType type = 1;
inline void AssetTransferHistoryInfoBean::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::lampyris::crypto::protocol::account::AssetTransferType AssetTransferHistoryInfoBean::type() const {
  // @@protoc_insertion_point(field_get:lampyris.crypto.protocol.account.AssetTransferHistoryInfoBean.type)
  return _internal_type();
}
inline void AssetTransferHistoryInfoBean::set_type(::lampyris::crypto::protocol::account::AssetTransferType value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:lampyris.crypto.protocol.account.AssetTransferHistoryInfoBean.type)
}
inline ::lampyris::crypto::protocol::account::AssetTransferType AssetTransferHistoryInfoBean::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lampyris::crypto::protocol::account::AssetTransferType>(_impl_.type_);
}
inline void AssetTransferHistoryInfoBean::_internal_set_type(::lampyris::crypto::protocol::account::AssetTransferType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// repeated .lampyris.crypto.protocol.account.AssetTransferHistoryInfoDetailBean detailBeanList = 2;
inline int AssetTransferHistoryInfoBean::_internal_detailbeanlist_size() const {
  return _internal_detailbeanlist().size();
}
inline int AssetTransferHistoryInfoBean::detailbeanlist_size() const {
  return _internal_detailbeanlist_size();
}
inline void AssetTransferHistoryInfoBean::clear_detailbeanlist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.detailbeanlist_.Clear();
}
inline ::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean* PROTOBUF_NONNULL AssetTransferHistoryInfoBean::mutable_detailbeanlist(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lampyris.crypto.protocol.account.AssetTransferHistoryInfoBean.detailBeanList)
  return _internal_mutable_detailbeanlist()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean>* PROTOBUF_NONNULL AssetTransferHistoryInfoBean::mutable_detailbeanlist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lampyris.crypto.protocol.account.AssetTransferHistoryInfoBean.detailBeanList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_detailbeanlist();
}
inline const ::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean& AssetTransferHistoryInfoBean::detailbeanlist(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lampyris.crypto.protocol.account.AssetTransferHistoryInfoBean.detailBeanList)
  return _internal_detailbeanlist().Get(index);
}
inline ::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean* PROTOBUF_NONNULL AssetTransferHistoryInfoBean::add_detailbeanlist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean* _add = _internal_mutable_detailbeanlist()->Add();
  // @@protoc_insertion_point(field_add:lampyris.crypto.protocol.account.AssetTransferHistoryInfoBean.detailBeanList)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean>& AssetTransferHistoryInfoBean::detailbeanlist() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lampyris.crypto.protocol.account.AssetTransferHistoryInfoBean.detailBeanList)
  return _internal_detailbeanlist();
}
inline const ::google::protobuf::RepeatedPtrField<::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean>&
AssetTransferHistoryInfoBean::_internal_detailbeanlist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.detailbeanlist_;
}
inline ::google::protobuf::RepeatedPtrField<::lampyris::crypto::protocol::account::AssetTransferHistoryInfoDetailBean>* PROTOBUF_NONNULL
AssetTransferHistoryInfoBean::_internal_mutable_detailbeanlist() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.detailbeanlist_;
}

// int64 transferStartTimestamp = 3;
inline void AssetTransferHistoryInfoBean::clear_transferstarttimestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transferstarttimestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t AssetTransferHistoryInfoBean::transferstarttimestamp() const {
  // @@protoc_insertion_point(field_get:lampyris.crypto.protocol.account.AssetTransferHistoryInfoBean.transferStartTimestamp)
  return _internal_transferstarttimestamp();
}
inline void AssetTransferHistoryInfoBean::set_transferstarttimestamp(::int64_t value) {
  _internal_set_transferstarttimestamp(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:lampyris.crypto.protocol.account.AssetTransferHistoryInfoBean.transferStartTimestamp)
}
inline ::int64_t AssetTransferHistoryInfoBean::_internal_transferstarttimestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.transferstarttimestamp_;
}
inline void AssetTransferHistoryInfoBean::_internal_set_transferstarttimestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transferstarttimestamp_ = value;
}

// int64 transferFinishedTimestamp = 4;
inline void AssetTransferHistoryInfoBean::clear_transferfinishedtimestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transferfinishedtimestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t AssetTransferHistoryInfoBean::transferfinishedtimestamp() const {
  // @@protoc_insertion_point(field_get:lampyris.crypto.protocol.account.AssetTransferHistoryInfoBean.transferFinishedTimestamp)
  return _internal_transferfinishedtimestamp();
}
inline void AssetTransferHistoryInfoBean::set_transferfinishedtimestamp(::int64_t value) {
  _internal_set_transferfinishedtimestamp(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:lampyris.crypto.protocol.account.AssetTransferHistoryInfoBean.transferFinishedTimestamp)
}
inline ::int64_t AssetTransferHistoryInfoBean::_internal_transferfinishedtimestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.transferfinishedtimestamp_;
}
inline void AssetTransferHistoryInfoBean::_internal_set_transferfinishedtimestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transferfinishedtimestamp_ = value;
}

// -------------------------------------------------------------------

// ReqQueryAssetTransferHistory

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace account
}  // namespace protocol
}  // namespace crypto
}  // namespace lampyris


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::lampyris::crypto::protocol::account::AssetTransferType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::lampyris::crypto::protocol::account::AssetTransferType>() {
  return ::lampyris::crypto::protocol::account::AssetTransferType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // account_2eproto_2epb_2eh

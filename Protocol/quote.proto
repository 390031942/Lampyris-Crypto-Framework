syntax = "proto3";

package lampyris.crypto.protocol.quote;

/*---------- Ticker 数据 ----------*/
// 每个Symbol的实时交易信息
message SymbolTickerDataBean {
    string symbol = 1;          // 交易对
    double price = 2;           // 最近价格
    double percentage = 3;      // UTC+0涨跌幅(%)
    string currency = 4;        // 24小时内成交额
    double markPrice = 5;       // 最近标记价格
    double indexPrice = 6;      // 最近指数价格
    string fundingRate = 7;     // 资金费率
    string nextFundingTime = 8; // 下个资金结算时间
    bool   priceChanged = 9;    // 是否有价格变动
    double riseSpeed = 10;      // 涨速(%s)
    repeated string labels = 11;// 异动历史标签
}

// 排序规则
enum SymbolTickerDataSortType {
    NONE  = 1, // 不排序
    PRICE = 2, // 根据现价
    CURRENCY = 3, // 根据24h成交额
    PERCENTAGE = 4, // 根据UTC+0涨幅
    FUNDING_RATE = 5, // 根据资金费率
    FUNDING_LEFT_TIME = 6, // 根据资金结算时间倒计时
}

// 请求-订阅ticker数据
message ReqSubscribeTickerData {
    bool isCancel = 1;  // 是否取消订阅
    bool isAscending = 2； // 是否升序排序
    SymbolTickerDataSortType sortType = 3; // 排序的类型
}

// 响应-订阅ticker数据
message ResSubscribeTickerData {
    repeated SymbolTickerDataBean beanList = 1;
}
/*---------------------------------*/

/*---------- Trade 数据 -----------*/
// 请求-订阅成交数据
message ReqSubscribeTradeData {
    repeated string symbols = 1; // symbols列表
    bool isCancel = 2;  // 是否取消订阅
}

// 响应-推送的某交易对的成交数据
message SymbolTradeDataBean {
    string symbol = 1;  // 交易对
    repeated TradeDataBean beanList = 2；
}

// 成交数据
message TradeDataBean {
    string symbol = 1;  // 交易对
    int64 timestamp = 2; // 时间戳
    double price = 3; // 成交价格
    double volume = 4; // 成交量
    bool isBuy = 5; // 成交方向是否是"买"
    int32 count = 6; // 笔数
}
/*---------------------------------*/

/*------------ k线 数据 ------------*/
// 请求-订阅k线更新
message ReqSubscribeCandlestickUpdate {
    repeated string symbols = 1; // symbols列表
    string barSize = 2; // 周期
    bool isCancel = 3;  // 是否取消订阅
}

// 请求-查询指定时间内某个周期的k线数据
message ReqCandlestickQuery {
    string symbol = 1; // 交易对
    string barSize = 2; // 周期
    int64  startTime = 3; // 开始时间戳
    int64  endTime = 4; // 结束时间戳
    int64  count = 5; // 数量
}

// 响应-查询指定时间内某个周期的k线数据
message ResCandlestickQuery {
    string symbol = 1; // 交易对
    string barSize = 2; // 周期
    repeated CandlestickBean beanList;
}

// 响应-查询指定时间内某个周期的k线数据
message CandlestickUpdateBean {
    string symbol = 1; // 交易对
    string barSize = 2; // 周期
    CandlestickBean bean = 3; // 数据
    bool isEnd = 4; // 是否当前时间周期内最后一个数据
}

message CandlestickBean {
    int64  time = 1;        // 开盘时间
    double open = 2;        // 开盘价
    double high = 3;        // 最高价
    double low = 4;         // 最低价
    double close = 5;       // 收盘价
    double volume = 6;      // 成交量
    double currency = 7;    // 成交额
}
/*---------------------------------*/

/*--------- 交易规则 数据 ----------*/
// 请求-订阅k线更新
message ReqTradeRule {
    repeated SymbolTradeRuleBean beanList;
}

message SymbolTradeRuleBean {
    string symbol = 1; // 交易对
    double maxPrice = 2;
    double minPrice = 3;
    double priceTickSize = 4;
    double maxQuantity = 5;
    double minQuantity = 5;
    double quantityTickSize = 5;
    double minNotional = 5;
}
/*---------------------------------*/ 

/*--------- 异动信息 数据 ----------*/
message MarketMonitorNoticeBean {
    string symbol = 1; // 交易对
    int64 timestamp = 2; // 时间戳
    int32 noticeType = 3; // 异动类型
    string value = 4;     // 异动的数值
    int32 noticeLevel = 5; // 异动等级
}
/*---------------------------------*/ 

/*--------- 自选信息 数据 ----------*/
message SelfSelectedSymbolInfoBean {
    string symbol = 1; // 交易对
    int64 timestamp = 2; // 自选时间戳(ReqSetSelfSelectedSymbol中不传)
    double initialPrice = 3; // 自选价格(ReqSetSelfSelectedSymbol中不传)
}

message SelfSelectedSymbolGroupBean {
    string name = 1; // 自选组名称
    bool canDelete = 2; // 是否可删除
    int32 sortingOrder = 3; // 排序顺序
    repeated SelfSelectedSymbolInfoBean symbolList = 4; // 交易对列表(ReqSetSelfSelectedSymbol中不传)
}

message ReqSelfSelectedSymbol {
    repeated SelfSelectedSymbolGroupBean grouoList = 1; // 自选组bean列表(全量)
}

message ResSelfSelectedSymbol {
    repeated SelfSelectedSymbolGroupBean grouoList = 1; // 自选组bean列表(全量)
}
/*---------------------------------*/ 

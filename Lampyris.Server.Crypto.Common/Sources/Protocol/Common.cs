// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Lampyris.Crypto.Protocol.Common {

  /// <summary>Holder for reflection information generated from common.proto</summary>
  public static partial class CommonReflection {

    #region Descriptor
    /// <summary>File descriptor for common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgxjb21tb24ucHJvdG8SH2xhbXB5cmlzLmNyeXB0by5wcm90b2NvbC5jb21t",
            "b24aDWFjY291bnQucHJvdG8aCWFwcC5wcm90bxoLcXVvdGUucHJvdG8aDnN0",
            "cmF0ZWd5LnByb3RvGg10cmFkaW5nLnByb3RvIusQCgdSZXF1ZXN0ElwKF3Jl",
            "cUFjY291bnRTdW1tYXJ5VXBkYXRlGAEgASgLMjkubGFtcHlyaXMuY3J5cHRv",
            "LnByb3RvY29sLmFjY291bnQuUmVxQWNjb3VudFN1bW1hcnlVcGRhdGVIABJc",
            "ChdyZXFBY2NvdW50QXNzZXRUcmFuc2ZlchgCIAEoCzI5LmxhbXB5cmlzLmNy",
            "eXB0by5wcm90b2NvbC5hY2NvdW50LlJlcUFjY291bnRBc3NldFRyYW5zZmVy",
            "SAASZgoccmVxUXVlcnlBc3NldFRyYW5zZmVySGlzdG9yeRgDIAEoCzI+Lmxh",
            "bXB5cmlzLmNyeXB0by5wcm90b2NvbC5hY2NvdW50LlJlcVF1ZXJ5QXNzZXRU",
            "cmFuc2Zlckhpc3RvcnlIABI6CghyZXFMb2dpbhgEIAEoCzImLmxhbXB5cmlz",
            "LmNyeXB0by5wcm90b2NvbC5hcHAuUmVxTG9naW5IABI8CglyZXFMb2dvdXQY",
            "BSABKAsyJy5sYW1weXJpcy5jcnlwdG8ucHJvdG9jb2wuYXBwLlJlcUxvZ291",
            "dEgAEkIKDHJlcUhlYXJ0QmVhdBgGIAEoCzIqLmxhbXB5cmlzLmNyeXB0by5w",
            "cm90b2NvbC5hcHAuUmVxSGVhcnRCZWF0SAASVAoVcmVxVXBsb2FkQXBwQmVo",
            "YXZpb3VyGAcgASgLMjMubGFtcHlyaXMuY3J5cHRvLnByb3RvY29sLmFwcC5S",
            "ZXFVcGxvYWRBcHBCZWhhdmlvdXJIABJYChZyZXFTdWJzY3JpYmVUaWNrZXJE",
            "YXRhGAggASgLMjYubGFtcHlyaXMuY3J5cHRvLnByb3RvY29sLnF1b3RlLlJl",
            "cVN1YnNjcmliZVRpY2tlckRhdGFIABJWChVyZXFTdWJzY3JpYmVUcmFkZURh",
            "dGEYCSABKAsyNS5sYW1weXJpcy5jcnlwdG8ucHJvdG9jb2wucXVvdGUuUmVx",
            "U3Vic2NyaWJlVHJhZGVEYXRhSAASZgodcmVxU3Vic2NyaWJlQ2FuZGxlc3Rp",
            "Y2tVcGRhdGUYCiABKAsyPS5sYW1weXJpcy5jcnlwdG8ucHJvdG9jb2wucXVv",
            "dGUuUmVxU3Vic2NyaWJlQ2FuZGxlc3RpY2tVcGRhdGVIABJSChNyZXFDYW5k",
            "bGVzdGlja1F1ZXJ5GAsgASgLMjMubGFtcHlyaXMuY3J5cHRvLnByb3RvY29s",
            "LnF1b3RlLlJlcUNhbmRsZXN0aWNrUXVlcnlIABJECgxyZXFUcmFkZVJ1bGUY",
            "DCABKAsyLC5sYW1weXJpcy5jcnlwdG8ucHJvdG9jb2wucXVvdGUuUmVxVHJh",
            "ZGVSdWxlSAASVgoVcmVxU2VsZlNlbGVjdGVkU3ltYm9sGA0gASgLMjUubGFt",
            "cHlyaXMuY3J5cHRvLnByb3RvY29sLnF1b3RlLlJlcVNlbGZTZWxlY3RlZFN5",
            "bWJvbEgAEmEKGXJlcU1vZGlmeVN0cmVhdGVneVNldHRpbmcYDiABKAsyPC5s",
            "YW1weXJpcy5jcnlwdG8ucHJvdG9jb2wuc3RyYXRlZ3kuUmVxTW9kaWZ5U3Ry",
            "ZWF0ZWd5U2V0dGluZ0gAEmcKHHJlcVF1ZXJ5U3RyYXRlZ3lFeGVjdGlvbklu",
            "Zm8YDyABKAsyPy5sYW1weXJpcy5jcnlwdG8ucHJvdG9jb2wuc3RyYXRlZ3ku",
            "UmVxUXVlcnlTdHJhdGVneUV4ZWN0aW9uSW5mb0gAEkgKDXJlcVBsYWNlT3Jk",
            "ZXIYECABKAsyLy5sYW1weXJpcy5jcnlwdG8ucHJvdG9jb2wudHJhZGluZy5S",
            "ZXFQbGFjZU9yZGVySAASSgoOcmVxTW9kaWZ5T3JkZXIYESABKAsyMC5sYW1w",
            "eXJpcy5jcnlwdG8ucHJvdG9jb2wudHJhZGluZy5SZXFNb2RpZnlPcmRlckgA",
            "EkoKDnJlcUNhbmNlbE9yZGVyGBIgASgLMjAubGFtcHlyaXMuY3J5cHRvLnBy",
            "b3RvY29sLnRyYWRpbmcuUmVxQ2FuY2VsT3JkZXJIABJaChZyZXFPbmVLZXlD",
            "bG9zZVBvc2l0aW9uGBMgASgLMjgubGFtcHlyaXMuY3J5cHRvLnByb3RvY29s",
            "LnRyYWRpbmcuUmVxT25lS2V5Q2xvc2VQb3NpdGlvbkgAElYKFHJlcVF1ZXJ5",
            "QWN0aXZlT3JkZXJzGBQgASgLMjYubGFtcHlyaXMuY3J5cHRvLnByb3RvY29s",
            "LnRyYWRpbmcuUmVxUXVlcnlBY3RpdmVPcmRlcnNIABJeChhyZXFRdWVyeUhp",
            "c3RvcmljYWxPcmRlcnMYFSABKAsyOi5sYW1weXJpcy5jcnlwdG8ucHJvdG9j",
            "b2wudHJhZGluZy5SZXFRdWVyeUhpc3RvcmljYWxPcmRlcnNIABJQChFyZXFR",
            "dWVyeVBvc2l0aW9ucxgWIAEoCzIzLmxhbXB5cmlzLmNyeXB0by5wcm90b2Nv",
            "bC50cmFkaW5nLlJlcVF1ZXJ5UG9zaXRpb25zSAASSgoOcmVxU2V0TGV2ZXJh",
            "Z2UYFyABKAsyMC5sYW1weXJpcy5jcnlwdG8ucHJvdG9jb2wudHJhZGluZy5S",
            "ZXFTZXRMZXZlcmFnZUgAEk4KEHJlcVF1ZXJ5TGV2ZXJhZ2UYGCABKAsyMi5s",
            "YW1weXJpcy5jcnlwdG8ucHJvdG9jb2wudHJhZGluZy5SZXFRdWVyeUxldmVy",
            "YWdlSAASXAoXcmVxUXVlcnlMZXZlcmFnZUJyYWNrZXQYGSABKAsyOS5sYW1w",
            "eXJpcy5jcnlwdG8ucHJvdG9jb2wudHJhZGluZy5SZXFRdWVyeUxldmVyYWdl",
            "QnJhY2tldEgAQg4KDHJlcXVlc3RfdHlwZSKhGQoIUmVzcG9uc2USVgoUYWNj",
            "b3VudEFzc2V0SW5mb0JlYW4YASABKAsyNi5sYW1weXJpcy5jcnlwdG8ucHJv",
            "dG9jb2wuYWNjb3VudC5BY2NvdW50QXNzZXRJbmZvQmVhbkgAElIKEnN1YkFj",
            "Y291bnRJbmZvQmVhbhgCIAEoCzI0LmxhbXB5cmlzLmNyeXB0by5wcm90b2Nv",
            "bC5hY2NvdW50LlN1YkFjY291bnRJbmZvQmVhbkgAElwKF3Jlc1F1ZXJ5U3Vi",
            "QWNjY291bnRMaXN0GAMgASgLMjkubGFtcHlyaXMuY3J5cHRvLnByb3RvY29s",
            "LmFjY291bnQuUmVzUXVlcnlTdWJBY2Njb3VudExpc3RIABJcChdyZXNBY2Nv",
            "dW50U3VtbWFyeVVwZGF0ZRgEIAEoCzI5LmxhbXB5cmlzLmNyeXB0by5wcm90",
            "b2NvbC5hY2NvdW50LlJlc0FjY291bnRTdW1tYXJ5VXBkYXRlSAAScgoiYXNz",
            "ZXRUcmFuc2Zlckhpc3RvcnlJbmZvRGV0YWlsQmVhbhgFIAEoCzJELmxhbXB5",
            "cmlzLmNyeXB0by5wcm90b2NvbC5hY2NvdW50LkFzc2V0VHJhbnNmZXJIaXN0",
            "b3J5SW5mb0RldGFpbEJlYW5IABJmChxhc3NldFRyYW5zZmVySGlzdG9yeUlu",
            "Zm9CZWFuGAYgASgLMj4ubGFtcHlyaXMuY3J5cHRvLnByb3RvY29sLmFjY291",
            "bnQuQXNzZXRUcmFuc2Zlckhpc3RvcnlJbmZvQmVhbkgAEjoKCHJlc0xvZ2lu",
            "GAcgASgLMiYubGFtcHlyaXMuY3J5cHRvLnByb3RvY29sLmFwcC5SZXNMb2dp",
            "bkgAEkIKDHJlc0hlYXJ0QmVhdBgIIAEoCzIqLmxhbXB5cmlzLmNyeXB0by5w",
            "cm90b2NvbC5hcHAuUmVzSGVhcnRCZWF0SAASPAoJcmVzTm90aWNlGAkgASgL",
            "MicubGFtcHlyaXMuY3J5cHRvLnByb3RvY29sLmFwcC5SZXNOb3RpY2VIABJU",
            "ChRzeW1ib2xUaWNrZXJEYXRhQmVhbhgKIAEoCzI0LmxhbXB5cmlzLmNyeXB0",
            "by5wcm90b2NvbC5xdW90ZS5TeW1ib2xUaWNrZXJEYXRhQmVhbkgAElgKFnJl",
            "c1N1YnNjcmliZVRpY2tlckRhdGEYCyABKAsyNi5sYW1weXJpcy5jcnlwdG8u",
            "cHJvdG9jb2wucXVvdGUuUmVzU3Vic2NyaWJlVGlja2VyRGF0YUgAElIKE3N5",
            "bWJvbFRyYWRlRGF0YUJlYW4YDCABKAsyMy5sYW1weXJpcy5jcnlwdG8ucHJv",
            "dG9jb2wucXVvdGUuU3ltYm9sVHJhZGVEYXRhQmVhbkgAEkYKDXRyYWRlRGF0",
            "YUJlYW4YDSABKAsyLS5sYW1weXJpcy5jcnlwdG8ucHJvdG9jb2wucXVvdGUu",
            "VHJhZGVEYXRhQmVhbkgAElIKE3Jlc0NhbmRsZXN0aWNrUXVlcnkYDiABKAsy",
            "My5sYW1weXJpcy5jcnlwdG8ucHJvdG9jb2wucXVvdGUuUmVzQ2FuZGxlc3Rp",
            "Y2tRdWVyeUgAElYKFWNhbmRsZXN0aWNrVXBkYXRlQmVhbhgPIAEoCzI1Lmxh",
            "bXB5cmlzLmNyeXB0by5wcm90b2NvbC5xdW90ZS5DYW5kbGVzdGlja1VwZGF0",
            "ZUJlYW5IABJKCg9jYW5kbGVzdGlja0JlYW4YECABKAsyLy5sYW1weXJpcy5j",
            "cnlwdG8ucHJvdG9jb2wucXVvdGUuQ2FuZGxlc3RpY2tCZWFuSAASRAoMcmVz",
            "VHJhZGVSdWxlGBEgASgLMiwubGFtcHlyaXMuY3J5cHRvLnByb3RvY29sLnF1",
            "b3RlLlJlc1RyYWRlUnVsZUgAElIKE3N5bWJvbFRyYWRlUnVsZUJlYW4YEiAB",
            "KAsyMy5sYW1weXJpcy5jcnlwdG8ucHJvdG9jb2wucXVvdGUuU3ltYm9sVHJh",
            "ZGVSdWxlQmVhbkgAEmIKG21hcmtldE1vbml0b3JOb3RpY2VMaXN0QmVhbhgT",
            "IAEoCzI7LmxhbXB5cmlzLmNyeXB0by5wcm90b2NvbC5xdW90ZS5NYXJrZXRN",
            "b25pdG9yTm90aWNlTGlzdEJlYW5IABJaChdtYXJrZXRNb25pdG9yTm90aWNl",
            "QmVhbhgUIAEoCzI3LmxhbXB5cmlzLmNyeXB0by5wcm90b2NvbC5xdW90ZS5N",
            "YXJrZXRNb25pdG9yTm90aWNlQmVhbkgAEmAKGnNlbGZTZWxlY3RlZFN5bWJv",
            "bEluZm9CZWFuGBUgASgLMjoubGFtcHlyaXMuY3J5cHRvLnByb3RvY29sLnF1",
            "b3RlLlNlbGZTZWxlY3RlZFN5bWJvbEluZm9CZWFuSAASYgobc2VsZlNlbGVj",
            "dGVkU3ltYm9sR3JvdXBCZWFuGBYgASgLMjsubGFtcHlyaXMuY3J5cHRvLnBy",
            "b3RvY29sLnF1b3RlLlNlbGZTZWxlY3RlZFN5bWJvbEdyb3VwQmVhbkgAElYK",
            "FXJlc1NlbGZTZWxlY3RlZFN5bWJvbBgXIAEoCzI1LmxhbXB5cmlzLmNyeXB0",
            "by5wcm90b2NvbC5xdW90ZS5SZXNTZWxmU2VsZWN0ZWRTeW1ib2xIABJVChNz",
            "dHJlYXRlZ3lDb25maWdCZWFuGBggASgLMjYubGFtcHlyaXMuY3J5cHRvLnBy",
            "b3RvY29sLnN0cmF0ZWd5LlN0cmVhdGVneUNvbmZpZ0JlYW5IABJTChJzdHJl",
            "YXRlZ3lGaWVsZEJlYW4YGSABKAsyNS5sYW1weXJpcy5jcnlwdG8ucHJvdG9j",
            "b2wuc3RyYXRlZ3kuU3RyZWF0ZWd5RmllbGRCZWFuSAASYQoZcmVzTW9kaWZ5",
            "U3RyZWF0ZWd5U2V0dGluZxgaIAEoCzI8LmxhbXB5cmlzLmNyeXB0by5wcm90",
            "b2NvbC5zdHJhdGVneS5SZXNNb2RpZnlTdHJlYXRlZ3lTZXR0aW5nSAASVwoU",
            "cmVzU3RyZWF0ZWd5U2V0dGluZ3MYGyABKAsyNy5sYW1weXJpcy5jcnlwdG8u",
            "cHJvdG9jb2wuc3RyYXRlZ3kuUmVzU3RyZWF0ZWd5U2V0dGluZ3NIABJfChhz",
            "dHJhdGVneUV4ZWN0aW9uSW5mb0JlYW4YHCABKAsyOy5sYW1weXJpcy5jcnlw",
            "dG8ucHJvdG9jb2wuc3RyYXRlZ3kuU3RyYXRlZ3lFeGVjdGlvbkluZm9CZWFu",
            "SAASZwoccmVzUXVlcnlTdHJhdGVneUV4ZWN0aW9uSW5mbxgdIAEoCzI/Lmxh",
            "bXB5cmlzLmNyeXB0by5wcm90b2NvbC5zdHJhdGVneS5SZXNRdWVyeVN0cmF0",
            "ZWd5RXhlY3Rpb25JbmZvSAASVgoUY29uZGl0aW9uVHJpZ2dlckJlYW4YHiAB",
            "KAsyNi5sYW1weXJpcy5jcnlwdG8ucHJvdG9jb2wudHJhZGluZy5Db25kaXRp",
            "b25UcmlnZ2VyQmVhbkgAEkAKCW9yZGVyQmVhbhgfIAEoCzIrLmxhbXB5cmlz",
            "LmNyeXB0by5wcm90b2NvbC50cmFkaW5nLk9yZGVyQmVhbkgAEkwKD29yZGVy",
            "U3RhdHVzQmVhbhggIAEoCzIxLmxhbXB5cmlzLmNyeXB0by5wcm90b2NvbC50",
            "cmFkaW5nLk9yZGVyU3RhdHVzQmVhbkgAEkYKDGxldmVyYWdlQmVhbhghIAEo",
            "CzIuLmxhbXB5cmlzLmNyeXB0by5wcm90b2NvbC50cmFkaW5nLkxldmVyYWdl",
            "QmVhbkgAEk4KEHJlc1F1ZXJ5TGV2ZXJhZ2UYIiABKAsyMi5sYW1weXJpcy5j",
            "cnlwdG8ucHJvdG9jb2wudHJhZGluZy5SZXNRdWVyeUxldmVyYWdlSAASXAoX",
            "cmVzUXVlcnlMZXZlcmFnZUJyYWNrZXQYIyABKAsyOS5sYW1weXJpcy5jcnlw",
            "dG8ucHJvdG9jb2wudHJhZGluZy5SZXNRdWVyeUxldmVyYWdlQnJhY2tldEgA",
            "EmAKGXN5bWJvbExldmVyYWdlQnJhY2tldEJlYW4YJCABKAsyOy5sYW1weXJp",
            "cy5jcnlwdG8ucHJvdG9jb2wudHJhZGluZy5TeW1ib2xMZXZlcmFnZUJyYWNr",
            "ZXRCZWFuSAASVAoTbGV2ZXJhZ2VCcmFja2V0QmVhbhglIAEoCzI1LmxhbXB5",
            "cmlzLmNyeXB0by5wcm90b2NvbC50cmFkaW5nLkxldmVyYWdlQnJhY2tldEJl",
            "YW5IAEIPCg1yZXNwb25zZV90eXBlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Lampyris.Crypto.Protocol.Account.AccountReflection.Descriptor, global::Lampyris.Crypto.Protocol.App.AppReflection.Descriptor, global::Lampyris.Crypto.Protocol.Quote.QuoteReflection.Descriptor, global::Lampyris.Crypto.Protocol.Strategy.StrategyReflection.Descriptor, global::Lampyris.Crypto.Protocol.Trading.TradingReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Lampyris.Crypto.Protocol.Common.Request), global::Lampyris.Crypto.Protocol.Common.Request.Parser, new[]{ "ReqAccountSummaryUpdate", "ReqAccountAssetTransfer", "ReqQueryAssetTransferHistory", "ReqLogin", "ReqLogout", "ReqHeartBeat", "ReqUploadAppBehaviour", "ReqSubscribeTickerData", "ReqSubscribeTradeData", "ReqSubscribeCandlestickUpdate", "ReqCandlestickQuery", "ReqTradeRule", "ReqSelfSelectedSymbol", "ReqModifyStreategySetting", "ReqQueryStrategyExectionInfo", "ReqPlaceOrder", "ReqModifyOrder", "ReqCancelOrder", "ReqOneKeyClosePosition", "ReqQueryActiveOrders", "ReqQueryHistoricalOrders", "ReqQueryPositions", "ReqSetLeverage", "ReqQueryLeverage", "ReqQueryLeverageBracket" }, new[]{ "RequestType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Lampyris.Crypto.Protocol.Common.Response), global::Lampyris.Crypto.Protocol.Common.Response.Parser, new[]{ "AccountAssetInfoBean", "SubAccountInfoBean", "ResQuerySubAcccountList", "ResAccountSummaryUpdate", "AssetTransferHistoryInfoDetailBean", "AssetTransferHistoryInfoBean", "ResLogin", "ResHeartBeat", "ResNotice", "SymbolTickerDataBean", "ResSubscribeTickerData", "SymbolTradeDataBean", "TradeDataBean", "ResCandlestickQuery", "CandlestickUpdateBean", "CandlestickBean", "ResTradeRule", "SymbolTradeRuleBean", "MarketMonitorNoticeListBean", "MarketMonitorNoticeBean", "SelfSelectedSymbolInfoBean", "SelfSelectedSymbolGroupBean", "ResSelfSelectedSymbol", "StreategyConfigBean", "StreategyFieldBean", "ResModifyStreategySetting", "ResStreategySettings", "StrategyExectionInfoBean", "ResQueryStrategyExectionInfo", "ConditionTriggerBean", "OrderBean", "OrderStatusBean", "LeverageBean", "ResQueryLeverage", "ResQueryLeverageBracket", "SymbolLeverageBracketBean", "LeverageBracketBean" }, new[]{ "ResponseType" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Request : pb::IMessage<Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Lampyris.Crypto.Protocol.Common.CommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Request(Request other) : this() {
      switch (other.RequestTypeCase) {
        case RequestTypeOneofCase.ReqAccountSummaryUpdate:
          ReqAccountSummaryUpdate = other.ReqAccountSummaryUpdate.Clone();
          break;
        case RequestTypeOneofCase.ReqAccountAssetTransfer:
          ReqAccountAssetTransfer = other.ReqAccountAssetTransfer.Clone();
          break;
        case RequestTypeOneofCase.ReqQueryAssetTransferHistory:
          ReqQueryAssetTransferHistory = other.ReqQueryAssetTransferHistory.Clone();
          break;
        case RequestTypeOneofCase.ReqLogin:
          ReqLogin = other.ReqLogin.Clone();
          break;
        case RequestTypeOneofCase.ReqLogout:
          ReqLogout = other.ReqLogout.Clone();
          break;
        case RequestTypeOneofCase.ReqHeartBeat:
          ReqHeartBeat = other.ReqHeartBeat.Clone();
          break;
        case RequestTypeOneofCase.ReqUploadAppBehaviour:
          ReqUploadAppBehaviour = other.ReqUploadAppBehaviour.Clone();
          break;
        case RequestTypeOneofCase.ReqSubscribeTickerData:
          ReqSubscribeTickerData = other.ReqSubscribeTickerData.Clone();
          break;
        case RequestTypeOneofCase.ReqSubscribeTradeData:
          ReqSubscribeTradeData = other.ReqSubscribeTradeData.Clone();
          break;
        case RequestTypeOneofCase.ReqSubscribeCandlestickUpdate:
          ReqSubscribeCandlestickUpdate = other.ReqSubscribeCandlestickUpdate.Clone();
          break;
        case RequestTypeOneofCase.ReqCandlestickQuery:
          ReqCandlestickQuery = other.ReqCandlestickQuery.Clone();
          break;
        case RequestTypeOneofCase.ReqTradeRule:
          ReqTradeRule = other.ReqTradeRule.Clone();
          break;
        case RequestTypeOneofCase.ReqSelfSelectedSymbol:
          ReqSelfSelectedSymbol = other.ReqSelfSelectedSymbol.Clone();
          break;
        case RequestTypeOneofCase.ReqModifyStreategySetting:
          ReqModifyStreategySetting = other.ReqModifyStreategySetting.Clone();
          break;
        case RequestTypeOneofCase.ReqQueryStrategyExectionInfo:
          ReqQueryStrategyExectionInfo = other.ReqQueryStrategyExectionInfo.Clone();
          break;
        case RequestTypeOneofCase.ReqPlaceOrder:
          ReqPlaceOrder = other.ReqPlaceOrder.Clone();
          break;
        case RequestTypeOneofCase.ReqModifyOrder:
          ReqModifyOrder = other.ReqModifyOrder.Clone();
          break;
        case RequestTypeOneofCase.ReqCancelOrder:
          ReqCancelOrder = other.ReqCancelOrder.Clone();
          break;
        case RequestTypeOneofCase.ReqOneKeyClosePosition:
          ReqOneKeyClosePosition = other.ReqOneKeyClosePosition.Clone();
          break;
        case RequestTypeOneofCase.ReqQueryActiveOrders:
          ReqQueryActiveOrders = other.ReqQueryActiveOrders.Clone();
          break;
        case RequestTypeOneofCase.ReqQueryHistoricalOrders:
          ReqQueryHistoricalOrders = other.ReqQueryHistoricalOrders.Clone();
          break;
        case RequestTypeOneofCase.ReqQueryPositions:
          ReqQueryPositions = other.ReqQueryPositions.Clone();
          break;
        case RequestTypeOneofCase.ReqSetLeverage:
          ReqSetLeverage = other.ReqSetLeverage.Clone();
          break;
        case RequestTypeOneofCase.ReqQueryLeverage:
          ReqQueryLeverage = other.ReqQueryLeverage.Clone();
          break;
        case RequestTypeOneofCase.ReqQueryLeverageBracket:
          ReqQueryLeverageBracket = other.ReqQueryLeverageBracket.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Request Clone() {
      return new Request(this);
    }

    /// <summary>Field number for the "reqAccountSummaryUpdate" field.</summary>
    public const int ReqAccountSummaryUpdateFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Account.ReqAccountSummaryUpdate ReqAccountSummaryUpdate {
      get { return requestTypeCase_ == RequestTypeOneofCase.ReqAccountSummaryUpdate ? (global::Lampyris.Crypto.Protocol.Account.ReqAccountSummaryUpdate) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.ReqAccountSummaryUpdate;
      }
    }

    /// <summary>Field number for the "reqAccountAssetTransfer" field.</summary>
    public const int ReqAccountAssetTransferFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Account.ReqAccountAssetTransfer ReqAccountAssetTransfer {
      get { return requestTypeCase_ == RequestTypeOneofCase.ReqAccountAssetTransfer ? (global::Lampyris.Crypto.Protocol.Account.ReqAccountAssetTransfer) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.ReqAccountAssetTransfer;
      }
    }

    /// <summary>Field number for the "reqQueryAssetTransferHistory" field.</summary>
    public const int ReqQueryAssetTransferHistoryFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Account.ReqQueryAssetTransferHistory ReqQueryAssetTransferHistory {
      get { return requestTypeCase_ == RequestTypeOneofCase.ReqQueryAssetTransferHistory ? (global::Lampyris.Crypto.Protocol.Account.ReqQueryAssetTransferHistory) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.ReqQueryAssetTransferHistory;
      }
    }

    /// <summary>Field number for the "reqLogin" field.</summary>
    public const int ReqLoginFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.App.ReqLogin ReqLogin {
      get { return requestTypeCase_ == RequestTypeOneofCase.ReqLogin ? (global::Lampyris.Crypto.Protocol.App.ReqLogin) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.ReqLogin;
      }
    }

    /// <summary>Field number for the "reqLogout" field.</summary>
    public const int ReqLogoutFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.App.ReqLogout ReqLogout {
      get { return requestTypeCase_ == RequestTypeOneofCase.ReqLogout ? (global::Lampyris.Crypto.Protocol.App.ReqLogout) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.ReqLogout;
      }
    }

    /// <summary>Field number for the "reqHeartBeat" field.</summary>
    public const int ReqHeartBeatFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.App.ReqHeartBeat ReqHeartBeat {
      get { return requestTypeCase_ == RequestTypeOneofCase.ReqHeartBeat ? (global::Lampyris.Crypto.Protocol.App.ReqHeartBeat) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.ReqHeartBeat;
      }
    }

    /// <summary>Field number for the "reqUploadAppBehaviour" field.</summary>
    public const int ReqUploadAppBehaviourFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.App.ReqUploadAppBehaviour ReqUploadAppBehaviour {
      get { return requestTypeCase_ == RequestTypeOneofCase.ReqUploadAppBehaviour ? (global::Lampyris.Crypto.Protocol.App.ReqUploadAppBehaviour) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.ReqUploadAppBehaviour;
      }
    }

    /// <summary>Field number for the "reqSubscribeTickerData" field.</summary>
    public const int ReqSubscribeTickerDataFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Quote.ReqSubscribeTickerData ReqSubscribeTickerData {
      get { return requestTypeCase_ == RequestTypeOneofCase.ReqSubscribeTickerData ? (global::Lampyris.Crypto.Protocol.Quote.ReqSubscribeTickerData) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.ReqSubscribeTickerData;
      }
    }

    /// <summary>Field number for the "reqSubscribeTradeData" field.</summary>
    public const int ReqSubscribeTradeDataFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Quote.ReqSubscribeTradeData ReqSubscribeTradeData {
      get { return requestTypeCase_ == RequestTypeOneofCase.ReqSubscribeTradeData ? (global::Lampyris.Crypto.Protocol.Quote.ReqSubscribeTradeData) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.ReqSubscribeTradeData;
      }
    }

    /// <summary>Field number for the "reqSubscribeCandlestickUpdate" field.</summary>
    public const int ReqSubscribeCandlestickUpdateFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Quote.ReqSubscribeCandlestickUpdate ReqSubscribeCandlestickUpdate {
      get { return requestTypeCase_ == RequestTypeOneofCase.ReqSubscribeCandlestickUpdate ? (global::Lampyris.Crypto.Protocol.Quote.ReqSubscribeCandlestickUpdate) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.ReqSubscribeCandlestickUpdate;
      }
    }

    /// <summary>Field number for the "reqCandlestickQuery" field.</summary>
    public const int ReqCandlestickQueryFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Quote.ReqCandlestickQuery ReqCandlestickQuery {
      get { return requestTypeCase_ == RequestTypeOneofCase.ReqCandlestickQuery ? (global::Lampyris.Crypto.Protocol.Quote.ReqCandlestickQuery) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.ReqCandlestickQuery;
      }
    }

    /// <summary>Field number for the "reqTradeRule" field.</summary>
    public const int ReqTradeRuleFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Quote.ReqTradeRule ReqTradeRule {
      get { return requestTypeCase_ == RequestTypeOneofCase.ReqTradeRule ? (global::Lampyris.Crypto.Protocol.Quote.ReqTradeRule) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.ReqTradeRule;
      }
    }

    /// <summary>Field number for the "reqSelfSelectedSymbol" field.</summary>
    public const int ReqSelfSelectedSymbolFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Quote.ReqSelfSelectedSymbol ReqSelfSelectedSymbol {
      get { return requestTypeCase_ == RequestTypeOneofCase.ReqSelfSelectedSymbol ? (global::Lampyris.Crypto.Protocol.Quote.ReqSelfSelectedSymbol) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.ReqSelfSelectedSymbol;
      }
    }

    /// <summary>Field number for the "reqModifyStreategySetting" field.</summary>
    public const int ReqModifyStreategySettingFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Strategy.ReqModifyStreategySetting ReqModifyStreategySetting {
      get { return requestTypeCase_ == RequestTypeOneofCase.ReqModifyStreategySetting ? (global::Lampyris.Crypto.Protocol.Strategy.ReqModifyStreategySetting) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.ReqModifyStreategySetting;
      }
    }

    /// <summary>Field number for the "reqQueryStrategyExectionInfo" field.</summary>
    public const int ReqQueryStrategyExectionInfoFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Strategy.ReqQueryStrategyExectionInfo ReqQueryStrategyExectionInfo {
      get { return requestTypeCase_ == RequestTypeOneofCase.ReqQueryStrategyExectionInfo ? (global::Lampyris.Crypto.Protocol.Strategy.ReqQueryStrategyExectionInfo) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.ReqQueryStrategyExectionInfo;
      }
    }

    /// <summary>Field number for the "reqPlaceOrder" field.</summary>
    public const int ReqPlaceOrderFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Trading.ReqPlaceOrder ReqPlaceOrder {
      get { return requestTypeCase_ == RequestTypeOneofCase.ReqPlaceOrder ? (global::Lampyris.Crypto.Protocol.Trading.ReqPlaceOrder) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.ReqPlaceOrder;
      }
    }

    /// <summary>Field number for the "reqModifyOrder" field.</summary>
    public const int ReqModifyOrderFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Trading.ReqModifyOrder ReqModifyOrder {
      get { return requestTypeCase_ == RequestTypeOneofCase.ReqModifyOrder ? (global::Lampyris.Crypto.Protocol.Trading.ReqModifyOrder) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.ReqModifyOrder;
      }
    }

    /// <summary>Field number for the "reqCancelOrder" field.</summary>
    public const int ReqCancelOrderFieldNumber = 18;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Trading.ReqCancelOrder ReqCancelOrder {
      get { return requestTypeCase_ == RequestTypeOneofCase.ReqCancelOrder ? (global::Lampyris.Crypto.Protocol.Trading.ReqCancelOrder) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.ReqCancelOrder;
      }
    }

    /// <summary>Field number for the "reqOneKeyClosePosition" field.</summary>
    public const int ReqOneKeyClosePositionFieldNumber = 19;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Trading.ReqOneKeyClosePosition ReqOneKeyClosePosition {
      get { return requestTypeCase_ == RequestTypeOneofCase.ReqOneKeyClosePosition ? (global::Lampyris.Crypto.Protocol.Trading.ReqOneKeyClosePosition) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.ReqOneKeyClosePosition;
      }
    }

    /// <summary>Field number for the "reqQueryActiveOrders" field.</summary>
    public const int ReqQueryActiveOrdersFieldNumber = 20;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Trading.ReqQueryActiveOrders ReqQueryActiveOrders {
      get { return requestTypeCase_ == RequestTypeOneofCase.ReqQueryActiveOrders ? (global::Lampyris.Crypto.Protocol.Trading.ReqQueryActiveOrders) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.ReqQueryActiveOrders;
      }
    }

    /// <summary>Field number for the "reqQueryHistoricalOrders" field.</summary>
    public const int ReqQueryHistoricalOrdersFieldNumber = 21;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Trading.ReqQueryHistoricalOrders ReqQueryHistoricalOrders {
      get { return requestTypeCase_ == RequestTypeOneofCase.ReqQueryHistoricalOrders ? (global::Lampyris.Crypto.Protocol.Trading.ReqQueryHistoricalOrders) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.ReqQueryHistoricalOrders;
      }
    }

    /// <summary>Field number for the "reqQueryPositions" field.</summary>
    public const int ReqQueryPositionsFieldNumber = 22;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Trading.ReqQueryPositions ReqQueryPositions {
      get { return requestTypeCase_ == RequestTypeOneofCase.ReqQueryPositions ? (global::Lampyris.Crypto.Protocol.Trading.ReqQueryPositions) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.ReqQueryPositions;
      }
    }

    /// <summary>Field number for the "reqSetLeverage" field.</summary>
    public const int ReqSetLeverageFieldNumber = 23;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Trading.ReqSetLeverage ReqSetLeverage {
      get { return requestTypeCase_ == RequestTypeOneofCase.ReqSetLeverage ? (global::Lampyris.Crypto.Protocol.Trading.ReqSetLeverage) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.ReqSetLeverage;
      }
    }

    /// <summary>Field number for the "reqQueryLeverage" field.</summary>
    public const int ReqQueryLeverageFieldNumber = 24;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Trading.ReqQueryLeverage ReqQueryLeverage {
      get { return requestTypeCase_ == RequestTypeOneofCase.ReqQueryLeverage ? (global::Lampyris.Crypto.Protocol.Trading.ReqQueryLeverage) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.ReqQueryLeverage;
      }
    }

    /// <summary>Field number for the "reqQueryLeverageBracket" field.</summary>
    public const int ReqQueryLeverageBracketFieldNumber = 25;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Trading.ReqQueryLeverageBracket ReqQueryLeverageBracket {
      get { return requestTypeCase_ == RequestTypeOneofCase.ReqQueryLeverageBracket ? (global::Lampyris.Crypto.Protocol.Trading.ReqQueryLeverageBracket) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.ReqQueryLeverageBracket;
      }
    }

    private object requestType_;
    /// <summary>Enum of possible cases for the "request_type" oneof.</summary>
    public enum RequestTypeOneofCase {
      None = 0,
      ReqAccountSummaryUpdate = 1,
      ReqAccountAssetTransfer = 2,
      ReqQueryAssetTransferHistory = 3,
      ReqLogin = 4,
      ReqLogout = 5,
      ReqHeartBeat = 6,
      ReqUploadAppBehaviour = 7,
      ReqSubscribeTickerData = 8,
      ReqSubscribeTradeData = 9,
      ReqSubscribeCandlestickUpdate = 10,
      ReqCandlestickQuery = 11,
      ReqTradeRule = 12,
      ReqSelfSelectedSymbol = 13,
      ReqModifyStreategySetting = 14,
      ReqQueryStrategyExectionInfo = 15,
      ReqPlaceOrder = 16,
      ReqModifyOrder = 17,
      ReqCancelOrder = 18,
      ReqOneKeyClosePosition = 19,
      ReqQueryActiveOrders = 20,
      ReqQueryHistoricalOrders = 21,
      ReqQueryPositions = 22,
      ReqSetLeverage = 23,
      ReqQueryLeverage = 24,
      ReqQueryLeverageBracket = 25,
    }
    private RequestTypeOneofCase requestTypeCase_ = RequestTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestTypeOneofCase RequestTypeCase {
      get { return requestTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRequestType() {
      requestTypeCase_ = RequestTypeOneofCase.None;
      requestType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ReqAccountSummaryUpdate, other.ReqAccountSummaryUpdate)) return false;
      if (!object.Equals(ReqAccountAssetTransfer, other.ReqAccountAssetTransfer)) return false;
      if (!object.Equals(ReqQueryAssetTransferHistory, other.ReqQueryAssetTransferHistory)) return false;
      if (!object.Equals(ReqLogin, other.ReqLogin)) return false;
      if (!object.Equals(ReqLogout, other.ReqLogout)) return false;
      if (!object.Equals(ReqHeartBeat, other.ReqHeartBeat)) return false;
      if (!object.Equals(ReqUploadAppBehaviour, other.ReqUploadAppBehaviour)) return false;
      if (!object.Equals(ReqSubscribeTickerData, other.ReqSubscribeTickerData)) return false;
      if (!object.Equals(ReqSubscribeTradeData, other.ReqSubscribeTradeData)) return false;
      if (!object.Equals(ReqSubscribeCandlestickUpdate, other.ReqSubscribeCandlestickUpdate)) return false;
      if (!object.Equals(ReqCandlestickQuery, other.ReqCandlestickQuery)) return false;
      if (!object.Equals(ReqTradeRule, other.ReqTradeRule)) return false;
      if (!object.Equals(ReqSelfSelectedSymbol, other.ReqSelfSelectedSymbol)) return false;
      if (!object.Equals(ReqModifyStreategySetting, other.ReqModifyStreategySetting)) return false;
      if (!object.Equals(ReqQueryStrategyExectionInfo, other.ReqQueryStrategyExectionInfo)) return false;
      if (!object.Equals(ReqPlaceOrder, other.ReqPlaceOrder)) return false;
      if (!object.Equals(ReqModifyOrder, other.ReqModifyOrder)) return false;
      if (!object.Equals(ReqCancelOrder, other.ReqCancelOrder)) return false;
      if (!object.Equals(ReqOneKeyClosePosition, other.ReqOneKeyClosePosition)) return false;
      if (!object.Equals(ReqQueryActiveOrders, other.ReqQueryActiveOrders)) return false;
      if (!object.Equals(ReqQueryHistoricalOrders, other.ReqQueryHistoricalOrders)) return false;
      if (!object.Equals(ReqQueryPositions, other.ReqQueryPositions)) return false;
      if (!object.Equals(ReqSetLeverage, other.ReqSetLeverage)) return false;
      if (!object.Equals(ReqQueryLeverage, other.ReqQueryLeverage)) return false;
      if (!object.Equals(ReqQueryLeverageBracket, other.ReqQueryLeverageBracket)) return false;
      if (RequestTypeCase != other.RequestTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (requestTypeCase_ == RequestTypeOneofCase.ReqAccountSummaryUpdate) hash ^= ReqAccountSummaryUpdate.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.ReqAccountAssetTransfer) hash ^= ReqAccountAssetTransfer.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryAssetTransferHistory) hash ^= ReqQueryAssetTransferHistory.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.ReqLogin) hash ^= ReqLogin.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.ReqLogout) hash ^= ReqLogout.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.ReqHeartBeat) hash ^= ReqHeartBeat.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.ReqUploadAppBehaviour) hash ^= ReqUploadAppBehaviour.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.ReqSubscribeTickerData) hash ^= ReqSubscribeTickerData.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.ReqSubscribeTradeData) hash ^= ReqSubscribeTradeData.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.ReqSubscribeCandlestickUpdate) hash ^= ReqSubscribeCandlestickUpdate.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.ReqCandlestickQuery) hash ^= ReqCandlestickQuery.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.ReqTradeRule) hash ^= ReqTradeRule.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.ReqSelfSelectedSymbol) hash ^= ReqSelfSelectedSymbol.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.ReqModifyStreategySetting) hash ^= ReqModifyStreategySetting.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryStrategyExectionInfo) hash ^= ReqQueryStrategyExectionInfo.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.ReqPlaceOrder) hash ^= ReqPlaceOrder.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.ReqModifyOrder) hash ^= ReqModifyOrder.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.ReqCancelOrder) hash ^= ReqCancelOrder.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.ReqOneKeyClosePosition) hash ^= ReqOneKeyClosePosition.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryActiveOrders) hash ^= ReqQueryActiveOrders.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryHistoricalOrders) hash ^= ReqQueryHistoricalOrders.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryPositions) hash ^= ReqQueryPositions.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.ReqSetLeverage) hash ^= ReqSetLeverage.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryLeverage) hash ^= ReqQueryLeverage.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryLeverageBracket) hash ^= ReqQueryLeverageBracket.GetHashCode();
      hash ^= (int) requestTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (requestTypeCase_ == RequestTypeOneofCase.ReqAccountSummaryUpdate) {
        output.WriteRawTag(10);
        output.WriteMessage(ReqAccountSummaryUpdate);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqAccountAssetTransfer) {
        output.WriteRawTag(18);
        output.WriteMessage(ReqAccountAssetTransfer);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryAssetTransferHistory) {
        output.WriteRawTag(26);
        output.WriteMessage(ReqQueryAssetTransferHistory);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqLogin) {
        output.WriteRawTag(34);
        output.WriteMessage(ReqLogin);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqLogout) {
        output.WriteRawTag(42);
        output.WriteMessage(ReqLogout);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqHeartBeat) {
        output.WriteRawTag(50);
        output.WriteMessage(ReqHeartBeat);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqUploadAppBehaviour) {
        output.WriteRawTag(58);
        output.WriteMessage(ReqUploadAppBehaviour);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqSubscribeTickerData) {
        output.WriteRawTag(66);
        output.WriteMessage(ReqSubscribeTickerData);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqSubscribeTradeData) {
        output.WriteRawTag(74);
        output.WriteMessage(ReqSubscribeTradeData);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqSubscribeCandlestickUpdate) {
        output.WriteRawTag(82);
        output.WriteMessage(ReqSubscribeCandlestickUpdate);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqCandlestickQuery) {
        output.WriteRawTag(90);
        output.WriteMessage(ReqCandlestickQuery);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqTradeRule) {
        output.WriteRawTag(98);
        output.WriteMessage(ReqTradeRule);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqSelfSelectedSymbol) {
        output.WriteRawTag(106);
        output.WriteMessage(ReqSelfSelectedSymbol);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqModifyStreategySetting) {
        output.WriteRawTag(114);
        output.WriteMessage(ReqModifyStreategySetting);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryStrategyExectionInfo) {
        output.WriteRawTag(122);
        output.WriteMessage(ReqQueryStrategyExectionInfo);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqPlaceOrder) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ReqPlaceOrder);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqModifyOrder) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ReqModifyOrder);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqCancelOrder) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(ReqCancelOrder);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqOneKeyClosePosition) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(ReqOneKeyClosePosition);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryActiveOrders) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(ReqQueryActiveOrders);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryHistoricalOrders) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(ReqQueryHistoricalOrders);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryPositions) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(ReqQueryPositions);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqSetLeverage) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(ReqSetLeverage);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryLeverage) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(ReqQueryLeverage);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryLeverageBracket) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(ReqQueryLeverageBracket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (requestTypeCase_ == RequestTypeOneofCase.ReqAccountSummaryUpdate) {
        output.WriteRawTag(10);
        output.WriteMessage(ReqAccountSummaryUpdate);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqAccountAssetTransfer) {
        output.WriteRawTag(18);
        output.WriteMessage(ReqAccountAssetTransfer);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryAssetTransferHistory) {
        output.WriteRawTag(26);
        output.WriteMessage(ReqQueryAssetTransferHistory);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqLogin) {
        output.WriteRawTag(34);
        output.WriteMessage(ReqLogin);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqLogout) {
        output.WriteRawTag(42);
        output.WriteMessage(ReqLogout);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqHeartBeat) {
        output.WriteRawTag(50);
        output.WriteMessage(ReqHeartBeat);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqUploadAppBehaviour) {
        output.WriteRawTag(58);
        output.WriteMessage(ReqUploadAppBehaviour);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqSubscribeTickerData) {
        output.WriteRawTag(66);
        output.WriteMessage(ReqSubscribeTickerData);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqSubscribeTradeData) {
        output.WriteRawTag(74);
        output.WriteMessage(ReqSubscribeTradeData);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqSubscribeCandlestickUpdate) {
        output.WriteRawTag(82);
        output.WriteMessage(ReqSubscribeCandlestickUpdate);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqCandlestickQuery) {
        output.WriteRawTag(90);
        output.WriteMessage(ReqCandlestickQuery);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqTradeRule) {
        output.WriteRawTag(98);
        output.WriteMessage(ReqTradeRule);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqSelfSelectedSymbol) {
        output.WriteRawTag(106);
        output.WriteMessage(ReqSelfSelectedSymbol);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqModifyStreategySetting) {
        output.WriteRawTag(114);
        output.WriteMessage(ReqModifyStreategySetting);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryStrategyExectionInfo) {
        output.WriteRawTag(122);
        output.WriteMessage(ReqQueryStrategyExectionInfo);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqPlaceOrder) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ReqPlaceOrder);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqModifyOrder) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ReqModifyOrder);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqCancelOrder) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(ReqCancelOrder);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqOneKeyClosePosition) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(ReqOneKeyClosePosition);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryActiveOrders) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(ReqQueryActiveOrders);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryHistoricalOrders) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(ReqQueryHistoricalOrders);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryPositions) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(ReqQueryPositions);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqSetLeverage) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(ReqSetLeverage);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryLeverage) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(ReqQueryLeverage);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryLeverageBracket) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(ReqQueryLeverageBracket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (requestTypeCase_ == RequestTypeOneofCase.ReqAccountSummaryUpdate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReqAccountSummaryUpdate);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqAccountAssetTransfer) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReqAccountAssetTransfer);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryAssetTransferHistory) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReqQueryAssetTransferHistory);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqLogin) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReqLogin);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqLogout) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReqLogout);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqHeartBeat) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReqHeartBeat);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqUploadAppBehaviour) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReqUploadAppBehaviour);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqSubscribeTickerData) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReqSubscribeTickerData);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqSubscribeTradeData) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReqSubscribeTradeData);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqSubscribeCandlestickUpdate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReqSubscribeCandlestickUpdate);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqCandlestickQuery) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReqCandlestickQuery);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqTradeRule) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReqTradeRule);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqSelfSelectedSymbol) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReqSelfSelectedSymbol);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqModifyStreategySetting) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReqModifyStreategySetting);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryStrategyExectionInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReqQueryStrategyExectionInfo);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqPlaceOrder) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ReqPlaceOrder);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqModifyOrder) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ReqModifyOrder);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqCancelOrder) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ReqCancelOrder);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqOneKeyClosePosition) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ReqOneKeyClosePosition);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryActiveOrders) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ReqQueryActiveOrders);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryHistoricalOrders) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ReqQueryHistoricalOrders);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryPositions) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ReqQueryPositions);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqSetLeverage) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ReqSetLeverage);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryLeverage) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ReqQueryLeverage);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryLeverageBracket) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ReqQueryLeverageBracket);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      switch (other.RequestTypeCase) {
        case RequestTypeOneofCase.ReqAccountSummaryUpdate:
          if (ReqAccountSummaryUpdate == null) {
            ReqAccountSummaryUpdate = new global::Lampyris.Crypto.Protocol.Account.ReqAccountSummaryUpdate();
          }
          ReqAccountSummaryUpdate.MergeFrom(other.ReqAccountSummaryUpdate);
          break;
        case RequestTypeOneofCase.ReqAccountAssetTransfer:
          if (ReqAccountAssetTransfer == null) {
            ReqAccountAssetTransfer = new global::Lampyris.Crypto.Protocol.Account.ReqAccountAssetTransfer();
          }
          ReqAccountAssetTransfer.MergeFrom(other.ReqAccountAssetTransfer);
          break;
        case RequestTypeOneofCase.ReqQueryAssetTransferHistory:
          if (ReqQueryAssetTransferHistory == null) {
            ReqQueryAssetTransferHistory = new global::Lampyris.Crypto.Protocol.Account.ReqQueryAssetTransferHistory();
          }
          ReqQueryAssetTransferHistory.MergeFrom(other.ReqQueryAssetTransferHistory);
          break;
        case RequestTypeOneofCase.ReqLogin:
          if (ReqLogin == null) {
            ReqLogin = new global::Lampyris.Crypto.Protocol.App.ReqLogin();
          }
          ReqLogin.MergeFrom(other.ReqLogin);
          break;
        case RequestTypeOneofCase.ReqLogout:
          if (ReqLogout == null) {
            ReqLogout = new global::Lampyris.Crypto.Protocol.App.ReqLogout();
          }
          ReqLogout.MergeFrom(other.ReqLogout);
          break;
        case RequestTypeOneofCase.ReqHeartBeat:
          if (ReqHeartBeat == null) {
            ReqHeartBeat = new global::Lampyris.Crypto.Protocol.App.ReqHeartBeat();
          }
          ReqHeartBeat.MergeFrom(other.ReqHeartBeat);
          break;
        case RequestTypeOneofCase.ReqUploadAppBehaviour:
          if (ReqUploadAppBehaviour == null) {
            ReqUploadAppBehaviour = new global::Lampyris.Crypto.Protocol.App.ReqUploadAppBehaviour();
          }
          ReqUploadAppBehaviour.MergeFrom(other.ReqUploadAppBehaviour);
          break;
        case RequestTypeOneofCase.ReqSubscribeTickerData:
          if (ReqSubscribeTickerData == null) {
            ReqSubscribeTickerData = new global::Lampyris.Crypto.Protocol.Quote.ReqSubscribeTickerData();
          }
          ReqSubscribeTickerData.MergeFrom(other.ReqSubscribeTickerData);
          break;
        case RequestTypeOneofCase.ReqSubscribeTradeData:
          if (ReqSubscribeTradeData == null) {
            ReqSubscribeTradeData = new global::Lampyris.Crypto.Protocol.Quote.ReqSubscribeTradeData();
          }
          ReqSubscribeTradeData.MergeFrom(other.ReqSubscribeTradeData);
          break;
        case RequestTypeOneofCase.ReqSubscribeCandlestickUpdate:
          if (ReqSubscribeCandlestickUpdate == null) {
            ReqSubscribeCandlestickUpdate = new global::Lampyris.Crypto.Protocol.Quote.ReqSubscribeCandlestickUpdate();
          }
          ReqSubscribeCandlestickUpdate.MergeFrom(other.ReqSubscribeCandlestickUpdate);
          break;
        case RequestTypeOneofCase.ReqCandlestickQuery:
          if (ReqCandlestickQuery == null) {
            ReqCandlestickQuery = new global::Lampyris.Crypto.Protocol.Quote.ReqCandlestickQuery();
          }
          ReqCandlestickQuery.MergeFrom(other.ReqCandlestickQuery);
          break;
        case RequestTypeOneofCase.ReqTradeRule:
          if (ReqTradeRule == null) {
            ReqTradeRule = new global::Lampyris.Crypto.Protocol.Quote.ReqTradeRule();
          }
          ReqTradeRule.MergeFrom(other.ReqTradeRule);
          break;
        case RequestTypeOneofCase.ReqSelfSelectedSymbol:
          if (ReqSelfSelectedSymbol == null) {
            ReqSelfSelectedSymbol = new global::Lampyris.Crypto.Protocol.Quote.ReqSelfSelectedSymbol();
          }
          ReqSelfSelectedSymbol.MergeFrom(other.ReqSelfSelectedSymbol);
          break;
        case RequestTypeOneofCase.ReqModifyStreategySetting:
          if (ReqModifyStreategySetting == null) {
            ReqModifyStreategySetting = new global::Lampyris.Crypto.Protocol.Strategy.ReqModifyStreategySetting();
          }
          ReqModifyStreategySetting.MergeFrom(other.ReqModifyStreategySetting);
          break;
        case RequestTypeOneofCase.ReqQueryStrategyExectionInfo:
          if (ReqQueryStrategyExectionInfo == null) {
            ReqQueryStrategyExectionInfo = new global::Lampyris.Crypto.Protocol.Strategy.ReqQueryStrategyExectionInfo();
          }
          ReqQueryStrategyExectionInfo.MergeFrom(other.ReqQueryStrategyExectionInfo);
          break;
        case RequestTypeOneofCase.ReqPlaceOrder:
          if (ReqPlaceOrder == null) {
            ReqPlaceOrder = new global::Lampyris.Crypto.Protocol.Trading.ReqPlaceOrder();
          }
          ReqPlaceOrder.MergeFrom(other.ReqPlaceOrder);
          break;
        case RequestTypeOneofCase.ReqModifyOrder:
          if (ReqModifyOrder == null) {
            ReqModifyOrder = new global::Lampyris.Crypto.Protocol.Trading.ReqModifyOrder();
          }
          ReqModifyOrder.MergeFrom(other.ReqModifyOrder);
          break;
        case RequestTypeOneofCase.ReqCancelOrder:
          if (ReqCancelOrder == null) {
            ReqCancelOrder = new global::Lampyris.Crypto.Protocol.Trading.ReqCancelOrder();
          }
          ReqCancelOrder.MergeFrom(other.ReqCancelOrder);
          break;
        case RequestTypeOneofCase.ReqOneKeyClosePosition:
          if (ReqOneKeyClosePosition == null) {
            ReqOneKeyClosePosition = new global::Lampyris.Crypto.Protocol.Trading.ReqOneKeyClosePosition();
          }
          ReqOneKeyClosePosition.MergeFrom(other.ReqOneKeyClosePosition);
          break;
        case RequestTypeOneofCase.ReqQueryActiveOrders:
          if (ReqQueryActiveOrders == null) {
            ReqQueryActiveOrders = new global::Lampyris.Crypto.Protocol.Trading.ReqQueryActiveOrders();
          }
          ReqQueryActiveOrders.MergeFrom(other.ReqQueryActiveOrders);
          break;
        case RequestTypeOneofCase.ReqQueryHistoricalOrders:
          if (ReqQueryHistoricalOrders == null) {
            ReqQueryHistoricalOrders = new global::Lampyris.Crypto.Protocol.Trading.ReqQueryHistoricalOrders();
          }
          ReqQueryHistoricalOrders.MergeFrom(other.ReqQueryHistoricalOrders);
          break;
        case RequestTypeOneofCase.ReqQueryPositions:
          if (ReqQueryPositions == null) {
            ReqQueryPositions = new global::Lampyris.Crypto.Protocol.Trading.ReqQueryPositions();
          }
          ReqQueryPositions.MergeFrom(other.ReqQueryPositions);
          break;
        case RequestTypeOneofCase.ReqSetLeverage:
          if (ReqSetLeverage == null) {
            ReqSetLeverage = new global::Lampyris.Crypto.Protocol.Trading.ReqSetLeverage();
          }
          ReqSetLeverage.MergeFrom(other.ReqSetLeverage);
          break;
        case RequestTypeOneofCase.ReqQueryLeverage:
          if (ReqQueryLeverage == null) {
            ReqQueryLeverage = new global::Lampyris.Crypto.Protocol.Trading.ReqQueryLeverage();
          }
          ReqQueryLeverage.MergeFrom(other.ReqQueryLeverage);
          break;
        case RequestTypeOneofCase.ReqQueryLeverageBracket:
          if (ReqQueryLeverageBracket == null) {
            ReqQueryLeverageBracket = new global::Lampyris.Crypto.Protocol.Trading.ReqQueryLeverageBracket();
          }
          ReqQueryLeverageBracket.MergeFrom(other.ReqQueryLeverageBracket);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Lampyris.Crypto.Protocol.Account.ReqAccountSummaryUpdate subBuilder = new global::Lampyris.Crypto.Protocol.Account.ReqAccountSummaryUpdate();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqAccountSummaryUpdate) {
              subBuilder.MergeFrom(ReqAccountSummaryUpdate);
            }
            input.ReadMessage(subBuilder);
            ReqAccountSummaryUpdate = subBuilder;
            break;
          }
          case 18: {
            global::Lampyris.Crypto.Protocol.Account.ReqAccountAssetTransfer subBuilder = new global::Lampyris.Crypto.Protocol.Account.ReqAccountAssetTransfer();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqAccountAssetTransfer) {
              subBuilder.MergeFrom(ReqAccountAssetTransfer);
            }
            input.ReadMessage(subBuilder);
            ReqAccountAssetTransfer = subBuilder;
            break;
          }
          case 26: {
            global::Lampyris.Crypto.Protocol.Account.ReqQueryAssetTransferHistory subBuilder = new global::Lampyris.Crypto.Protocol.Account.ReqQueryAssetTransferHistory();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryAssetTransferHistory) {
              subBuilder.MergeFrom(ReqQueryAssetTransferHistory);
            }
            input.ReadMessage(subBuilder);
            ReqQueryAssetTransferHistory = subBuilder;
            break;
          }
          case 34: {
            global::Lampyris.Crypto.Protocol.App.ReqLogin subBuilder = new global::Lampyris.Crypto.Protocol.App.ReqLogin();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqLogin) {
              subBuilder.MergeFrom(ReqLogin);
            }
            input.ReadMessage(subBuilder);
            ReqLogin = subBuilder;
            break;
          }
          case 42: {
            global::Lampyris.Crypto.Protocol.App.ReqLogout subBuilder = new global::Lampyris.Crypto.Protocol.App.ReqLogout();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqLogout) {
              subBuilder.MergeFrom(ReqLogout);
            }
            input.ReadMessage(subBuilder);
            ReqLogout = subBuilder;
            break;
          }
          case 50: {
            global::Lampyris.Crypto.Protocol.App.ReqHeartBeat subBuilder = new global::Lampyris.Crypto.Protocol.App.ReqHeartBeat();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqHeartBeat) {
              subBuilder.MergeFrom(ReqHeartBeat);
            }
            input.ReadMessage(subBuilder);
            ReqHeartBeat = subBuilder;
            break;
          }
          case 58: {
            global::Lampyris.Crypto.Protocol.App.ReqUploadAppBehaviour subBuilder = new global::Lampyris.Crypto.Protocol.App.ReqUploadAppBehaviour();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqUploadAppBehaviour) {
              subBuilder.MergeFrom(ReqUploadAppBehaviour);
            }
            input.ReadMessage(subBuilder);
            ReqUploadAppBehaviour = subBuilder;
            break;
          }
          case 66: {
            global::Lampyris.Crypto.Protocol.Quote.ReqSubscribeTickerData subBuilder = new global::Lampyris.Crypto.Protocol.Quote.ReqSubscribeTickerData();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqSubscribeTickerData) {
              subBuilder.MergeFrom(ReqSubscribeTickerData);
            }
            input.ReadMessage(subBuilder);
            ReqSubscribeTickerData = subBuilder;
            break;
          }
          case 74: {
            global::Lampyris.Crypto.Protocol.Quote.ReqSubscribeTradeData subBuilder = new global::Lampyris.Crypto.Protocol.Quote.ReqSubscribeTradeData();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqSubscribeTradeData) {
              subBuilder.MergeFrom(ReqSubscribeTradeData);
            }
            input.ReadMessage(subBuilder);
            ReqSubscribeTradeData = subBuilder;
            break;
          }
          case 82: {
            global::Lampyris.Crypto.Protocol.Quote.ReqSubscribeCandlestickUpdate subBuilder = new global::Lampyris.Crypto.Protocol.Quote.ReqSubscribeCandlestickUpdate();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqSubscribeCandlestickUpdate) {
              subBuilder.MergeFrom(ReqSubscribeCandlestickUpdate);
            }
            input.ReadMessage(subBuilder);
            ReqSubscribeCandlestickUpdate = subBuilder;
            break;
          }
          case 90: {
            global::Lampyris.Crypto.Protocol.Quote.ReqCandlestickQuery subBuilder = new global::Lampyris.Crypto.Protocol.Quote.ReqCandlestickQuery();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqCandlestickQuery) {
              subBuilder.MergeFrom(ReqCandlestickQuery);
            }
            input.ReadMessage(subBuilder);
            ReqCandlestickQuery = subBuilder;
            break;
          }
          case 98: {
            global::Lampyris.Crypto.Protocol.Quote.ReqTradeRule subBuilder = new global::Lampyris.Crypto.Protocol.Quote.ReqTradeRule();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqTradeRule) {
              subBuilder.MergeFrom(ReqTradeRule);
            }
            input.ReadMessage(subBuilder);
            ReqTradeRule = subBuilder;
            break;
          }
          case 106: {
            global::Lampyris.Crypto.Protocol.Quote.ReqSelfSelectedSymbol subBuilder = new global::Lampyris.Crypto.Protocol.Quote.ReqSelfSelectedSymbol();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqSelfSelectedSymbol) {
              subBuilder.MergeFrom(ReqSelfSelectedSymbol);
            }
            input.ReadMessage(subBuilder);
            ReqSelfSelectedSymbol = subBuilder;
            break;
          }
          case 114: {
            global::Lampyris.Crypto.Protocol.Strategy.ReqModifyStreategySetting subBuilder = new global::Lampyris.Crypto.Protocol.Strategy.ReqModifyStreategySetting();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqModifyStreategySetting) {
              subBuilder.MergeFrom(ReqModifyStreategySetting);
            }
            input.ReadMessage(subBuilder);
            ReqModifyStreategySetting = subBuilder;
            break;
          }
          case 122: {
            global::Lampyris.Crypto.Protocol.Strategy.ReqQueryStrategyExectionInfo subBuilder = new global::Lampyris.Crypto.Protocol.Strategy.ReqQueryStrategyExectionInfo();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryStrategyExectionInfo) {
              subBuilder.MergeFrom(ReqQueryStrategyExectionInfo);
            }
            input.ReadMessage(subBuilder);
            ReqQueryStrategyExectionInfo = subBuilder;
            break;
          }
          case 130: {
            global::Lampyris.Crypto.Protocol.Trading.ReqPlaceOrder subBuilder = new global::Lampyris.Crypto.Protocol.Trading.ReqPlaceOrder();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqPlaceOrder) {
              subBuilder.MergeFrom(ReqPlaceOrder);
            }
            input.ReadMessage(subBuilder);
            ReqPlaceOrder = subBuilder;
            break;
          }
          case 138: {
            global::Lampyris.Crypto.Protocol.Trading.ReqModifyOrder subBuilder = new global::Lampyris.Crypto.Protocol.Trading.ReqModifyOrder();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqModifyOrder) {
              subBuilder.MergeFrom(ReqModifyOrder);
            }
            input.ReadMessage(subBuilder);
            ReqModifyOrder = subBuilder;
            break;
          }
          case 146: {
            global::Lampyris.Crypto.Protocol.Trading.ReqCancelOrder subBuilder = new global::Lampyris.Crypto.Protocol.Trading.ReqCancelOrder();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqCancelOrder) {
              subBuilder.MergeFrom(ReqCancelOrder);
            }
            input.ReadMessage(subBuilder);
            ReqCancelOrder = subBuilder;
            break;
          }
          case 154: {
            global::Lampyris.Crypto.Protocol.Trading.ReqOneKeyClosePosition subBuilder = new global::Lampyris.Crypto.Protocol.Trading.ReqOneKeyClosePosition();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqOneKeyClosePosition) {
              subBuilder.MergeFrom(ReqOneKeyClosePosition);
            }
            input.ReadMessage(subBuilder);
            ReqOneKeyClosePosition = subBuilder;
            break;
          }
          case 162: {
            global::Lampyris.Crypto.Protocol.Trading.ReqQueryActiveOrders subBuilder = new global::Lampyris.Crypto.Protocol.Trading.ReqQueryActiveOrders();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryActiveOrders) {
              subBuilder.MergeFrom(ReqQueryActiveOrders);
            }
            input.ReadMessage(subBuilder);
            ReqQueryActiveOrders = subBuilder;
            break;
          }
          case 170: {
            global::Lampyris.Crypto.Protocol.Trading.ReqQueryHistoricalOrders subBuilder = new global::Lampyris.Crypto.Protocol.Trading.ReqQueryHistoricalOrders();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryHistoricalOrders) {
              subBuilder.MergeFrom(ReqQueryHistoricalOrders);
            }
            input.ReadMessage(subBuilder);
            ReqQueryHistoricalOrders = subBuilder;
            break;
          }
          case 178: {
            global::Lampyris.Crypto.Protocol.Trading.ReqQueryPositions subBuilder = new global::Lampyris.Crypto.Protocol.Trading.ReqQueryPositions();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryPositions) {
              subBuilder.MergeFrom(ReqQueryPositions);
            }
            input.ReadMessage(subBuilder);
            ReqQueryPositions = subBuilder;
            break;
          }
          case 186: {
            global::Lampyris.Crypto.Protocol.Trading.ReqSetLeverage subBuilder = new global::Lampyris.Crypto.Protocol.Trading.ReqSetLeverage();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqSetLeverage) {
              subBuilder.MergeFrom(ReqSetLeverage);
            }
            input.ReadMessage(subBuilder);
            ReqSetLeverage = subBuilder;
            break;
          }
          case 194: {
            global::Lampyris.Crypto.Protocol.Trading.ReqQueryLeverage subBuilder = new global::Lampyris.Crypto.Protocol.Trading.ReqQueryLeverage();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryLeverage) {
              subBuilder.MergeFrom(ReqQueryLeverage);
            }
            input.ReadMessage(subBuilder);
            ReqQueryLeverage = subBuilder;
            break;
          }
          case 202: {
            global::Lampyris.Crypto.Protocol.Trading.ReqQueryLeverageBracket subBuilder = new global::Lampyris.Crypto.Protocol.Trading.ReqQueryLeverageBracket();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryLeverageBracket) {
              subBuilder.MergeFrom(ReqQueryLeverageBracket);
            }
            input.ReadMessage(subBuilder);
            ReqQueryLeverageBracket = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Lampyris.Crypto.Protocol.Account.ReqAccountSummaryUpdate subBuilder = new global::Lampyris.Crypto.Protocol.Account.ReqAccountSummaryUpdate();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqAccountSummaryUpdate) {
              subBuilder.MergeFrom(ReqAccountSummaryUpdate);
            }
            input.ReadMessage(subBuilder);
            ReqAccountSummaryUpdate = subBuilder;
            break;
          }
          case 18: {
            global::Lampyris.Crypto.Protocol.Account.ReqAccountAssetTransfer subBuilder = new global::Lampyris.Crypto.Protocol.Account.ReqAccountAssetTransfer();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqAccountAssetTransfer) {
              subBuilder.MergeFrom(ReqAccountAssetTransfer);
            }
            input.ReadMessage(subBuilder);
            ReqAccountAssetTransfer = subBuilder;
            break;
          }
          case 26: {
            global::Lampyris.Crypto.Protocol.Account.ReqQueryAssetTransferHistory subBuilder = new global::Lampyris.Crypto.Protocol.Account.ReqQueryAssetTransferHistory();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryAssetTransferHistory) {
              subBuilder.MergeFrom(ReqQueryAssetTransferHistory);
            }
            input.ReadMessage(subBuilder);
            ReqQueryAssetTransferHistory = subBuilder;
            break;
          }
          case 34: {
            global::Lampyris.Crypto.Protocol.App.ReqLogin subBuilder = new global::Lampyris.Crypto.Protocol.App.ReqLogin();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqLogin) {
              subBuilder.MergeFrom(ReqLogin);
            }
            input.ReadMessage(subBuilder);
            ReqLogin = subBuilder;
            break;
          }
          case 42: {
            global::Lampyris.Crypto.Protocol.App.ReqLogout subBuilder = new global::Lampyris.Crypto.Protocol.App.ReqLogout();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqLogout) {
              subBuilder.MergeFrom(ReqLogout);
            }
            input.ReadMessage(subBuilder);
            ReqLogout = subBuilder;
            break;
          }
          case 50: {
            global::Lampyris.Crypto.Protocol.App.ReqHeartBeat subBuilder = new global::Lampyris.Crypto.Protocol.App.ReqHeartBeat();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqHeartBeat) {
              subBuilder.MergeFrom(ReqHeartBeat);
            }
            input.ReadMessage(subBuilder);
            ReqHeartBeat = subBuilder;
            break;
          }
          case 58: {
            global::Lampyris.Crypto.Protocol.App.ReqUploadAppBehaviour subBuilder = new global::Lampyris.Crypto.Protocol.App.ReqUploadAppBehaviour();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqUploadAppBehaviour) {
              subBuilder.MergeFrom(ReqUploadAppBehaviour);
            }
            input.ReadMessage(subBuilder);
            ReqUploadAppBehaviour = subBuilder;
            break;
          }
          case 66: {
            global::Lampyris.Crypto.Protocol.Quote.ReqSubscribeTickerData subBuilder = new global::Lampyris.Crypto.Protocol.Quote.ReqSubscribeTickerData();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqSubscribeTickerData) {
              subBuilder.MergeFrom(ReqSubscribeTickerData);
            }
            input.ReadMessage(subBuilder);
            ReqSubscribeTickerData = subBuilder;
            break;
          }
          case 74: {
            global::Lampyris.Crypto.Protocol.Quote.ReqSubscribeTradeData subBuilder = new global::Lampyris.Crypto.Protocol.Quote.ReqSubscribeTradeData();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqSubscribeTradeData) {
              subBuilder.MergeFrom(ReqSubscribeTradeData);
            }
            input.ReadMessage(subBuilder);
            ReqSubscribeTradeData = subBuilder;
            break;
          }
          case 82: {
            global::Lampyris.Crypto.Protocol.Quote.ReqSubscribeCandlestickUpdate subBuilder = new global::Lampyris.Crypto.Protocol.Quote.ReqSubscribeCandlestickUpdate();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqSubscribeCandlestickUpdate) {
              subBuilder.MergeFrom(ReqSubscribeCandlestickUpdate);
            }
            input.ReadMessage(subBuilder);
            ReqSubscribeCandlestickUpdate = subBuilder;
            break;
          }
          case 90: {
            global::Lampyris.Crypto.Protocol.Quote.ReqCandlestickQuery subBuilder = new global::Lampyris.Crypto.Protocol.Quote.ReqCandlestickQuery();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqCandlestickQuery) {
              subBuilder.MergeFrom(ReqCandlestickQuery);
            }
            input.ReadMessage(subBuilder);
            ReqCandlestickQuery = subBuilder;
            break;
          }
          case 98: {
            global::Lampyris.Crypto.Protocol.Quote.ReqTradeRule subBuilder = new global::Lampyris.Crypto.Protocol.Quote.ReqTradeRule();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqTradeRule) {
              subBuilder.MergeFrom(ReqTradeRule);
            }
            input.ReadMessage(subBuilder);
            ReqTradeRule = subBuilder;
            break;
          }
          case 106: {
            global::Lampyris.Crypto.Protocol.Quote.ReqSelfSelectedSymbol subBuilder = new global::Lampyris.Crypto.Protocol.Quote.ReqSelfSelectedSymbol();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqSelfSelectedSymbol) {
              subBuilder.MergeFrom(ReqSelfSelectedSymbol);
            }
            input.ReadMessage(subBuilder);
            ReqSelfSelectedSymbol = subBuilder;
            break;
          }
          case 114: {
            global::Lampyris.Crypto.Protocol.Strategy.ReqModifyStreategySetting subBuilder = new global::Lampyris.Crypto.Protocol.Strategy.ReqModifyStreategySetting();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqModifyStreategySetting) {
              subBuilder.MergeFrom(ReqModifyStreategySetting);
            }
            input.ReadMessage(subBuilder);
            ReqModifyStreategySetting = subBuilder;
            break;
          }
          case 122: {
            global::Lampyris.Crypto.Protocol.Strategy.ReqQueryStrategyExectionInfo subBuilder = new global::Lampyris.Crypto.Protocol.Strategy.ReqQueryStrategyExectionInfo();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryStrategyExectionInfo) {
              subBuilder.MergeFrom(ReqQueryStrategyExectionInfo);
            }
            input.ReadMessage(subBuilder);
            ReqQueryStrategyExectionInfo = subBuilder;
            break;
          }
          case 130: {
            global::Lampyris.Crypto.Protocol.Trading.ReqPlaceOrder subBuilder = new global::Lampyris.Crypto.Protocol.Trading.ReqPlaceOrder();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqPlaceOrder) {
              subBuilder.MergeFrom(ReqPlaceOrder);
            }
            input.ReadMessage(subBuilder);
            ReqPlaceOrder = subBuilder;
            break;
          }
          case 138: {
            global::Lampyris.Crypto.Protocol.Trading.ReqModifyOrder subBuilder = new global::Lampyris.Crypto.Protocol.Trading.ReqModifyOrder();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqModifyOrder) {
              subBuilder.MergeFrom(ReqModifyOrder);
            }
            input.ReadMessage(subBuilder);
            ReqModifyOrder = subBuilder;
            break;
          }
          case 146: {
            global::Lampyris.Crypto.Protocol.Trading.ReqCancelOrder subBuilder = new global::Lampyris.Crypto.Protocol.Trading.ReqCancelOrder();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqCancelOrder) {
              subBuilder.MergeFrom(ReqCancelOrder);
            }
            input.ReadMessage(subBuilder);
            ReqCancelOrder = subBuilder;
            break;
          }
          case 154: {
            global::Lampyris.Crypto.Protocol.Trading.ReqOneKeyClosePosition subBuilder = new global::Lampyris.Crypto.Protocol.Trading.ReqOneKeyClosePosition();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqOneKeyClosePosition) {
              subBuilder.MergeFrom(ReqOneKeyClosePosition);
            }
            input.ReadMessage(subBuilder);
            ReqOneKeyClosePosition = subBuilder;
            break;
          }
          case 162: {
            global::Lampyris.Crypto.Protocol.Trading.ReqQueryActiveOrders subBuilder = new global::Lampyris.Crypto.Protocol.Trading.ReqQueryActiveOrders();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryActiveOrders) {
              subBuilder.MergeFrom(ReqQueryActiveOrders);
            }
            input.ReadMessage(subBuilder);
            ReqQueryActiveOrders = subBuilder;
            break;
          }
          case 170: {
            global::Lampyris.Crypto.Protocol.Trading.ReqQueryHistoricalOrders subBuilder = new global::Lampyris.Crypto.Protocol.Trading.ReqQueryHistoricalOrders();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryHistoricalOrders) {
              subBuilder.MergeFrom(ReqQueryHistoricalOrders);
            }
            input.ReadMessage(subBuilder);
            ReqQueryHistoricalOrders = subBuilder;
            break;
          }
          case 178: {
            global::Lampyris.Crypto.Protocol.Trading.ReqQueryPositions subBuilder = new global::Lampyris.Crypto.Protocol.Trading.ReqQueryPositions();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryPositions) {
              subBuilder.MergeFrom(ReqQueryPositions);
            }
            input.ReadMessage(subBuilder);
            ReqQueryPositions = subBuilder;
            break;
          }
          case 186: {
            global::Lampyris.Crypto.Protocol.Trading.ReqSetLeverage subBuilder = new global::Lampyris.Crypto.Protocol.Trading.ReqSetLeverage();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqSetLeverage) {
              subBuilder.MergeFrom(ReqSetLeverage);
            }
            input.ReadMessage(subBuilder);
            ReqSetLeverage = subBuilder;
            break;
          }
          case 194: {
            global::Lampyris.Crypto.Protocol.Trading.ReqQueryLeverage subBuilder = new global::Lampyris.Crypto.Protocol.Trading.ReqQueryLeverage();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryLeverage) {
              subBuilder.MergeFrom(ReqQueryLeverage);
            }
            input.ReadMessage(subBuilder);
            ReqQueryLeverage = subBuilder;
            break;
          }
          case 202: {
            global::Lampyris.Crypto.Protocol.Trading.ReqQueryLeverageBracket subBuilder = new global::Lampyris.Crypto.Protocol.Trading.ReqQueryLeverageBracket();
            if (requestTypeCase_ == RequestTypeOneofCase.ReqQueryLeverageBracket) {
              subBuilder.MergeFrom(ReqQueryLeverageBracket);
            }
            input.ReadMessage(subBuilder);
            ReqQueryLeverageBracket = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Response : pb::IMessage<Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Lampyris.Crypto.Protocol.Common.CommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Response(Response other) : this() {
      switch (other.ResponseTypeCase) {
        case ResponseTypeOneofCase.AccountAssetInfoBean:
          AccountAssetInfoBean = other.AccountAssetInfoBean.Clone();
          break;
        case ResponseTypeOneofCase.SubAccountInfoBean:
          SubAccountInfoBean = other.SubAccountInfoBean.Clone();
          break;
        case ResponseTypeOneofCase.ResQuerySubAcccountList:
          ResQuerySubAcccountList = other.ResQuerySubAcccountList.Clone();
          break;
        case ResponseTypeOneofCase.ResAccountSummaryUpdate:
          ResAccountSummaryUpdate = other.ResAccountSummaryUpdate.Clone();
          break;
        case ResponseTypeOneofCase.AssetTransferHistoryInfoDetailBean:
          AssetTransferHistoryInfoDetailBean = other.AssetTransferHistoryInfoDetailBean.Clone();
          break;
        case ResponseTypeOneofCase.AssetTransferHistoryInfoBean:
          AssetTransferHistoryInfoBean = other.AssetTransferHistoryInfoBean.Clone();
          break;
        case ResponseTypeOneofCase.ResLogin:
          ResLogin = other.ResLogin.Clone();
          break;
        case ResponseTypeOneofCase.ResHeartBeat:
          ResHeartBeat = other.ResHeartBeat.Clone();
          break;
        case ResponseTypeOneofCase.ResNotice:
          ResNotice = other.ResNotice.Clone();
          break;
        case ResponseTypeOneofCase.SymbolTickerDataBean:
          SymbolTickerDataBean = other.SymbolTickerDataBean.Clone();
          break;
        case ResponseTypeOneofCase.ResSubscribeTickerData:
          ResSubscribeTickerData = other.ResSubscribeTickerData.Clone();
          break;
        case ResponseTypeOneofCase.SymbolTradeDataBean:
          SymbolTradeDataBean = other.SymbolTradeDataBean.Clone();
          break;
        case ResponseTypeOneofCase.TradeDataBean:
          TradeDataBean = other.TradeDataBean.Clone();
          break;
        case ResponseTypeOneofCase.ResCandlestickQuery:
          ResCandlestickQuery = other.ResCandlestickQuery.Clone();
          break;
        case ResponseTypeOneofCase.CandlestickUpdateBean:
          CandlestickUpdateBean = other.CandlestickUpdateBean.Clone();
          break;
        case ResponseTypeOneofCase.CandlestickBean:
          CandlestickBean = other.CandlestickBean.Clone();
          break;
        case ResponseTypeOneofCase.ResTradeRule:
          ResTradeRule = other.ResTradeRule.Clone();
          break;
        case ResponseTypeOneofCase.SymbolTradeRuleBean:
          SymbolTradeRuleBean = other.SymbolTradeRuleBean.Clone();
          break;
        case ResponseTypeOneofCase.MarketMonitorNoticeListBean:
          MarketMonitorNoticeListBean = other.MarketMonitorNoticeListBean.Clone();
          break;
        case ResponseTypeOneofCase.MarketMonitorNoticeBean:
          MarketMonitorNoticeBean = other.MarketMonitorNoticeBean.Clone();
          break;
        case ResponseTypeOneofCase.SelfSelectedSymbolInfoBean:
          SelfSelectedSymbolInfoBean = other.SelfSelectedSymbolInfoBean.Clone();
          break;
        case ResponseTypeOneofCase.SelfSelectedSymbolGroupBean:
          SelfSelectedSymbolGroupBean = other.SelfSelectedSymbolGroupBean.Clone();
          break;
        case ResponseTypeOneofCase.ResSelfSelectedSymbol:
          ResSelfSelectedSymbol = other.ResSelfSelectedSymbol.Clone();
          break;
        case ResponseTypeOneofCase.StreategyConfigBean:
          StreategyConfigBean = other.StreategyConfigBean.Clone();
          break;
        case ResponseTypeOneofCase.StreategyFieldBean:
          StreategyFieldBean = other.StreategyFieldBean.Clone();
          break;
        case ResponseTypeOneofCase.ResModifyStreategySetting:
          ResModifyStreategySetting = other.ResModifyStreategySetting.Clone();
          break;
        case ResponseTypeOneofCase.ResStreategySettings:
          ResStreategySettings = other.ResStreategySettings.Clone();
          break;
        case ResponseTypeOneofCase.StrategyExectionInfoBean:
          StrategyExectionInfoBean = other.StrategyExectionInfoBean.Clone();
          break;
        case ResponseTypeOneofCase.ResQueryStrategyExectionInfo:
          ResQueryStrategyExectionInfo = other.ResQueryStrategyExectionInfo.Clone();
          break;
        case ResponseTypeOneofCase.ConditionTriggerBean:
          ConditionTriggerBean = other.ConditionTriggerBean.Clone();
          break;
        case ResponseTypeOneofCase.OrderBean:
          OrderBean = other.OrderBean.Clone();
          break;
        case ResponseTypeOneofCase.OrderStatusBean:
          OrderStatusBean = other.OrderStatusBean.Clone();
          break;
        case ResponseTypeOneofCase.LeverageBean:
          LeverageBean = other.LeverageBean.Clone();
          break;
        case ResponseTypeOneofCase.ResQueryLeverage:
          ResQueryLeverage = other.ResQueryLeverage.Clone();
          break;
        case ResponseTypeOneofCase.ResQueryLeverageBracket:
          ResQueryLeverageBracket = other.ResQueryLeverageBracket.Clone();
          break;
        case ResponseTypeOneofCase.SymbolLeverageBracketBean:
          SymbolLeverageBracketBean = other.SymbolLeverageBracketBean.Clone();
          break;
        case ResponseTypeOneofCase.LeverageBracketBean:
          LeverageBracketBean = other.LeverageBracketBean.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "accountAssetInfoBean" field.</summary>
    public const int AccountAssetInfoBeanFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Account.AccountAssetInfoBean AccountAssetInfoBean {
      get { return responseTypeCase_ == ResponseTypeOneofCase.AccountAssetInfoBean ? (global::Lampyris.Crypto.Protocol.Account.AccountAssetInfoBean) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.AccountAssetInfoBean;
      }
    }

    /// <summary>Field number for the "subAccountInfoBean" field.</summary>
    public const int SubAccountInfoBeanFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Account.SubAccountInfoBean SubAccountInfoBean {
      get { return responseTypeCase_ == ResponseTypeOneofCase.SubAccountInfoBean ? (global::Lampyris.Crypto.Protocol.Account.SubAccountInfoBean) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.SubAccountInfoBean;
      }
    }

    /// <summary>Field number for the "resQuerySubAcccountList" field.</summary>
    public const int ResQuerySubAcccountListFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Account.ResQuerySubAcccountList ResQuerySubAcccountList {
      get { return responseTypeCase_ == ResponseTypeOneofCase.ResQuerySubAcccountList ? (global::Lampyris.Crypto.Protocol.Account.ResQuerySubAcccountList) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.ResQuerySubAcccountList;
      }
    }

    /// <summary>Field number for the "resAccountSummaryUpdate" field.</summary>
    public const int ResAccountSummaryUpdateFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Account.ResAccountSummaryUpdate ResAccountSummaryUpdate {
      get { return responseTypeCase_ == ResponseTypeOneofCase.ResAccountSummaryUpdate ? (global::Lampyris.Crypto.Protocol.Account.ResAccountSummaryUpdate) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.ResAccountSummaryUpdate;
      }
    }

    /// <summary>Field number for the "assetTransferHistoryInfoDetailBean" field.</summary>
    public const int AssetTransferHistoryInfoDetailBeanFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Account.AssetTransferHistoryInfoDetailBean AssetTransferHistoryInfoDetailBean {
      get { return responseTypeCase_ == ResponseTypeOneofCase.AssetTransferHistoryInfoDetailBean ? (global::Lampyris.Crypto.Protocol.Account.AssetTransferHistoryInfoDetailBean) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.AssetTransferHistoryInfoDetailBean;
      }
    }

    /// <summary>Field number for the "assetTransferHistoryInfoBean" field.</summary>
    public const int AssetTransferHistoryInfoBeanFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Account.AssetTransferHistoryInfoBean AssetTransferHistoryInfoBean {
      get { return responseTypeCase_ == ResponseTypeOneofCase.AssetTransferHistoryInfoBean ? (global::Lampyris.Crypto.Protocol.Account.AssetTransferHistoryInfoBean) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.AssetTransferHistoryInfoBean;
      }
    }

    /// <summary>Field number for the "resLogin" field.</summary>
    public const int ResLoginFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.App.ResLogin ResLogin {
      get { return responseTypeCase_ == ResponseTypeOneofCase.ResLogin ? (global::Lampyris.Crypto.Protocol.App.ResLogin) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.ResLogin;
      }
    }

    /// <summary>Field number for the "resHeartBeat" field.</summary>
    public const int ResHeartBeatFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.App.ResHeartBeat ResHeartBeat {
      get { return responseTypeCase_ == ResponseTypeOneofCase.ResHeartBeat ? (global::Lampyris.Crypto.Protocol.App.ResHeartBeat) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.ResHeartBeat;
      }
    }

    /// <summary>Field number for the "resNotice" field.</summary>
    public const int ResNoticeFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.App.ResNotice ResNotice {
      get { return responseTypeCase_ == ResponseTypeOneofCase.ResNotice ? (global::Lampyris.Crypto.Protocol.App.ResNotice) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.ResNotice;
      }
    }

    /// <summary>Field number for the "symbolTickerDataBean" field.</summary>
    public const int SymbolTickerDataBeanFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Quote.SymbolTickerDataBean SymbolTickerDataBean {
      get { return responseTypeCase_ == ResponseTypeOneofCase.SymbolTickerDataBean ? (global::Lampyris.Crypto.Protocol.Quote.SymbolTickerDataBean) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.SymbolTickerDataBean;
      }
    }

    /// <summary>Field number for the "resSubscribeTickerData" field.</summary>
    public const int ResSubscribeTickerDataFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Quote.ResSubscribeTickerData ResSubscribeTickerData {
      get { return responseTypeCase_ == ResponseTypeOneofCase.ResSubscribeTickerData ? (global::Lampyris.Crypto.Protocol.Quote.ResSubscribeTickerData) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.ResSubscribeTickerData;
      }
    }

    /// <summary>Field number for the "symbolTradeDataBean" field.</summary>
    public const int SymbolTradeDataBeanFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Quote.SymbolTradeDataBean SymbolTradeDataBean {
      get { return responseTypeCase_ == ResponseTypeOneofCase.SymbolTradeDataBean ? (global::Lampyris.Crypto.Protocol.Quote.SymbolTradeDataBean) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.SymbolTradeDataBean;
      }
    }

    /// <summary>Field number for the "tradeDataBean" field.</summary>
    public const int TradeDataBeanFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Quote.TradeDataBean TradeDataBean {
      get { return responseTypeCase_ == ResponseTypeOneofCase.TradeDataBean ? (global::Lampyris.Crypto.Protocol.Quote.TradeDataBean) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.TradeDataBean;
      }
    }

    /// <summary>Field number for the "resCandlestickQuery" field.</summary>
    public const int ResCandlestickQueryFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Quote.ResCandlestickQuery ResCandlestickQuery {
      get { return responseTypeCase_ == ResponseTypeOneofCase.ResCandlestickQuery ? (global::Lampyris.Crypto.Protocol.Quote.ResCandlestickQuery) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.ResCandlestickQuery;
      }
    }

    /// <summary>Field number for the "candlestickUpdateBean" field.</summary>
    public const int CandlestickUpdateBeanFieldNumber = 15;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Quote.CandlestickUpdateBean CandlestickUpdateBean {
      get { return responseTypeCase_ == ResponseTypeOneofCase.CandlestickUpdateBean ? (global::Lampyris.Crypto.Protocol.Quote.CandlestickUpdateBean) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.CandlestickUpdateBean;
      }
    }

    /// <summary>Field number for the "candlestickBean" field.</summary>
    public const int CandlestickBeanFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Quote.CandlestickBean CandlestickBean {
      get { return responseTypeCase_ == ResponseTypeOneofCase.CandlestickBean ? (global::Lampyris.Crypto.Protocol.Quote.CandlestickBean) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.CandlestickBean;
      }
    }

    /// <summary>Field number for the "resTradeRule" field.</summary>
    public const int ResTradeRuleFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Quote.ResTradeRule ResTradeRule {
      get { return responseTypeCase_ == ResponseTypeOneofCase.ResTradeRule ? (global::Lampyris.Crypto.Protocol.Quote.ResTradeRule) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.ResTradeRule;
      }
    }

    /// <summary>Field number for the "symbolTradeRuleBean" field.</summary>
    public const int SymbolTradeRuleBeanFieldNumber = 18;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Quote.SymbolTradeRuleBean SymbolTradeRuleBean {
      get { return responseTypeCase_ == ResponseTypeOneofCase.SymbolTradeRuleBean ? (global::Lampyris.Crypto.Protocol.Quote.SymbolTradeRuleBean) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.SymbolTradeRuleBean;
      }
    }

    /// <summary>Field number for the "marketMonitorNoticeListBean" field.</summary>
    public const int MarketMonitorNoticeListBeanFieldNumber = 19;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Quote.MarketMonitorNoticeListBean MarketMonitorNoticeListBean {
      get { return responseTypeCase_ == ResponseTypeOneofCase.MarketMonitorNoticeListBean ? (global::Lampyris.Crypto.Protocol.Quote.MarketMonitorNoticeListBean) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.MarketMonitorNoticeListBean;
      }
    }

    /// <summary>Field number for the "marketMonitorNoticeBean" field.</summary>
    public const int MarketMonitorNoticeBeanFieldNumber = 20;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Quote.MarketMonitorNoticeBean MarketMonitorNoticeBean {
      get { return responseTypeCase_ == ResponseTypeOneofCase.MarketMonitorNoticeBean ? (global::Lampyris.Crypto.Protocol.Quote.MarketMonitorNoticeBean) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.MarketMonitorNoticeBean;
      }
    }

    /// <summary>Field number for the "selfSelectedSymbolInfoBean" field.</summary>
    public const int SelfSelectedSymbolInfoBeanFieldNumber = 21;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Quote.SelfSelectedSymbolInfoBean SelfSelectedSymbolInfoBean {
      get { return responseTypeCase_ == ResponseTypeOneofCase.SelfSelectedSymbolInfoBean ? (global::Lampyris.Crypto.Protocol.Quote.SelfSelectedSymbolInfoBean) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.SelfSelectedSymbolInfoBean;
      }
    }

    /// <summary>Field number for the "selfSelectedSymbolGroupBean" field.</summary>
    public const int SelfSelectedSymbolGroupBeanFieldNumber = 22;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Quote.SelfSelectedSymbolGroupBean SelfSelectedSymbolGroupBean {
      get { return responseTypeCase_ == ResponseTypeOneofCase.SelfSelectedSymbolGroupBean ? (global::Lampyris.Crypto.Protocol.Quote.SelfSelectedSymbolGroupBean) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.SelfSelectedSymbolGroupBean;
      }
    }

    /// <summary>Field number for the "resSelfSelectedSymbol" field.</summary>
    public const int ResSelfSelectedSymbolFieldNumber = 23;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Quote.ResSelfSelectedSymbol ResSelfSelectedSymbol {
      get { return responseTypeCase_ == ResponseTypeOneofCase.ResSelfSelectedSymbol ? (global::Lampyris.Crypto.Protocol.Quote.ResSelfSelectedSymbol) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.ResSelfSelectedSymbol;
      }
    }

    /// <summary>Field number for the "streategyConfigBean" field.</summary>
    public const int StreategyConfigBeanFieldNumber = 24;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Strategy.StreategyConfigBean StreategyConfigBean {
      get { return responseTypeCase_ == ResponseTypeOneofCase.StreategyConfigBean ? (global::Lampyris.Crypto.Protocol.Strategy.StreategyConfigBean) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.StreategyConfigBean;
      }
    }

    /// <summary>Field number for the "streategyFieldBean" field.</summary>
    public const int StreategyFieldBeanFieldNumber = 25;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Strategy.StreategyFieldBean StreategyFieldBean {
      get { return responseTypeCase_ == ResponseTypeOneofCase.StreategyFieldBean ? (global::Lampyris.Crypto.Protocol.Strategy.StreategyFieldBean) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.StreategyFieldBean;
      }
    }

    /// <summary>Field number for the "resModifyStreategySetting" field.</summary>
    public const int ResModifyStreategySettingFieldNumber = 26;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Strategy.ResModifyStreategySetting ResModifyStreategySetting {
      get { return responseTypeCase_ == ResponseTypeOneofCase.ResModifyStreategySetting ? (global::Lampyris.Crypto.Protocol.Strategy.ResModifyStreategySetting) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.ResModifyStreategySetting;
      }
    }

    /// <summary>Field number for the "resStreategySettings" field.</summary>
    public const int ResStreategySettingsFieldNumber = 27;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Strategy.ResStreategySettings ResStreategySettings {
      get { return responseTypeCase_ == ResponseTypeOneofCase.ResStreategySettings ? (global::Lampyris.Crypto.Protocol.Strategy.ResStreategySettings) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.ResStreategySettings;
      }
    }

    /// <summary>Field number for the "strategyExectionInfoBean" field.</summary>
    public const int StrategyExectionInfoBeanFieldNumber = 28;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Strategy.StrategyExectionInfoBean StrategyExectionInfoBean {
      get { return responseTypeCase_ == ResponseTypeOneofCase.StrategyExectionInfoBean ? (global::Lampyris.Crypto.Protocol.Strategy.StrategyExectionInfoBean) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.StrategyExectionInfoBean;
      }
    }

    /// <summary>Field number for the "resQueryStrategyExectionInfo" field.</summary>
    public const int ResQueryStrategyExectionInfoFieldNumber = 29;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Strategy.ResQueryStrategyExectionInfo ResQueryStrategyExectionInfo {
      get { return responseTypeCase_ == ResponseTypeOneofCase.ResQueryStrategyExectionInfo ? (global::Lampyris.Crypto.Protocol.Strategy.ResQueryStrategyExectionInfo) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.ResQueryStrategyExectionInfo;
      }
    }

    /// <summary>Field number for the "conditionTriggerBean" field.</summary>
    public const int ConditionTriggerBeanFieldNumber = 30;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Trading.ConditionTriggerBean ConditionTriggerBean {
      get { return responseTypeCase_ == ResponseTypeOneofCase.ConditionTriggerBean ? (global::Lampyris.Crypto.Protocol.Trading.ConditionTriggerBean) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.ConditionTriggerBean;
      }
    }

    /// <summary>Field number for the "orderBean" field.</summary>
    public const int OrderBeanFieldNumber = 31;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Trading.OrderBean OrderBean {
      get { return responseTypeCase_ == ResponseTypeOneofCase.OrderBean ? (global::Lampyris.Crypto.Protocol.Trading.OrderBean) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.OrderBean;
      }
    }

    /// <summary>Field number for the "orderStatusBean" field.</summary>
    public const int OrderStatusBeanFieldNumber = 32;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Trading.OrderStatusBean OrderStatusBean {
      get { return responseTypeCase_ == ResponseTypeOneofCase.OrderStatusBean ? (global::Lampyris.Crypto.Protocol.Trading.OrderStatusBean) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.OrderStatusBean;
      }
    }

    /// <summary>Field number for the "leverageBean" field.</summary>
    public const int LeverageBeanFieldNumber = 33;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Trading.LeverageBean LeverageBean {
      get { return responseTypeCase_ == ResponseTypeOneofCase.LeverageBean ? (global::Lampyris.Crypto.Protocol.Trading.LeverageBean) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.LeverageBean;
      }
    }

    /// <summary>Field number for the "resQueryLeverage" field.</summary>
    public const int ResQueryLeverageFieldNumber = 34;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Trading.ResQueryLeverage ResQueryLeverage {
      get { return responseTypeCase_ == ResponseTypeOneofCase.ResQueryLeverage ? (global::Lampyris.Crypto.Protocol.Trading.ResQueryLeverage) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.ResQueryLeverage;
      }
    }

    /// <summary>Field number for the "resQueryLeverageBracket" field.</summary>
    public const int ResQueryLeverageBracketFieldNumber = 35;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Trading.ResQueryLeverageBracket ResQueryLeverageBracket {
      get { return responseTypeCase_ == ResponseTypeOneofCase.ResQueryLeverageBracket ? (global::Lampyris.Crypto.Protocol.Trading.ResQueryLeverageBracket) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.ResQueryLeverageBracket;
      }
    }

    /// <summary>Field number for the "symbolLeverageBracketBean" field.</summary>
    public const int SymbolLeverageBracketBeanFieldNumber = 36;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Trading.SymbolLeverageBracketBean SymbolLeverageBracketBean {
      get { return responseTypeCase_ == ResponseTypeOneofCase.SymbolLeverageBracketBean ? (global::Lampyris.Crypto.Protocol.Trading.SymbolLeverageBracketBean) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.SymbolLeverageBracketBean;
      }
    }

    /// <summary>Field number for the "leverageBracketBean" field.</summary>
    public const int LeverageBracketBeanFieldNumber = 37;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Lampyris.Crypto.Protocol.Trading.LeverageBracketBean LeverageBracketBean {
      get { return responseTypeCase_ == ResponseTypeOneofCase.LeverageBracketBean ? (global::Lampyris.Crypto.Protocol.Trading.LeverageBracketBean) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.LeverageBracketBean;
      }
    }

    private object responseType_;
    /// <summary>Enum of possible cases for the "response_type" oneof.</summary>
    public enum ResponseTypeOneofCase {
      None = 0,
      AccountAssetInfoBean = 1,
      SubAccountInfoBean = 2,
      ResQuerySubAcccountList = 3,
      ResAccountSummaryUpdate = 4,
      AssetTransferHistoryInfoDetailBean = 5,
      AssetTransferHistoryInfoBean = 6,
      ResLogin = 7,
      ResHeartBeat = 8,
      ResNotice = 9,
      SymbolTickerDataBean = 10,
      ResSubscribeTickerData = 11,
      SymbolTradeDataBean = 12,
      TradeDataBean = 13,
      ResCandlestickQuery = 14,
      CandlestickUpdateBean = 15,
      CandlestickBean = 16,
      ResTradeRule = 17,
      SymbolTradeRuleBean = 18,
      MarketMonitorNoticeListBean = 19,
      MarketMonitorNoticeBean = 20,
      SelfSelectedSymbolInfoBean = 21,
      SelfSelectedSymbolGroupBean = 22,
      ResSelfSelectedSymbol = 23,
      StreategyConfigBean = 24,
      StreategyFieldBean = 25,
      ResModifyStreategySetting = 26,
      ResStreategySettings = 27,
      StrategyExectionInfoBean = 28,
      ResQueryStrategyExectionInfo = 29,
      ConditionTriggerBean = 30,
      OrderBean = 31,
      OrderStatusBean = 32,
      LeverageBean = 33,
      ResQueryLeverage = 34,
      ResQueryLeverageBracket = 35,
      SymbolLeverageBracketBean = 36,
      LeverageBracketBean = 37,
    }
    private ResponseTypeOneofCase responseTypeCase_ = ResponseTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResponseTypeOneofCase ResponseTypeCase {
      get { return responseTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResponseType() {
      responseTypeCase_ = ResponseTypeOneofCase.None;
      responseType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AccountAssetInfoBean, other.AccountAssetInfoBean)) return false;
      if (!object.Equals(SubAccountInfoBean, other.SubAccountInfoBean)) return false;
      if (!object.Equals(ResQuerySubAcccountList, other.ResQuerySubAcccountList)) return false;
      if (!object.Equals(ResAccountSummaryUpdate, other.ResAccountSummaryUpdate)) return false;
      if (!object.Equals(AssetTransferHistoryInfoDetailBean, other.AssetTransferHistoryInfoDetailBean)) return false;
      if (!object.Equals(AssetTransferHistoryInfoBean, other.AssetTransferHistoryInfoBean)) return false;
      if (!object.Equals(ResLogin, other.ResLogin)) return false;
      if (!object.Equals(ResHeartBeat, other.ResHeartBeat)) return false;
      if (!object.Equals(ResNotice, other.ResNotice)) return false;
      if (!object.Equals(SymbolTickerDataBean, other.SymbolTickerDataBean)) return false;
      if (!object.Equals(ResSubscribeTickerData, other.ResSubscribeTickerData)) return false;
      if (!object.Equals(SymbolTradeDataBean, other.SymbolTradeDataBean)) return false;
      if (!object.Equals(TradeDataBean, other.TradeDataBean)) return false;
      if (!object.Equals(ResCandlestickQuery, other.ResCandlestickQuery)) return false;
      if (!object.Equals(CandlestickUpdateBean, other.CandlestickUpdateBean)) return false;
      if (!object.Equals(CandlestickBean, other.CandlestickBean)) return false;
      if (!object.Equals(ResTradeRule, other.ResTradeRule)) return false;
      if (!object.Equals(SymbolTradeRuleBean, other.SymbolTradeRuleBean)) return false;
      if (!object.Equals(MarketMonitorNoticeListBean, other.MarketMonitorNoticeListBean)) return false;
      if (!object.Equals(MarketMonitorNoticeBean, other.MarketMonitorNoticeBean)) return false;
      if (!object.Equals(SelfSelectedSymbolInfoBean, other.SelfSelectedSymbolInfoBean)) return false;
      if (!object.Equals(SelfSelectedSymbolGroupBean, other.SelfSelectedSymbolGroupBean)) return false;
      if (!object.Equals(ResSelfSelectedSymbol, other.ResSelfSelectedSymbol)) return false;
      if (!object.Equals(StreategyConfigBean, other.StreategyConfigBean)) return false;
      if (!object.Equals(StreategyFieldBean, other.StreategyFieldBean)) return false;
      if (!object.Equals(ResModifyStreategySetting, other.ResModifyStreategySetting)) return false;
      if (!object.Equals(ResStreategySettings, other.ResStreategySettings)) return false;
      if (!object.Equals(StrategyExectionInfoBean, other.StrategyExectionInfoBean)) return false;
      if (!object.Equals(ResQueryStrategyExectionInfo, other.ResQueryStrategyExectionInfo)) return false;
      if (!object.Equals(ConditionTriggerBean, other.ConditionTriggerBean)) return false;
      if (!object.Equals(OrderBean, other.OrderBean)) return false;
      if (!object.Equals(OrderStatusBean, other.OrderStatusBean)) return false;
      if (!object.Equals(LeverageBean, other.LeverageBean)) return false;
      if (!object.Equals(ResQueryLeverage, other.ResQueryLeverage)) return false;
      if (!object.Equals(ResQueryLeverageBracket, other.ResQueryLeverageBracket)) return false;
      if (!object.Equals(SymbolLeverageBracketBean, other.SymbolLeverageBracketBean)) return false;
      if (!object.Equals(LeverageBracketBean, other.LeverageBracketBean)) return false;
      if (ResponseTypeCase != other.ResponseTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (responseTypeCase_ == ResponseTypeOneofCase.AccountAssetInfoBean) hash ^= AccountAssetInfoBean.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.SubAccountInfoBean) hash ^= SubAccountInfoBean.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.ResQuerySubAcccountList) hash ^= ResQuerySubAcccountList.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.ResAccountSummaryUpdate) hash ^= ResAccountSummaryUpdate.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.AssetTransferHistoryInfoDetailBean) hash ^= AssetTransferHistoryInfoDetailBean.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.AssetTransferHistoryInfoBean) hash ^= AssetTransferHistoryInfoBean.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.ResLogin) hash ^= ResLogin.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.ResHeartBeat) hash ^= ResHeartBeat.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.ResNotice) hash ^= ResNotice.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.SymbolTickerDataBean) hash ^= SymbolTickerDataBean.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.ResSubscribeTickerData) hash ^= ResSubscribeTickerData.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.SymbolTradeDataBean) hash ^= SymbolTradeDataBean.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.TradeDataBean) hash ^= TradeDataBean.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.ResCandlestickQuery) hash ^= ResCandlestickQuery.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.CandlestickUpdateBean) hash ^= CandlestickUpdateBean.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.CandlestickBean) hash ^= CandlestickBean.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.ResTradeRule) hash ^= ResTradeRule.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.SymbolTradeRuleBean) hash ^= SymbolTradeRuleBean.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.MarketMonitorNoticeListBean) hash ^= MarketMonitorNoticeListBean.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.MarketMonitorNoticeBean) hash ^= MarketMonitorNoticeBean.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.SelfSelectedSymbolInfoBean) hash ^= SelfSelectedSymbolInfoBean.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.SelfSelectedSymbolGroupBean) hash ^= SelfSelectedSymbolGroupBean.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.ResSelfSelectedSymbol) hash ^= ResSelfSelectedSymbol.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.StreategyConfigBean) hash ^= StreategyConfigBean.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.StreategyFieldBean) hash ^= StreategyFieldBean.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.ResModifyStreategySetting) hash ^= ResModifyStreategySetting.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.ResStreategySettings) hash ^= ResStreategySettings.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.StrategyExectionInfoBean) hash ^= StrategyExectionInfoBean.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.ResQueryStrategyExectionInfo) hash ^= ResQueryStrategyExectionInfo.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.ConditionTriggerBean) hash ^= ConditionTriggerBean.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.OrderBean) hash ^= OrderBean.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.OrderStatusBean) hash ^= OrderStatusBean.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.LeverageBean) hash ^= LeverageBean.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.ResQueryLeverage) hash ^= ResQueryLeverage.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.ResQueryLeverageBracket) hash ^= ResQueryLeverageBracket.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.SymbolLeverageBracketBean) hash ^= SymbolLeverageBracketBean.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.LeverageBracketBean) hash ^= LeverageBracketBean.GetHashCode();
      hash ^= (int) responseTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (responseTypeCase_ == ResponseTypeOneofCase.AccountAssetInfoBean) {
        output.WriteRawTag(10);
        output.WriteMessage(AccountAssetInfoBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.SubAccountInfoBean) {
        output.WriteRawTag(18);
        output.WriteMessage(SubAccountInfoBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResQuerySubAcccountList) {
        output.WriteRawTag(26);
        output.WriteMessage(ResQuerySubAcccountList);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResAccountSummaryUpdate) {
        output.WriteRawTag(34);
        output.WriteMessage(ResAccountSummaryUpdate);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.AssetTransferHistoryInfoDetailBean) {
        output.WriteRawTag(42);
        output.WriteMessage(AssetTransferHistoryInfoDetailBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.AssetTransferHistoryInfoBean) {
        output.WriteRawTag(50);
        output.WriteMessage(AssetTransferHistoryInfoBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResLogin) {
        output.WriteRawTag(58);
        output.WriteMessage(ResLogin);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResHeartBeat) {
        output.WriteRawTag(66);
        output.WriteMessage(ResHeartBeat);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResNotice) {
        output.WriteRawTag(74);
        output.WriteMessage(ResNotice);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.SymbolTickerDataBean) {
        output.WriteRawTag(82);
        output.WriteMessage(SymbolTickerDataBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResSubscribeTickerData) {
        output.WriteRawTag(90);
        output.WriteMessage(ResSubscribeTickerData);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.SymbolTradeDataBean) {
        output.WriteRawTag(98);
        output.WriteMessage(SymbolTradeDataBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.TradeDataBean) {
        output.WriteRawTag(106);
        output.WriteMessage(TradeDataBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResCandlestickQuery) {
        output.WriteRawTag(114);
        output.WriteMessage(ResCandlestickQuery);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.CandlestickUpdateBean) {
        output.WriteRawTag(122);
        output.WriteMessage(CandlestickUpdateBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.CandlestickBean) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(CandlestickBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResTradeRule) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ResTradeRule);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.SymbolTradeRuleBean) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(SymbolTradeRuleBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.MarketMonitorNoticeListBean) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(MarketMonitorNoticeListBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.MarketMonitorNoticeBean) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(MarketMonitorNoticeBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.SelfSelectedSymbolInfoBean) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(SelfSelectedSymbolInfoBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.SelfSelectedSymbolGroupBean) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(SelfSelectedSymbolGroupBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResSelfSelectedSymbol) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(ResSelfSelectedSymbol);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.StreategyConfigBean) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(StreategyConfigBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.StreategyFieldBean) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(StreategyFieldBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResModifyStreategySetting) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(ResModifyStreategySetting);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResStreategySettings) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(ResStreategySettings);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.StrategyExectionInfoBean) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(StrategyExectionInfoBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResQueryStrategyExectionInfo) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(ResQueryStrategyExectionInfo);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ConditionTriggerBean) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(ConditionTriggerBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.OrderBean) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(OrderBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.OrderStatusBean) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(OrderStatusBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.LeverageBean) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(LeverageBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResQueryLeverage) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(ResQueryLeverage);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResQueryLeverageBracket) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(ResQueryLeverageBracket);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.SymbolLeverageBracketBean) {
        output.WriteRawTag(162, 2);
        output.WriteMessage(SymbolLeverageBracketBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.LeverageBracketBean) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(LeverageBracketBean);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (responseTypeCase_ == ResponseTypeOneofCase.AccountAssetInfoBean) {
        output.WriteRawTag(10);
        output.WriteMessage(AccountAssetInfoBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.SubAccountInfoBean) {
        output.WriteRawTag(18);
        output.WriteMessage(SubAccountInfoBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResQuerySubAcccountList) {
        output.WriteRawTag(26);
        output.WriteMessage(ResQuerySubAcccountList);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResAccountSummaryUpdate) {
        output.WriteRawTag(34);
        output.WriteMessage(ResAccountSummaryUpdate);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.AssetTransferHistoryInfoDetailBean) {
        output.WriteRawTag(42);
        output.WriteMessage(AssetTransferHistoryInfoDetailBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.AssetTransferHistoryInfoBean) {
        output.WriteRawTag(50);
        output.WriteMessage(AssetTransferHistoryInfoBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResLogin) {
        output.WriteRawTag(58);
        output.WriteMessage(ResLogin);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResHeartBeat) {
        output.WriteRawTag(66);
        output.WriteMessage(ResHeartBeat);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResNotice) {
        output.WriteRawTag(74);
        output.WriteMessage(ResNotice);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.SymbolTickerDataBean) {
        output.WriteRawTag(82);
        output.WriteMessage(SymbolTickerDataBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResSubscribeTickerData) {
        output.WriteRawTag(90);
        output.WriteMessage(ResSubscribeTickerData);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.SymbolTradeDataBean) {
        output.WriteRawTag(98);
        output.WriteMessage(SymbolTradeDataBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.TradeDataBean) {
        output.WriteRawTag(106);
        output.WriteMessage(TradeDataBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResCandlestickQuery) {
        output.WriteRawTag(114);
        output.WriteMessage(ResCandlestickQuery);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.CandlestickUpdateBean) {
        output.WriteRawTag(122);
        output.WriteMessage(CandlestickUpdateBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.CandlestickBean) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(CandlestickBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResTradeRule) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(ResTradeRule);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.SymbolTradeRuleBean) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(SymbolTradeRuleBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.MarketMonitorNoticeListBean) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(MarketMonitorNoticeListBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.MarketMonitorNoticeBean) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(MarketMonitorNoticeBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.SelfSelectedSymbolInfoBean) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(SelfSelectedSymbolInfoBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.SelfSelectedSymbolGroupBean) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(SelfSelectedSymbolGroupBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResSelfSelectedSymbol) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(ResSelfSelectedSymbol);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.StreategyConfigBean) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(StreategyConfigBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.StreategyFieldBean) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(StreategyFieldBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResModifyStreategySetting) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(ResModifyStreategySetting);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResStreategySettings) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(ResStreategySettings);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.StrategyExectionInfoBean) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(StrategyExectionInfoBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResQueryStrategyExectionInfo) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(ResQueryStrategyExectionInfo);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ConditionTriggerBean) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(ConditionTriggerBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.OrderBean) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(OrderBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.OrderStatusBean) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(OrderStatusBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.LeverageBean) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(LeverageBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResQueryLeverage) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(ResQueryLeverage);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResQueryLeverageBracket) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(ResQueryLeverageBracket);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.SymbolLeverageBracketBean) {
        output.WriteRawTag(162, 2);
        output.WriteMessage(SymbolLeverageBracketBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.LeverageBracketBean) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(LeverageBracketBean);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (responseTypeCase_ == ResponseTypeOneofCase.AccountAssetInfoBean) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountAssetInfoBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.SubAccountInfoBean) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubAccountInfoBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResQuerySubAcccountList) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResQuerySubAcccountList);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResAccountSummaryUpdate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResAccountSummaryUpdate);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.AssetTransferHistoryInfoDetailBean) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AssetTransferHistoryInfoDetailBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.AssetTransferHistoryInfoBean) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AssetTransferHistoryInfoBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResLogin) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResLogin);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResHeartBeat) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResHeartBeat);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResNotice) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResNotice);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.SymbolTickerDataBean) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SymbolTickerDataBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResSubscribeTickerData) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResSubscribeTickerData);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.SymbolTradeDataBean) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SymbolTradeDataBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.TradeDataBean) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TradeDataBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResCandlestickQuery) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResCandlestickQuery);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.CandlestickUpdateBean) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CandlestickUpdateBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.CandlestickBean) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CandlestickBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResTradeRule) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ResTradeRule);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.SymbolTradeRuleBean) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SymbolTradeRuleBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.MarketMonitorNoticeListBean) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MarketMonitorNoticeListBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.MarketMonitorNoticeBean) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MarketMonitorNoticeBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.SelfSelectedSymbolInfoBean) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SelfSelectedSymbolInfoBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.SelfSelectedSymbolGroupBean) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SelfSelectedSymbolGroupBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResSelfSelectedSymbol) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ResSelfSelectedSymbol);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.StreategyConfigBean) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StreategyConfigBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.StreategyFieldBean) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StreategyFieldBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResModifyStreategySetting) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ResModifyStreategySetting);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResStreategySettings) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ResStreategySettings);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.StrategyExectionInfoBean) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StrategyExectionInfoBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResQueryStrategyExectionInfo) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ResQueryStrategyExectionInfo);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ConditionTriggerBean) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ConditionTriggerBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.OrderBean) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OrderBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.OrderStatusBean) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OrderStatusBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.LeverageBean) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LeverageBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResQueryLeverage) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ResQueryLeverage);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ResQueryLeverageBracket) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ResQueryLeverageBracket);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.SymbolLeverageBracketBean) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SymbolLeverageBracketBean);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.LeverageBracketBean) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LeverageBracketBean);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      switch (other.ResponseTypeCase) {
        case ResponseTypeOneofCase.AccountAssetInfoBean:
          if (AccountAssetInfoBean == null) {
            AccountAssetInfoBean = new global::Lampyris.Crypto.Protocol.Account.AccountAssetInfoBean();
          }
          AccountAssetInfoBean.MergeFrom(other.AccountAssetInfoBean);
          break;
        case ResponseTypeOneofCase.SubAccountInfoBean:
          if (SubAccountInfoBean == null) {
            SubAccountInfoBean = new global::Lampyris.Crypto.Protocol.Account.SubAccountInfoBean();
          }
          SubAccountInfoBean.MergeFrom(other.SubAccountInfoBean);
          break;
        case ResponseTypeOneofCase.ResQuerySubAcccountList:
          if (ResQuerySubAcccountList == null) {
            ResQuerySubAcccountList = new global::Lampyris.Crypto.Protocol.Account.ResQuerySubAcccountList();
          }
          ResQuerySubAcccountList.MergeFrom(other.ResQuerySubAcccountList);
          break;
        case ResponseTypeOneofCase.ResAccountSummaryUpdate:
          if (ResAccountSummaryUpdate == null) {
            ResAccountSummaryUpdate = new global::Lampyris.Crypto.Protocol.Account.ResAccountSummaryUpdate();
          }
          ResAccountSummaryUpdate.MergeFrom(other.ResAccountSummaryUpdate);
          break;
        case ResponseTypeOneofCase.AssetTransferHistoryInfoDetailBean:
          if (AssetTransferHistoryInfoDetailBean == null) {
            AssetTransferHistoryInfoDetailBean = new global::Lampyris.Crypto.Protocol.Account.AssetTransferHistoryInfoDetailBean();
          }
          AssetTransferHistoryInfoDetailBean.MergeFrom(other.AssetTransferHistoryInfoDetailBean);
          break;
        case ResponseTypeOneofCase.AssetTransferHistoryInfoBean:
          if (AssetTransferHistoryInfoBean == null) {
            AssetTransferHistoryInfoBean = new global::Lampyris.Crypto.Protocol.Account.AssetTransferHistoryInfoBean();
          }
          AssetTransferHistoryInfoBean.MergeFrom(other.AssetTransferHistoryInfoBean);
          break;
        case ResponseTypeOneofCase.ResLogin:
          if (ResLogin == null) {
            ResLogin = new global::Lampyris.Crypto.Protocol.App.ResLogin();
          }
          ResLogin.MergeFrom(other.ResLogin);
          break;
        case ResponseTypeOneofCase.ResHeartBeat:
          if (ResHeartBeat == null) {
            ResHeartBeat = new global::Lampyris.Crypto.Protocol.App.ResHeartBeat();
          }
          ResHeartBeat.MergeFrom(other.ResHeartBeat);
          break;
        case ResponseTypeOneofCase.ResNotice:
          if (ResNotice == null) {
            ResNotice = new global::Lampyris.Crypto.Protocol.App.ResNotice();
          }
          ResNotice.MergeFrom(other.ResNotice);
          break;
        case ResponseTypeOneofCase.SymbolTickerDataBean:
          if (SymbolTickerDataBean == null) {
            SymbolTickerDataBean = new global::Lampyris.Crypto.Protocol.Quote.SymbolTickerDataBean();
          }
          SymbolTickerDataBean.MergeFrom(other.SymbolTickerDataBean);
          break;
        case ResponseTypeOneofCase.ResSubscribeTickerData:
          if (ResSubscribeTickerData == null) {
            ResSubscribeTickerData = new global::Lampyris.Crypto.Protocol.Quote.ResSubscribeTickerData();
          }
          ResSubscribeTickerData.MergeFrom(other.ResSubscribeTickerData);
          break;
        case ResponseTypeOneofCase.SymbolTradeDataBean:
          if (SymbolTradeDataBean == null) {
            SymbolTradeDataBean = new global::Lampyris.Crypto.Protocol.Quote.SymbolTradeDataBean();
          }
          SymbolTradeDataBean.MergeFrom(other.SymbolTradeDataBean);
          break;
        case ResponseTypeOneofCase.TradeDataBean:
          if (TradeDataBean == null) {
            TradeDataBean = new global::Lampyris.Crypto.Protocol.Quote.TradeDataBean();
          }
          TradeDataBean.MergeFrom(other.TradeDataBean);
          break;
        case ResponseTypeOneofCase.ResCandlestickQuery:
          if (ResCandlestickQuery == null) {
            ResCandlestickQuery = new global::Lampyris.Crypto.Protocol.Quote.ResCandlestickQuery();
          }
          ResCandlestickQuery.MergeFrom(other.ResCandlestickQuery);
          break;
        case ResponseTypeOneofCase.CandlestickUpdateBean:
          if (CandlestickUpdateBean == null) {
            CandlestickUpdateBean = new global::Lampyris.Crypto.Protocol.Quote.CandlestickUpdateBean();
          }
          CandlestickUpdateBean.MergeFrom(other.CandlestickUpdateBean);
          break;
        case ResponseTypeOneofCase.CandlestickBean:
          if (CandlestickBean == null) {
            CandlestickBean = new global::Lampyris.Crypto.Protocol.Quote.CandlestickBean();
          }
          CandlestickBean.MergeFrom(other.CandlestickBean);
          break;
        case ResponseTypeOneofCase.ResTradeRule:
          if (ResTradeRule == null) {
            ResTradeRule = new global::Lampyris.Crypto.Protocol.Quote.ResTradeRule();
          }
          ResTradeRule.MergeFrom(other.ResTradeRule);
          break;
        case ResponseTypeOneofCase.SymbolTradeRuleBean:
          if (SymbolTradeRuleBean == null) {
            SymbolTradeRuleBean = new global::Lampyris.Crypto.Protocol.Quote.SymbolTradeRuleBean();
          }
          SymbolTradeRuleBean.MergeFrom(other.SymbolTradeRuleBean);
          break;
        case ResponseTypeOneofCase.MarketMonitorNoticeListBean:
          if (MarketMonitorNoticeListBean == null) {
            MarketMonitorNoticeListBean = new global::Lampyris.Crypto.Protocol.Quote.MarketMonitorNoticeListBean();
          }
          MarketMonitorNoticeListBean.MergeFrom(other.MarketMonitorNoticeListBean);
          break;
        case ResponseTypeOneofCase.MarketMonitorNoticeBean:
          if (MarketMonitorNoticeBean == null) {
            MarketMonitorNoticeBean = new global::Lampyris.Crypto.Protocol.Quote.MarketMonitorNoticeBean();
          }
          MarketMonitorNoticeBean.MergeFrom(other.MarketMonitorNoticeBean);
          break;
        case ResponseTypeOneofCase.SelfSelectedSymbolInfoBean:
          if (SelfSelectedSymbolInfoBean == null) {
            SelfSelectedSymbolInfoBean = new global::Lampyris.Crypto.Protocol.Quote.SelfSelectedSymbolInfoBean();
          }
          SelfSelectedSymbolInfoBean.MergeFrom(other.SelfSelectedSymbolInfoBean);
          break;
        case ResponseTypeOneofCase.SelfSelectedSymbolGroupBean:
          if (SelfSelectedSymbolGroupBean == null) {
            SelfSelectedSymbolGroupBean = new global::Lampyris.Crypto.Protocol.Quote.SelfSelectedSymbolGroupBean();
          }
          SelfSelectedSymbolGroupBean.MergeFrom(other.SelfSelectedSymbolGroupBean);
          break;
        case ResponseTypeOneofCase.ResSelfSelectedSymbol:
          if (ResSelfSelectedSymbol == null) {
            ResSelfSelectedSymbol = new global::Lampyris.Crypto.Protocol.Quote.ResSelfSelectedSymbol();
          }
          ResSelfSelectedSymbol.MergeFrom(other.ResSelfSelectedSymbol);
          break;
        case ResponseTypeOneofCase.StreategyConfigBean:
          if (StreategyConfigBean == null) {
            StreategyConfigBean = new global::Lampyris.Crypto.Protocol.Strategy.StreategyConfigBean();
          }
          StreategyConfigBean.MergeFrom(other.StreategyConfigBean);
          break;
        case ResponseTypeOneofCase.StreategyFieldBean:
          if (StreategyFieldBean == null) {
            StreategyFieldBean = new global::Lampyris.Crypto.Protocol.Strategy.StreategyFieldBean();
          }
          StreategyFieldBean.MergeFrom(other.StreategyFieldBean);
          break;
        case ResponseTypeOneofCase.ResModifyStreategySetting:
          if (ResModifyStreategySetting == null) {
            ResModifyStreategySetting = new global::Lampyris.Crypto.Protocol.Strategy.ResModifyStreategySetting();
          }
          ResModifyStreategySetting.MergeFrom(other.ResModifyStreategySetting);
          break;
        case ResponseTypeOneofCase.ResStreategySettings:
          if (ResStreategySettings == null) {
            ResStreategySettings = new global::Lampyris.Crypto.Protocol.Strategy.ResStreategySettings();
          }
          ResStreategySettings.MergeFrom(other.ResStreategySettings);
          break;
        case ResponseTypeOneofCase.StrategyExectionInfoBean:
          if (StrategyExectionInfoBean == null) {
            StrategyExectionInfoBean = new global::Lampyris.Crypto.Protocol.Strategy.StrategyExectionInfoBean();
          }
          StrategyExectionInfoBean.MergeFrom(other.StrategyExectionInfoBean);
          break;
        case ResponseTypeOneofCase.ResQueryStrategyExectionInfo:
          if (ResQueryStrategyExectionInfo == null) {
            ResQueryStrategyExectionInfo = new global::Lampyris.Crypto.Protocol.Strategy.ResQueryStrategyExectionInfo();
          }
          ResQueryStrategyExectionInfo.MergeFrom(other.ResQueryStrategyExectionInfo);
          break;
        case ResponseTypeOneofCase.ConditionTriggerBean:
          if (ConditionTriggerBean == null) {
            ConditionTriggerBean = new global::Lampyris.Crypto.Protocol.Trading.ConditionTriggerBean();
          }
          ConditionTriggerBean.MergeFrom(other.ConditionTriggerBean);
          break;
        case ResponseTypeOneofCase.OrderBean:
          if (OrderBean == null) {
            OrderBean = new global::Lampyris.Crypto.Protocol.Trading.OrderBean();
          }
          OrderBean.MergeFrom(other.OrderBean);
          break;
        case ResponseTypeOneofCase.OrderStatusBean:
          if (OrderStatusBean == null) {
            OrderStatusBean = new global::Lampyris.Crypto.Protocol.Trading.OrderStatusBean();
          }
          OrderStatusBean.MergeFrom(other.OrderStatusBean);
          break;
        case ResponseTypeOneofCase.LeverageBean:
          if (LeverageBean == null) {
            LeverageBean = new global::Lampyris.Crypto.Protocol.Trading.LeverageBean();
          }
          LeverageBean.MergeFrom(other.LeverageBean);
          break;
        case ResponseTypeOneofCase.ResQueryLeverage:
          if (ResQueryLeverage == null) {
            ResQueryLeverage = new global::Lampyris.Crypto.Protocol.Trading.ResQueryLeverage();
          }
          ResQueryLeverage.MergeFrom(other.ResQueryLeverage);
          break;
        case ResponseTypeOneofCase.ResQueryLeverageBracket:
          if (ResQueryLeverageBracket == null) {
            ResQueryLeverageBracket = new global::Lampyris.Crypto.Protocol.Trading.ResQueryLeverageBracket();
          }
          ResQueryLeverageBracket.MergeFrom(other.ResQueryLeverageBracket);
          break;
        case ResponseTypeOneofCase.SymbolLeverageBracketBean:
          if (SymbolLeverageBracketBean == null) {
            SymbolLeverageBracketBean = new global::Lampyris.Crypto.Protocol.Trading.SymbolLeverageBracketBean();
          }
          SymbolLeverageBracketBean.MergeFrom(other.SymbolLeverageBracketBean);
          break;
        case ResponseTypeOneofCase.LeverageBracketBean:
          if (LeverageBracketBean == null) {
            LeverageBracketBean = new global::Lampyris.Crypto.Protocol.Trading.LeverageBracketBean();
          }
          LeverageBracketBean.MergeFrom(other.LeverageBracketBean);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Lampyris.Crypto.Protocol.Account.AccountAssetInfoBean subBuilder = new global::Lampyris.Crypto.Protocol.Account.AccountAssetInfoBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.AccountAssetInfoBean) {
              subBuilder.MergeFrom(AccountAssetInfoBean);
            }
            input.ReadMessage(subBuilder);
            AccountAssetInfoBean = subBuilder;
            break;
          }
          case 18: {
            global::Lampyris.Crypto.Protocol.Account.SubAccountInfoBean subBuilder = new global::Lampyris.Crypto.Protocol.Account.SubAccountInfoBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.SubAccountInfoBean) {
              subBuilder.MergeFrom(SubAccountInfoBean);
            }
            input.ReadMessage(subBuilder);
            SubAccountInfoBean = subBuilder;
            break;
          }
          case 26: {
            global::Lampyris.Crypto.Protocol.Account.ResQuerySubAcccountList subBuilder = new global::Lampyris.Crypto.Protocol.Account.ResQuerySubAcccountList();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResQuerySubAcccountList) {
              subBuilder.MergeFrom(ResQuerySubAcccountList);
            }
            input.ReadMessage(subBuilder);
            ResQuerySubAcccountList = subBuilder;
            break;
          }
          case 34: {
            global::Lampyris.Crypto.Protocol.Account.ResAccountSummaryUpdate subBuilder = new global::Lampyris.Crypto.Protocol.Account.ResAccountSummaryUpdate();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResAccountSummaryUpdate) {
              subBuilder.MergeFrom(ResAccountSummaryUpdate);
            }
            input.ReadMessage(subBuilder);
            ResAccountSummaryUpdate = subBuilder;
            break;
          }
          case 42: {
            global::Lampyris.Crypto.Protocol.Account.AssetTransferHistoryInfoDetailBean subBuilder = new global::Lampyris.Crypto.Protocol.Account.AssetTransferHistoryInfoDetailBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.AssetTransferHistoryInfoDetailBean) {
              subBuilder.MergeFrom(AssetTransferHistoryInfoDetailBean);
            }
            input.ReadMessage(subBuilder);
            AssetTransferHistoryInfoDetailBean = subBuilder;
            break;
          }
          case 50: {
            global::Lampyris.Crypto.Protocol.Account.AssetTransferHistoryInfoBean subBuilder = new global::Lampyris.Crypto.Protocol.Account.AssetTransferHistoryInfoBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.AssetTransferHistoryInfoBean) {
              subBuilder.MergeFrom(AssetTransferHistoryInfoBean);
            }
            input.ReadMessage(subBuilder);
            AssetTransferHistoryInfoBean = subBuilder;
            break;
          }
          case 58: {
            global::Lampyris.Crypto.Protocol.App.ResLogin subBuilder = new global::Lampyris.Crypto.Protocol.App.ResLogin();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResLogin) {
              subBuilder.MergeFrom(ResLogin);
            }
            input.ReadMessage(subBuilder);
            ResLogin = subBuilder;
            break;
          }
          case 66: {
            global::Lampyris.Crypto.Protocol.App.ResHeartBeat subBuilder = new global::Lampyris.Crypto.Protocol.App.ResHeartBeat();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResHeartBeat) {
              subBuilder.MergeFrom(ResHeartBeat);
            }
            input.ReadMessage(subBuilder);
            ResHeartBeat = subBuilder;
            break;
          }
          case 74: {
            global::Lampyris.Crypto.Protocol.App.ResNotice subBuilder = new global::Lampyris.Crypto.Protocol.App.ResNotice();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResNotice) {
              subBuilder.MergeFrom(ResNotice);
            }
            input.ReadMessage(subBuilder);
            ResNotice = subBuilder;
            break;
          }
          case 82: {
            global::Lampyris.Crypto.Protocol.Quote.SymbolTickerDataBean subBuilder = new global::Lampyris.Crypto.Protocol.Quote.SymbolTickerDataBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.SymbolTickerDataBean) {
              subBuilder.MergeFrom(SymbolTickerDataBean);
            }
            input.ReadMessage(subBuilder);
            SymbolTickerDataBean = subBuilder;
            break;
          }
          case 90: {
            global::Lampyris.Crypto.Protocol.Quote.ResSubscribeTickerData subBuilder = new global::Lampyris.Crypto.Protocol.Quote.ResSubscribeTickerData();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResSubscribeTickerData) {
              subBuilder.MergeFrom(ResSubscribeTickerData);
            }
            input.ReadMessage(subBuilder);
            ResSubscribeTickerData = subBuilder;
            break;
          }
          case 98: {
            global::Lampyris.Crypto.Protocol.Quote.SymbolTradeDataBean subBuilder = new global::Lampyris.Crypto.Protocol.Quote.SymbolTradeDataBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.SymbolTradeDataBean) {
              subBuilder.MergeFrom(SymbolTradeDataBean);
            }
            input.ReadMessage(subBuilder);
            SymbolTradeDataBean = subBuilder;
            break;
          }
          case 106: {
            global::Lampyris.Crypto.Protocol.Quote.TradeDataBean subBuilder = new global::Lampyris.Crypto.Protocol.Quote.TradeDataBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.TradeDataBean) {
              subBuilder.MergeFrom(TradeDataBean);
            }
            input.ReadMessage(subBuilder);
            TradeDataBean = subBuilder;
            break;
          }
          case 114: {
            global::Lampyris.Crypto.Protocol.Quote.ResCandlestickQuery subBuilder = new global::Lampyris.Crypto.Protocol.Quote.ResCandlestickQuery();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResCandlestickQuery) {
              subBuilder.MergeFrom(ResCandlestickQuery);
            }
            input.ReadMessage(subBuilder);
            ResCandlestickQuery = subBuilder;
            break;
          }
          case 122: {
            global::Lampyris.Crypto.Protocol.Quote.CandlestickUpdateBean subBuilder = new global::Lampyris.Crypto.Protocol.Quote.CandlestickUpdateBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.CandlestickUpdateBean) {
              subBuilder.MergeFrom(CandlestickUpdateBean);
            }
            input.ReadMessage(subBuilder);
            CandlestickUpdateBean = subBuilder;
            break;
          }
          case 130: {
            global::Lampyris.Crypto.Protocol.Quote.CandlestickBean subBuilder = new global::Lampyris.Crypto.Protocol.Quote.CandlestickBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.CandlestickBean) {
              subBuilder.MergeFrom(CandlestickBean);
            }
            input.ReadMessage(subBuilder);
            CandlestickBean = subBuilder;
            break;
          }
          case 138: {
            global::Lampyris.Crypto.Protocol.Quote.ResTradeRule subBuilder = new global::Lampyris.Crypto.Protocol.Quote.ResTradeRule();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResTradeRule) {
              subBuilder.MergeFrom(ResTradeRule);
            }
            input.ReadMessage(subBuilder);
            ResTradeRule = subBuilder;
            break;
          }
          case 146: {
            global::Lampyris.Crypto.Protocol.Quote.SymbolTradeRuleBean subBuilder = new global::Lampyris.Crypto.Protocol.Quote.SymbolTradeRuleBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.SymbolTradeRuleBean) {
              subBuilder.MergeFrom(SymbolTradeRuleBean);
            }
            input.ReadMessage(subBuilder);
            SymbolTradeRuleBean = subBuilder;
            break;
          }
          case 154: {
            global::Lampyris.Crypto.Protocol.Quote.MarketMonitorNoticeListBean subBuilder = new global::Lampyris.Crypto.Protocol.Quote.MarketMonitorNoticeListBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.MarketMonitorNoticeListBean) {
              subBuilder.MergeFrom(MarketMonitorNoticeListBean);
            }
            input.ReadMessage(subBuilder);
            MarketMonitorNoticeListBean = subBuilder;
            break;
          }
          case 162: {
            global::Lampyris.Crypto.Protocol.Quote.MarketMonitorNoticeBean subBuilder = new global::Lampyris.Crypto.Protocol.Quote.MarketMonitorNoticeBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.MarketMonitorNoticeBean) {
              subBuilder.MergeFrom(MarketMonitorNoticeBean);
            }
            input.ReadMessage(subBuilder);
            MarketMonitorNoticeBean = subBuilder;
            break;
          }
          case 170: {
            global::Lampyris.Crypto.Protocol.Quote.SelfSelectedSymbolInfoBean subBuilder = new global::Lampyris.Crypto.Protocol.Quote.SelfSelectedSymbolInfoBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.SelfSelectedSymbolInfoBean) {
              subBuilder.MergeFrom(SelfSelectedSymbolInfoBean);
            }
            input.ReadMessage(subBuilder);
            SelfSelectedSymbolInfoBean = subBuilder;
            break;
          }
          case 178: {
            global::Lampyris.Crypto.Protocol.Quote.SelfSelectedSymbolGroupBean subBuilder = new global::Lampyris.Crypto.Protocol.Quote.SelfSelectedSymbolGroupBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.SelfSelectedSymbolGroupBean) {
              subBuilder.MergeFrom(SelfSelectedSymbolGroupBean);
            }
            input.ReadMessage(subBuilder);
            SelfSelectedSymbolGroupBean = subBuilder;
            break;
          }
          case 186: {
            global::Lampyris.Crypto.Protocol.Quote.ResSelfSelectedSymbol subBuilder = new global::Lampyris.Crypto.Protocol.Quote.ResSelfSelectedSymbol();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResSelfSelectedSymbol) {
              subBuilder.MergeFrom(ResSelfSelectedSymbol);
            }
            input.ReadMessage(subBuilder);
            ResSelfSelectedSymbol = subBuilder;
            break;
          }
          case 194: {
            global::Lampyris.Crypto.Protocol.Strategy.StreategyConfigBean subBuilder = new global::Lampyris.Crypto.Protocol.Strategy.StreategyConfigBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.StreategyConfigBean) {
              subBuilder.MergeFrom(StreategyConfigBean);
            }
            input.ReadMessage(subBuilder);
            StreategyConfigBean = subBuilder;
            break;
          }
          case 202: {
            global::Lampyris.Crypto.Protocol.Strategy.StreategyFieldBean subBuilder = new global::Lampyris.Crypto.Protocol.Strategy.StreategyFieldBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.StreategyFieldBean) {
              subBuilder.MergeFrom(StreategyFieldBean);
            }
            input.ReadMessage(subBuilder);
            StreategyFieldBean = subBuilder;
            break;
          }
          case 210: {
            global::Lampyris.Crypto.Protocol.Strategy.ResModifyStreategySetting subBuilder = new global::Lampyris.Crypto.Protocol.Strategy.ResModifyStreategySetting();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResModifyStreategySetting) {
              subBuilder.MergeFrom(ResModifyStreategySetting);
            }
            input.ReadMessage(subBuilder);
            ResModifyStreategySetting = subBuilder;
            break;
          }
          case 218: {
            global::Lampyris.Crypto.Protocol.Strategy.ResStreategySettings subBuilder = new global::Lampyris.Crypto.Protocol.Strategy.ResStreategySettings();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResStreategySettings) {
              subBuilder.MergeFrom(ResStreategySettings);
            }
            input.ReadMessage(subBuilder);
            ResStreategySettings = subBuilder;
            break;
          }
          case 226: {
            global::Lampyris.Crypto.Protocol.Strategy.StrategyExectionInfoBean subBuilder = new global::Lampyris.Crypto.Protocol.Strategy.StrategyExectionInfoBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.StrategyExectionInfoBean) {
              subBuilder.MergeFrom(StrategyExectionInfoBean);
            }
            input.ReadMessage(subBuilder);
            StrategyExectionInfoBean = subBuilder;
            break;
          }
          case 234: {
            global::Lampyris.Crypto.Protocol.Strategy.ResQueryStrategyExectionInfo subBuilder = new global::Lampyris.Crypto.Protocol.Strategy.ResQueryStrategyExectionInfo();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResQueryStrategyExectionInfo) {
              subBuilder.MergeFrom(ResQueryStrategyExectionInfo);
            }
            input.ReadMessage(subBuilder);
            ResQueryStrategyExectionInfo = subBuilder;
            break;
          }
          case 242: {
            global::Lampyris.Crypto.Protocol.Trading.ConditionTriggerBean subBuilder = new global::Lampyris.Crypto.Protocol.Trading.ConditionTriggerBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.ConditionTriggerBean) {
              subBuilder.MergeFrom(ConditionTriggerBean);
            }
            input.ReadMessage(subBuilder);
            ConditionTriggerBean = subBuilder;
            break;
          }
          case 250: {
            global::Lampyris.Crypto.Protocol.Trading.OrderBean subBuilder = new global::Lampyris.Crypto.Protocol.Trading.OrderBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.OrderBean) {
              subBuilder.MergeFrom(OrderBean);
            }
            input.ReadMessage(subBuilder);
            OrderBean = subBuilder;
            break;
          }
          case 258: {
            global::Lampyris.Crypto.Protocol.Trading.OrderStatusBean subBuilder = new global::Lampyris.Crypto.Protocol.Trading.OrderStatusBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.OrderStatusBean) {
              subBuilder.MergeFrom(OrderStatusBean);
            }
            input.ReadMessage(subBuilder);
            OrderStatusBean = subBuilder;
            break;
          }
          case 266: {
            global::Lampyris.Crypto.Protocol.Trading.LeverageBean subBuilder = new global::Lampyris.Crypto.Protocol.Trading.LeverageBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.LeverageBean) {
              subBuilder.MergeFrom(LeverageBean);
            }
            input.ReadMessage(subBuilder);
            LeverageBean = subBuilder;
            break;
          }
          case 274: {
            global::Lampyris.Crypto.Protocol.Trading.ResQueryLeverage subBuilder = new global::Lampyris.Crypto.Protocol.Trading.ResQueryLeverage();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResQueryLeverage) {
              subBuilder.MergeFrom(ResQueryLeverage);
            }
            input.ReadMessage(subBuilder);
            ResQueryLeverage = subBuilder;
            break;
          }
          case 282: {
            global::Lampyris.Crypto.Protocol.Trading.ResQueryLeverageBracket subBuilder = new global::Lampyris.Crypto.Protocol.Trading.ResQueryLeverageBracket();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResQueryLeverageBracket) {
              subBuilder.MergeFrom(ResQueryLeverageBracket);
            }
            input.ReadMessage(subBuilder);
            ResQueryLeverageBracket = subBuilder;
            break;
          }
          case 290: {
            global::Lampyris.Crypto.Protocol.Trading.SymbolLeverageBracketBean subBuilder = new global::Lampyris.Crypto.Protocol.Trading.SymbolLeverageBracketBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.SymbolLeverageBracketBean) {
              subBuilder.MergeFrom(SymbolLeverageBracketBean);
            }
            input.ReadMessage(subBuilder);
            SymbolLeverageBracketBean = subBuilder;
            break;
          }
          case 298: {
            global::Lampyris.Crypto.Protocol.Trading.LeverageBracketBean subBuilder = new global::Lampyris.Crypto.Protocol.Trading.LeverageBracketBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.LeverageBracketBean) {
              subBuilder.MergeFrom(LeverageBracketBean);
            }
            input.ReadMessage(subBuilder);
            LeverageBracketBean = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Lampyris.Crypto.Protocol.Account.AccountAssetInfoBean subBuilder = new global::Lampyris.Crypto.Protocol.Account.AccountAssetInfoBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.AccountAssetInfoBean) {
              subBuilder.MergeFrom(AccountAssetInfoBean);
            }
            input.ReadMessage(subBuilder);
            AccountAssetInfoBean = subBuilder;
            break;
          }
          case 18: {
            global::Lampyris.Crypto.Protocol.Account.SubAccountInfoBean subBuilder = new global::Lampyris.Crypto.Protocol.Account.SubAccountInfoBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.SubAccountInfoBean) {
              subBuilder.MergeFrom(SubAccountInfoBean);
            }
            input.ReadMessage(subBuilder);
            SubAccountInfoBean = subBuilder;
            break;
          }
          case 26: {
            global::Lampyris.Crypto.Protocol.Account.ResQuerySubAcccountList subBuilder = new global::Lampyris.Crypto.Protocol.Account.ResQuerySubAcccountList();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResQuerySubAcccountList) {
              subBuilder.MergeFrom(ResQuerySubAcccountList);
            }
            input.ReadMessage(subBuilder);
            ResQuerySubAcccountList = subBuilder;
            break;
          }
          case 34: {
            global::Lampyris.Crypto.Protocol.Account.ResAccountSummaryUpdate subBuilder = new global::Lampyris.Crypto.Protocol.Account.ResAccountSummaryUpdate();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResAccountSummaryUpdate) {
              subBuilder.MergeFrom(ResAccountSummaryUpdate);
            }
            input.ReadMessage(subBuilder);
            ResAccountSummaryUpdate = subBuilder;
            break;
          }
          case 42: {
            global::Lampyris.Crypto.Protocol.Account.AssetTransferHistoryInfoDetailBean subBuilder = new global::Lampyris.Crypto.Protocol.Account.AssetTransferHistoryInfoDetailBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.AssetTransferHistoryInfoDetailBean) {
              subBuilder.MergeFrom(AssetTransferHistoryInfoDetailBean);
            }
            input.ReadMessage(subBuilder);
            AssetTransferHistoryInfoDetailBean = subBuilder;
            break;
          }
          case 50: {
            global::Lampyris.Crypto.Protocol.Account.AssetTransferHistoryInfoBean subBuilder = new global::Lampyris.Crypto.Protocol.Account.AssetTransferHistoryInfoBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.AssetTransferHistoryInfoBean) {
              subBuilder.MergeFrom(AssetTransferHistoryInfoBean);
            }
            input.ReadMessage(subBuilder);
            AssetTransferHistoryInfoBean = subBuilder;
            break;
          }
          case 58: {
            global::Lampyris.Crypto.Protocol.App.ResLogin subBuilder = new global::Lampyris.Crypto.Protocol.App.ResLogin();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResLogin) {
              subBuilder.MergeFrom(ResLogin);
            }
            input.ReadMessage(subBuilder);
            ResLogin = subBuilder;
            break;
          }
          case 66: {
            global::Lampyris.Crypto.Protocol.App.ResHeartBeat subBuilder = new global::Lampyris.Crypto.Protocol.App.ResHeartBeat();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResHeartBeat) {
              subBuilder.MergeFrom(ResHeartBeat);
            }
            input.ReadMessage(subBuilder);
            ResHeartBeat = subBuilder;
            break;
          }
          case 74: {
            global::Lampyris.Crypto.Protocol.App.ResNotice subBuilder = new global::Lampyris.Crypto.Protocol.App.ResNotice();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResNotice) {
              subBuilder.MergeFrom(ResNotice);
            }
            input.ReadMessage(subBuilder);
            ResNotice = subBuilder;
            break;
          }
          case 82: {
            global::Lampyris.Crypto.Protocol.Quote.SymbolTickerDataBean subBuilder = new global::Lampyris.Crypto.Protocol.Quote.SymbolTickerDataBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.SymbolTickerDataBean) {
              subBuilder.MergeFrom(SymbolTickerDataBean);
            }
            input.ReadMessage(subBuilder);
            SymbolTickerDataBean = subBuilder;
            break;
          }
          case 90: {
            global::Lampyris.Crypto.Protocol.Quote.ResSubscribeTickerData subBuilder = new global::Lampyris.Crypto.Protocol.Quote.ResSubscribeTickerData();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResSubscribeTickerData) {
              subBuilder.MergeFrom(ResSubscribeTickerData);
            }
            input.ReadMessage(subBuilder);
            ResSubscribeTickerData = subBuilder;
            break;
          }
          case 98: {
            global::Lampyris.Crypto.Protocol.Quote.SymbolTradeDataBean subBuilder = new global::Lampyris.Crypto.Protocol.Quote.SymbolTradeDataBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.SymbolTradeDataBean) {
              subBuilder.MergeFrom(SymbolTradeDataBean);
            }
            input.ReadMessage(subBuilder);
            SymbolTradeDataBean = subBuilder;
            break;
          }
          case 106: {
            global::Lampyris.Crypto.Protocol.Quote.TradeDataBean subBuilder = new global::Lampyris.Crypto.Protocol.Quote.TradeDataBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.TradeDataBean) {
              subBuilder.MergeFrom(TradeDataBean);
            }
            input.ReadMessage(subBuilder);
            TradeDataBean = subBuilder;
            break;
          }
          case 114: {
            global::Lampyris.Crypto.Protocol.Quote.ResCandlestickQuery subBuilder = new global::Lampyris.Crypto.Protocol.Quote.ResCandlestickQuery();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResCandlestickQuery) {
              subBuilder.MergeFrom(ResCandlestickQuery);
            }
            input.ReadMessage(subBuilder);
            ResCandlestickQuery = subBuilder;
            break;
          }
          case 122: {
            global::Lampyris.Crypto.Protocol.Quote.CandlestickUpdateBean subBuilder = new global::Lampyris.Crypto.Protocol.Quote.CandlestickUpdateBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.CandlestickUpdateBean) {
              subBuilder.MergeFrom(CandlestickUpdateBean);
            }
            input.ReadMessage(subBuilder);
            CandlestickUpdateBean = subBuilder;
            break;
          }
          case 130: {
            global::Lampyris.Crypto.Protocol.Quote.CandlestickBean subBuilder = new global::Lampyris.Crypto.Protocol.Quote.CandlestickBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.CandlestickBean) {
              subBuilder.MergeFrom(CandlestickBean);
            }
            input.ReadMessage(subBuilder);
            CandlestickBean = subBuilder;
            break;
          }
          case 138: {
            global::Lampyris.Crypto.Protocol.Quote.ResTradeRule subBuilder = new global::Lampyris.Crypto.Protocol.Quote.ResTradeRule();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResTradeRule) {
              subBuilder.MergeFrom(ResTradeRule);
            }
            input.ReadMessage(subBuilder);
            ResTradeRule = subBuilder;
            break;
          }
          case 146: {
            global::Lampyris.Crypto.Protocol.Quote.SymbolTradeRuleBean subBuilder = new global::Lampyris.Crypto.Protocol.Quote.SymbolTradeRuleBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.SymbolTradeRuleBean) {
              subBuilder.MergeFrom(SymbolTradeRuleBean);
            }
            input.ReadMessage(subBuilder);
            SymbolTradeRuleBean = subBuilder;
            break;
          }
          case 154: {
            global::Lampyris.Crypto.Protocol.Quote.MarketMonitorNoticeListBean subBuilder = new global::Lampyris.Crypto.Protocol.Quote.MarketMonitorNoticeListBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.MarketMonitorNoticeListBean) {
              subBuilder.MergeFrom(MarketMonitorNoticeListBean);
            }
            input.ReadMessage(subBuilder);
            MarketMonitorNoticeListBean = subBuilder;
            break;
          }
          case 162: {
            global::Lampyris.Crypto.Protocol.Quote.MarketMonitorNoticeBean subBuilder = new global::Lampyris.Crypto.Protocol.Quote.MarketMonitorNoticeBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.MarketMonitorNoticeBean) {
              subBuilder.MergeFrom(MarketMonitorNoticeBean);
            }
            input.ReadMessage(subBuilder);
            MarketMonitorNoticeBean = subBuilder;
            break;
          }
          case 170: {
            global::Lampyris.Crypto.Protocol.Quote.SelfSelectedSymbolInfoBean subBuilder = new global::Lampyris.Crypto.Protocol.Quote.SelfSelectedSymbolInfoBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.SelfSelectedSymbolInfoBean) {
              subBuilder.MergeFrom(SelfSelectedSymbolInfoBean);
            }
            input.ReadMessage(subBuilder);
            SelfSelectedSymbolInfoBean = subBuilder;
            break;
          }
          case 178: {
            global::Lampyris.Crypto.Protocol.Quote.SelfSelectedSymbolGroupBean subBuilder = new global::Lampyris.Crypto.Protocol.Quote.SelfSelectedSymbolGroupBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.SelfSelectedSymbolGroupBean) {
              subBuilder.MergeFrom(SelfSelectedSymbolGroupBean);
            }
            input.ReadMessage(subBuilder);
            SelfSelectedSymbolGroupBean = subBuilder;
            break;
          }
          case 186: {
            global::Lampyris.Crypto.Protocol.Quote.ResSelfSelectedSymbol subBuilder = new global::Lampyris.Crypto.Protocol.Quote.ResSelfSelectedSymbol();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResSelfSelectedSymbol) {
              subBuilder.MergeFrom(ResSelfSelectedSymbol);
            }
            input.ReadMessage(subBuilder);
            ResSelfSelectedSymbol = subBuilder;
            break;
          }
          case 194: {
            global::Lampyris.Crypto.Protocol.Strategy.StreategyConfigBean subBuilder = new global::Lampyris.Crypto.Protocol.Strategy.StreategyConfigBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.StreategyConfigBean) {
              subBuilder.MergeFrom(StreategyConfigBean);
            }
            input.ReadMessage(subBuilder);
            StreategyConfigBean = subBuilder;
            break;
          }
          case 202: {
            global::Lampyris.Crypto.Protocol.Strategy.StreategyFieldBean subBuilder = new global::Lampyris.Crypto.Protocol.Strategy.StreategyFieldBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.StreategyFieldBean) {
              subBuilder.MergeFrom(StreategyFieldBean);
            }
            input.ReadMessage(subBuilder);
            StreategyFieldBean = subBuilder;
            break;
          }
          case 210: {
            global::Lampyris.Crypto.Protocol.Strategy.ResModifyStreategySetting subBuilder = new global::Lampyris.Crypto.Protocol.Strategy.ResModifyStreategySetting();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResModifyStreategySetting) {
              subBuilder.MergeFrom(ResModifyStreategySetting);
            }
            input.ReadMessage(subBuilder);
            ResModifyStreategySetting = subBuilder;
            break;
          }
          case 218: {
            global::Lampyris.Crypto.Protocol.Strategy.ResStreategySettings subBuilder = new global::Lampyris.Crypto.Protocol.Strategy.ResStreategySettings();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResStreategySettings) {
              subBuilder.MergeFrom(ResStreategySettings);
            }
            input.ReadMessage(subBuilder);
            ResStreategySettings = subBuilder;
            break;
          }
          case 226: {
            global::Lampyris.Crypto.Protocol.Strategy.StrategyExectionInfoBean subBuilder = new global::Lampyris.Crypto.Protocol.Strategy.StrategyExectionInfoBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.StrategyExectionInfoBean) {
              subBuilder.MergeFrom(StrategyExectionInfoBean);
            }
            input.ReadMessage(subBuilder);
            StrategyExectionInfoBean = subBuilder;
            break;
          }
          case 234: {
            global::Lampyris.Crypto.Protocol.Strategy.ResQueryStrategyExectionInfo subBuilder = new global::Lampyris.Crypto.Protocol.Strategy.ResQueryStrategyExectionInfo();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResQueryStrategyExectionInfo) {
              subBuilder.MergeFrom(ResQueryStrategyExectionInfo);
            }
            input.ReadMessage(subBuilder);
            ResQueryStrategyExectionInfo = subBuilder;
            break;
          }
          case 242: {
            global::Lampyris.Crypto.Protocol.Trading.ConditionTriggerBean subBuilder = new global::Lampyris.Crypto.Protocol.Trading.ConditionTriggerBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.ConditionTriggerBean) {
              subBuilder.MergeFrom(ConditionTriggerBean);
            }
            input.ReadMessage(subBuilder);
            ConditionTriggerBean = subBuilder;
            break;
          }
          case 250: {
            global::Lampyris.Crypto.Protocol.Trading.OrderBean subBuilder = new global::Lampyris.Crypto.Protocol.Trading.OrderBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.OrderBean) {
              subBuilder.MergeFrom(OrderBean);
            }
            input.ReadMessage(subBuilder);
            OrderBean = subBuilder;
            break;
          }
          case 258: {
            global::Lampyris.Crypto.Protocol.Trading.OrderStatusBean subBuilder = new global::Lampyris.Crypto.Protocol.Trading.OrderStatusBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.OrderStatusBean) {
              subBuilder.MergeFrom(OrderStatusBean);
            }
            input.ReadMessage(subBuilder);
            OrderStatusBean = subBuilder;
            break;
          }
          case 266: {
            global::Lampyris.Crypto.Protocol.Trading.LeverageBean subBuilder = new global::Lampyris.Crypto.Protocol.Trading.LeverageBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.LeverageBean) {
              subBuilder.MergeFrom(LeverageBean);
            }
            input.ReadMessage(subBuilder);
            LeverageBean = subBuilder;
            break;
          }
          case 274: {
            global::Lampyris.Crypto.Protocol.Trading.ResQueryLeverage subBuilder = new global::Lampyris.Crypto.Protocol.Trading.ResQueryLeverage();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResQueryLeverage) {
              subBuilder.MergeFrom(ResQueryLeverage);
            }
            input.ReadMessage(subBuilder);
            ResQueryLeverage = subBuilder;
            break;
          }
          case 282: {
            global::Lampyris.Crypto.Protocol.Trading.ResQueryLeverageBracket subBuilder = new global::Lampyris.Crypto.Protocol.Trading.ResQueryLeverageBracket();
            if (responseTypeCase_ == ResponseTypeOneofCase.ResQueryLeverageBracket) {
              subBuilder.MergeFrom(ResQueryLeverageBracket);
            }
            input.ReadMessage(subBuilder);
            ResQueryLeverageBracket = subBuilder;
            break;
          }
          case 290: {
            global::Lampyris.Crypto.Protocol.Trading.SymbolLeverageBracketBean subBuilder = new global::Lampyris.Crypto.Protocol.Trading.SymbolLeverageBracketBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.SymbolLeverageBracketBean) {
              subBuilder.MergeFrom(SymbolLeverageBracketBean);
            }
            input.ReadMessage(subBuilder);
            SymbolLeverageBracketBean = subBuilder;
            break;
          }
          case 298: {
            global::Lampyris.Crypto.Protocol.Trading.LeverageBracketBean subBuilder = new global::Lampyris.Crypto.Protocol.Trading.LeverageBracketBean();
            if (responseTypeCase_ == ResponseTypeOneofCase.LeverageBracketBean) {
              subBuilder.MergeFrom(LeverageBracketBean);
            }
            input.ReadMessage(subBuilder);
            LeverageBracketBean = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
